
#ifdef CLB_SIM
/*
 *  ======== clb_systemc.cpp ========
 *  DO NOT EDIT - This file is generated by the SysConfig tool.
 */

#include "systemc.h"

#define TYPE 	3

#include "CLB_LUT4_SC_model.h"
#include "CLB_counter_SC_model.h"
#include "CLB_OutputLUT_SC_model.h"
#include "CLB_HLC_SC_model.h"
#include "CLB_FSM_SC_model.h"
#include "CLB_Input_conditioner.h"
#include "squareWave.h"
#include "clb_config.h"

#if TYPE == 2

#include "CLB_counter_top_SC_model.h"
#include "CLB_FSM_top_SC_model.h"
#include "CLB_LUT4_top_SC_model.h"
#include "CLB_OutputLUT_top_SC_model.h"

#define DEVICE_CLB_OUTPUT_LUT   POTENZA_CLB_OUTPUT_LUT
#define DEVICE_CLB_HLC          POTENZA_CLB_HLC
#define DEVICE_CLB_LUT4         POTENZA_CLB_LUT4
#define DEVICE_CLB_FSM          POTENZA_CLB_FSM
#define DEVICE_CLB_COUNTER      POTENZA_CLB_COUNTER

#elif TYPE == 3

#include "CLB_counter_top_SC_model.h"
#include "CLB_FSM_top_SC_model.h"
#include "CLB_LUT4_top_SC_model.h"
#include "CLB_OutputLUT_top_SC_model.h"

#define DEVICE_CLB_OUTPUT_LUT   TENOR_CLB_OUTPUT_LUT
#define DEVICE_CLB_HLC          TENOR_CLB_HLC
#define DEVICE_CLB_LUT4         TENOR_CLB_LUT4
#define DEVICE_CLB_FSM          TENOR_CLB_FSM
#define DEVICE_CLB_COUNTER      TENOR_CLB_COUNTER

#elif   TYPE == 1

#define DEVICE_CLB_OUTPUT_LUT   SOPRANO_CLB_OUTPUT_LUT
#define DEVICE_CLB_HLC          SOPRANO_CLB_HLC
#define DEVICE_CLB_LUT4         SOPRANO_CLB_LUT4
#define DEVICE_CLB_FSM          SOPRANO_CLB_FSM
#define DEVICE_CLB_COUNTER      SOPRANO_CLB_COUNTER

#endif

#define i0 I0
#define i1 I1
#define i2 I2
#define i3 I3


SC_MODULE(Top)
{
    //Top Level Clock, Reset, Enable
    sc_clock              sc_top_clock;
    sc_signal<bool>       sc_top_reset;
    sc_signal<bool>       sc_top_enable;
    sc_signal<bool>       sc_zero;
    sc_signal<bool>       sc_one;

    DEVICE_CLB_OUTPUT_LUT  TILE1_OUTLUT_0;
    sc_signal<sc_uint<8> >  sig_TILE1_OUTLUT_0_fn;

    DEVICE_CLB_OUTPUT_LUT  TILE1_OUTLUT_1;
    sc_signal<sc_uint<8> >  sig_TILE1_OUTLUT_1_fn;

    DEVICE_CLB_OUTPUT_LUT  TILE1_OUTLUT_2;
    sc_signal<sc_uint<8> >  sig_TILE1_OUTLUT_2_fn;

    DEVICE_CLB_OUTPUT_LUT  TILE1_OUTLUT_3;
    sc_signal<sc_uint<8> >  sig_TILE1_OUTLUT_3_fn;

    DEVICE_CLB_OUTPUT_LUT  TILE1_OUTLUT_4;
    sc_signal<sc_uint<8> >  sig_TILE1_OUTLUT_4_fn;

    DEVICE_CLB_OUTPUT_LUT  TILE1_OUTLUT_5;
    sc_signal<sc_uint<8> >  sig_TILE1_OUTLUT_5_fn;

    DEVICE_CLB_OUTPUT_LUT  TILE1_OUTLUT_6;
    sc_signal<sc_uint<8> >  sig_TILE1_OUTLUT_6_fn;

    DEVICE_CLB_OUTPUT_LUT  TILE1_OUTLUT_7;
    sc_signal<sc_uint<8> >  sig_TILE1_OUTLUT_7_fn;

    DEVICE_CLB_LUT4        TILE1_LUT_0;
    sc_signal<sc_uint<16> > sig_TILE1_LUT_0_fn;
    sc_signal<bool>         sig_TILE1_LUT_0_OUT;

    DEVICE_CLB_LUT4        TILE1_LUT_1;
    sc_signal<sc_uint<16> > sig_TILE1_LUT_1_fn;
    sc_signal<bool>         sig_TILE1_LUT_1_OUT;

    DEVICE_CLB_LUT4        TILE1_LUT_2;
    sc_signal<sc_uint<16> > sig_TILE1_LUT_2_fn;
    sc_signal<bool>         sig_TILE1_LUT_2_OUT;

    DEVICE_CLB_FSM         TILE1_FSM_0;
    sc_signal<bool>         sig_TILE1_FSM_0_xe0_sel;
    sc_signal<bool>         sig_TILE1_FSM_0_xe1_sel;
    sc_signal<sc_uint<16> > sig_TILE1_FSM_0_S0_fn;
    sc_signal<sc_uint<16> > sig_TILE1_FSM_0_S1_fn;
    sc_signal<sc_uint<16> > sig_TILE1_FSM_0_OUT_LUT_fn;
    sc_signal<bool>         sig_TILE1_FSM_0_S0;
    sc_signal<bool>         sig_TILE1_FSM_0_S1;
    sc_signal<bool>         sig_TILE1_FSM_0_OUT;

    DEVICE_CLB_FSM         TILE1_FSM_1;
    sc_signal<bool>         sig_TILE1_FSM_1_xe0_sel;
    sc_signal<bool>         sig_TILE1_FSM_1_xe1_sel;
    sc_signal<sc_uint<16> > sig_TILE1_FSM_1_S0_fn;
    sc_signal<sc_uint<16> > sig_TILE1_FSM_1_S1_fn;
    sc_signal<sc_uint<16> > sig_TILE1_FSM_1_OUT_LUT_fn;
    sc_signal<bool>         sig_TILE1_FSM_1_S0;
    sc_signal<bool>         sig_TILE1_FSM_1_S1;
    sc_signal<bool>         sig_TILE1_FSM_1_OUT;

    DEVICE_CLB_FSM         TILE1_FSM_2;
    sc_signal<bool>         sig_TILE1_FSM_2_xe0_sel;
    sc_signal<bool>         sig_TILE1_FSM_2_xe1_sel;
    sc_signal<sc_uint<16> > sig_TILE1_FSM_2_S0_fn;
    sc_signal<sc_uint<16> > sig_TILE1_FSM_2_S1_fn;
    sc_signal<sc_uint<16> > sig_TILE1_FSM_2_OUT_LUT_fn;
    sc_signal<bool>         sig_TILE1_FSM_2_S0;
    sc_signal<bool>         sig_TILE1_FSM_2_S1;
    sc_signal<bool>         sig_TILE1_FSM_2_OUT;

    DEVICE_CLB_COUNTER     TILE1_COUNTER_0;
    sc_signal<bool>         sig_TILE1_COUNTER_0_add_shift_dir;
    sc_signal<bool>         sig_TILE1_COUNTER_0_add_shift_mode;
    sc_signal<bool>         sig_TILE1_COUNTER_0_add_shift_on_event_en;
    sc_signal<bool>         sig_TILE1_COUNTER_0_global_clk_en;
    sc_signal<bool>         sig_TILE1_COUNTER_0_glbl_load_en;
    sc_signal<sc_uint<32> > sig_TILE1_COUNTER_0_event_load_val;
    sc_signal<bool>         sig_TILE1_COUNTER_0_glbl_en;
    sc_signal<bool>         sig_TILE1_COUNTER_0_glbl_rst_n;
    sc_signal<bool>         sig_TILE1_COUNTER_0_match_en;
    sc_signal<sc_uint<32> > sig_TILE1_COUNTER_0_match1_val;
    sc_signal<sc_uint<32> > sig_TILE1_COUNTER_0_match2_val;
    sc_signal<bool>         sig_TILE1_COUNTER_0_glbl_serializer_mode;
    sc_signal<bool>         sig_TILE1_COUNTER_0_hlc_count_load_en;
    sc_signal<bool>         sig_TILE1_COUNTER_0_hlc_match1_load_en;
    sc_signal<bool>         sig_TILE1_COUNTER_0_hlc_match2_load_en;
    sc_signal<sc_uint<32> > sig_TILE1_COUNTER_0_count_out;
    sc_signal<bool>         sig_TILE1_COUNTER_0_count_zero;
    sc_signal<bool>         sig_TILE1_COUNTER_0_count_match1;
    sc_signal<bool>         sig_TILE1_COUNTER_0_count_match2;
#if TYPE == 2 || TYPE == 3
    sc_signal<bool>         sig_TILE1_COUNTER_0_lfsr_mode;
    sc_signal<bool>         sig_TILE1_COUNTER_0_match1_tap_en;
    sc_signal<sc_uint<5> >  sig_TILE1_COUNTER_0_match1_tap;
    sc_signal<bool>         sig_TILE1_COUNTER_0_match2_tap_en;
    sc_signal<sc_uint<5> >  sig_TILE1_COUNTER_0_match2_tap;
#endif
#if TYPE == 3
    sc_signal<bool>         sig_TILE1_COUNTER_0_RECONFIG_PIPELINE_EN;
#endif
    DEVICE_CLB_COUNTER     TILE1_COUNTER_1;
    sc_signal<bool>         sig_TILE1_COUNTER_1_add_shift_dir;
    sc_signal<bool>         sig_TILE1_COUNTER_1_add_shift_mode;
    sc_signal<bool>         sig_TILE1_COUNTER_1_add_shift_on_event_en;
    sc_signal<bool>         sig_TILE1_COUNTER_1_global_clk_en;
    sc_signal<bool>         sig_TILE1_COUNTER_1_glbl_load_en;
    sc_signal<sc_uint<32> > sig_TILE1_COUNTER_1_event_load_val;
    sc_signal<bool>         sig_TILE1_COUNTER_1_glbl_en;
    sc_signal<bool>         sig_TILE1_COUNTER_1_glbl_rst_n;
    sc_signal<bool>         sig_TILE1_COUNTER_1_match_en;
    sc_signal<sc_uint<32> > sig_TILE1_COUNTER_1_match1_val;
    sc_signal<sc_uint<32> > sig_TILE1_COUNTER_1_match2_val;
    sc_signal<bool>         sig_TILE1_COUNTER_1_glbl_serializer_mode;
    sc_signal<bool>         sig_TILE1_COUNTER_1_hlc_count_load_en;
    sc_signal<bool>         sig_TILE1_COUNTER_1_hlc_match1_load_en;
    sc_signal<bool>         sig_TILE1_COUNTER_1_hlc_match2_load_en;
    sc_signal<sc_uint<32> > sig_TILE1_COUNTER_1_count_out;
    sc_signal<bool>         sig_TILE1_COUNTER_1_count_zero;
    sc_signal<bool>         sig_TILE1_COUNTER_1_count_match1;
    sc_signal<bool>         sig_TILE1_COUNTER_1_count_match2;
#if TYPE == 2 || TYPE == 3
    sc_signal<bool>         sig_TILE1_COUNTER_1_lfsr_mode;
    sc_signal<bool>         sig_TILE1_COUNTER_1_match1_tap_en;
    sc_signal<sc_uint<5> >  sig_TILE1_COUNTER_1_match1_tap;
    sc_signal<bool>         sig_TILE1_COUNTER_1_match2_tap_en;
    sc_signal<sc_uint<5> >  sig_TILE1_COUNTER_1_match2_tap;
#endif
#if TYPE == 3
    sc_signal<bool>         sig_TILE1_COUNTER_1_RECONFIG_PIPELINE_EN;
#endif
    DEVICE_CLB_COUNTER     TILE1_COUNTER_2;
    sc_signal<bool>         sig_TILE1_COUNTER_2_add_shift_dir;
    sc_signal<bool>         sig_TILE1_COUNTER_2_add_shift_mode;
    sc_signal<bool>         sig_TILE1_COUNTER_2_add_shift_on_event_en;
    sc_signal<bool>         sig_TILE1_COUNTER_2_global_clk_en;
    sc_signal<bool>         sig_TILE1_COUNTER_2_glbl_load_en;
    sc_signal<sc_uint<32> > sig_TILE1_COUNTER_2_event_load_val;
    sc_signal<bool>         sig_TILE1_COUNTER_2_glbl_en;
    sc_signal<bool>         sig_TILE1_COUNTER_2_glbl_rst_n;
    sc_signal<bool>         sig_TILE1_COUNTER_2_match_en;
    sc_signal<sc_uint<32> > sig_TILE1_COUNTER_2_match1_val;
    sc_signal<sc_uint<32> > sig_TILE1_COUNTER_2_match2_val;
    sc_signal<bool>         sig_TILE1_COUNTER_2_glbl_serializer_mode;
    sc_signal<bool>         sig_TILE1_COUNTER_2_hlc_count_load_en;
    sc_signal<bool>         sig_TILE1_COUNTER_2_hlc_match1_load_en;
    sc_signal<bool>         sig_TILE1_COUNTER_2_hlc_match2_load_en;
    sc_signal<sc_uint<32> > sig_TILE1_COUNTER_2_count_out;
    sc_signal<bool>         sig_TILE1_COUNTER_2_count_zero;
    sc_signal<bool>         sig_TILE1_COUNTER_2_count_match1;
    sc_signal<bool>         sig_TILE1_COUNTER_2_count_match2;
#if TYPE == 2 || TYPE == 3
    sc_signal<bool>         sig_TILE1_COUNTER_2_lfsr_mode;
    sc_signal<bool>         sig_TILE1_COUNTER_2_match1_tap_en;
    sc_signal<sc_uint<5> >  sig_TILE1_COUNTER_2_match1_tap;
    sc_signal<bool>         sig_TILE1_COUNTER_2_match2_tap_en;
    sc_signal<sc_uint<5> >  sig_TILE1_COUNTER_2_match2_tap;
#endif
#if TYPE == 3
    sc_signal<bool>         sig_TILE1_COUNTER_2_RECONFIG_PIPELINE_EN;
#endif
    DEVICE_CLB_HLC         TILE1_HLC;
    sc_signal<sc_uint<32> >         sig_TILE1_HLC_e0;
    sc_signal<sc_uint<32> >         sig_TILE1_HLC_e1;
    sc_signal<sc_uint<32> >         sig_TILE1_HLC_e2;
    sc_signal<sc_uint<32> >         sig_TILE1_HLC_e3;
    sc_signal<sc_uint<32> >     sig_TILE1_HLC_P_comm_R0_out;
    sc_signal<sc_uint<32> >     sig_TILE1_HLC_P_comm_R1_out;
    sc_signal<sc_uint<32> >     sig_TILE1_HLC_P_comm_R2_out;
    sc_signal<sc_uint<32> >     sig_TILE1_HLC_P_comm_R3_out;

    sc_signal<bool>             sig_TILE1_HLC_P_push_data_en;
    sc_signal<sc_uint<32> >     sig_TILE1_HLC_P_push_data_out;
    sc_signal<bool>             sig_TILE1_HLC_P_pull_data_en;
    sc_signal<bool>             sig_TILE1_HLC_P_set_intr_flag;

    sc_signal<sc_uint<32> >     sig_TILE1_HLC_P_glbl_load_addr;
    sc_signal<sc_uint<32> >     sig_TILE1_HLC_P_glbl_load_value;
    sc_signal<sc_uint<32> >     sig_TILE1_HLC_P_pull_data_in;

	sc_signal<sc_uint<32> >     sig_TILE1_HLC_hlc_instr_0;
	sc_signal<sc_uint<32> >     sig_TILE1_HLC_hlc_instr_1;
	sc_signal<sc_uint<32> >     sig_TILE1_HLC_hlc_instr_2;
	sc_signal<sc_uint<32> >     sig_TILE1_HLC_hlc_instr_3;
	sc_signal<sc_uint<32> >     sig_TILE1_HLC_hlc_instr_4;
	sc_signal<sc_uint<32> >     sig_TILE1_HLC_hlc_instr_5;
	sc_signal<sc_uint<32> >     sig_TILE1_HLC_hlc_instr_6;
	sc_signal<sc_uint<32> >     sig_TILE1_HLC_hlc_instr_7;
	sc_signal<sc_uint<32> >     sig_TILE1_HLC_hlc_instr_8;
	sc_signal<sc_uint<32> >     sig_TILE1_HLC_hlc_instr_9;
	sc_signal<sc_uint<32> >     sig_TILE1_HLC_hlc_instr_10;
	sc_signal<sc_uint<32> >     sig_TILE1_HLC_hlc_instr_11;
	sc_signal<sc_uint<32> >     sig_TILE1_HLC_hlc_instr_12;
	sc_signal<sc_uint<32> >     sig_TILE1_HLC_hlc_instr_13;
	sc_signal<sc_uint<32> >     sig_TILE1_HLC_hlc_instr_14;
	sc_signal<sc_uint<32> >     sig_TILE1_HLC_hlc_instr_15;
	sc_signal<sc_uint<32> >     sig_TILE1_HLC_hlc_instr_16;
	sc_signal<sc_uint<32> >     sig_TILE1_HLC_hlc_instr_17;
	sc_signal<sc_uint<32> >     sig_TILE1_HLC_hlc_instr_18;
	sc_signal<sc_uint<32> >     sig_TILE1_HLC_hlc_instr_19;
	sc_signal<sc_uint<32> >     sig_TILE1_HLC_hlc_instr_20;
	sc_signal<sc_uint<32> >     sig_TILE1_HLC_hlc_instr_21;
	sc_signal<sc_uint<32> >     sig_TILE1_HLC_hlc_instr_22;
	sc_signal<sc_uint<32> >     sig_TILE1_HLC_hlc_instr_23;
	sc_signal<sc_uint<32> >     sig_TILE1_HLC_hlc_instr_24;
	sc_signal<sc_uint<32> >     sig_TILE1_HLC_hlc_instr_25;
	sc_signal<sc_uint<32> >     sig_TILE1_HLC_hlc_instr_26;
	sc_signal<sc_uint<32> >     sig_TILE1_HLC_hlc_instr_27;
	sc_signal<sc_uint<32> >     sig_TILE1_HLC_hlc_instr_28;
	sc_signal<sc_uint<32> >     sig_TILE1_HLC_hlc_instr_29;
	sc_signal<sc_uint<32> >     sig_TILE1_HLC_hlc_instr_30;
	sc_signal<sc_uint<32> >     sig_TILE1_HLC_hlc_instr_31;

	
    sc_signal<sc_uint<32> >     sig_TILE1_COUNTER_hlc_count_load_val;
#if TYPE == 2 || TYPE == 3
    sc_signal<bool>             sig_TILE1_HLC_ae0;
    sc_signal<bool>             sig_TILE1_HLC_ae1;
    sc_signal<bool>             sig_TILE1_HLC_ae2;
    sc_signal<bool>             sig_TILE1_HLC_ae3;
#endif

#if TYPE == 3
    sc_signal<bool>             sig_TILE1_HLC_RECONFIG_PIPELINE_EN;
#endif
    sc_signal<bool>         sig_TILE1_BOUNDARY_IN_in0;
    sc_signal<bool>         sig_TILE1_BOUNDARY_IN_in1;
    sc_signal<bool>         sig_TILE1_BOUNDARY_IN_in2;
    sc_signal<bool>         sig_TILE1_BOUNDARY_IN_in3;
    sc_signal<bool>         sig_TILE1_BOUNDARY_IN_in4;
    sc_signal<bool>         sig_TILE1_BOUNDARY_IN_in5;
    sc_signal<bool>         sig_TILE1_BOUNDARY_IN_in6;
    sc_signal<bool>         sig_TILE1_BOUNDARY_IN_in7;

    sc_signal<sc_uint<32> > sig_TILE1_BOUNDARY_IN_ctrl0;
    sc_signal<sc_uint<32> > sig_TILE1_BOUNDARY_IN_ctrl1;
    sc_signal<sc_uint<32> > sig_TILE1_BOUNDARY_IN_ctrl2;
    sc_signal<sc_uint<32> > sig_TILE1_BOUNDARY_IN_ctrl3;
    sc_signal<sc_uint<32> > sig_TILE1_BOUNDARY_IN_ctrl4;
    sc_signal<sc_uint<32> > sig_TILE1_BOUNDARY_IN_ctrl5;
    sc_signal<sc_uint<32> > sig_TILE1_BOUNDARY_IN_ctrl6;
    sc_signal<sc_uint<32> > sig_TILE1_BOUNDARY_IN_ctrl7;

    sc_signal<bool>         sig_TILE1_BOUNDARY_IN_out0;
    sc_signal<bool>         sig_TILE1_BOUNDARY_IN_out1;
    sc_signal<bool>         sig_TILE1_BOUNDARY_IN_out2;
    sc_signal<bool>         sig_TILE1_BOUNDARY_IN_out3;
    sc_signal<bool>         sig_TILE1_BOUNDARY_IN_out4;
    sc_signal<bool>         sig_TILE1_BOUNDARY_IN_out5;
    sc_signal<bool>         sig_TILE1_BOUNDARY_IN_out6;
    sc_signal<bool>         sig_TILE1_BOUNDARY_IN_out7;

    sc_signal<bool>         sig_TILE1_BOUNDARY_OUT_out0;
    sc_signal<bool>         sig_TILE1_BOUNDARY_OUT_out1;
    sc_signal<bool>         sig_TILE1_BOUNDARY_OUT_out2;
    sc_signal<bool>         sig_TILE1_BOUNDARY_OUT_out3;
    sc_signal<bool>         sig_TILE1_BOUNDARY_OUT_out4;
    sc_signal<bool>         sig_TILE1_BOUNDARY_OUT_out5;
    sc_signal<bool>         sig_TILE1_BOUNDARY_OUT_out6;
    sc_signal<bool>         sig_TILE1_BOUNDARY_OUT_out7;

    CLB_INPUT_CONDITIONER   TILE1_BOUNDARY_IN;


    DEVICE_CLB_OUTPUT_LUT  TILE0_OUTLUT_0;
    sc_signal<sc_uint<8> >  sig_TILE0_OUTLUT_0_fn;

    DEVICE_CLB_OUTPUT_LUT  TILE0_OUTLUT_1;
    sc_signal<sc_uint<8> >  sig_TILE0_OUTLUT_1_fn;

    DEVICE_CLB_OUTPUT_LUT  TILE0_OUTLUT_2;
    sc_signal<sc_uint<8> >  sig_TILE0_OUTLUT_2_fn;

    DEVICE_CLB_OUTPUT_LUT  TILE0_OUTLUT_3;
    sc_signal<sc_uint<8> >  sig_TILE0_OUTLUT_3_fn;

    DEVICE_CLB_OUTPUT_LUT  TILE0_OUTLUT_4;
    sc_signal<sc_uint<8> >  sig_TILE0_OUTLUT_4_fn;

    DEVICE_CLB_OUTPUT_LUT  TILE0_OUTLUT_5;
    sc_signal<sc_uint<8> >  sig_TILE0_OUTLUT_5_fn;

    DEVICE_CLB_OUTPUT_LUT  TILE0_OUTLUT_6;
    sc_signal<sc_uint<8> >  sig_TILE0_OUTLUT_6_fn;

    DEVICE_CLB_OUTPUT_LUT  TILE0_OUTLUT_7;
    sc_signal<sc_uint<8> >  sig_TILE0_OUTLUT_7_fn;

    DEVICE_CLB_LUT4        TILE0_LUT_0;
    sc_signal<sc_uint<16> > sig_TILE0_LUT_0_fn;
    sc_signal<bool>         sig_TILE0_LUT_0_OUT;

    DEVICE_CLB_LUT4        TILE0_LUT_1;
    sc_signal<sc_uint<16> > sig_TILE0_LUT_1_fn;
    sc_signal<bool>         sig_TILE0_LUT_1_OUT;

    DEVICE_CLB_LUT4        TILE0_LUT_2;
    sc_signal<sc_uint<16> > sig_TILE0_LUT_2_fn;
    sc_signal<bool>         sig_TILE0_LUT_2_OUT;

    DEVICE_CLB_FSM         TILE0_FSM_0;
    sc_signal<bool>         sig_TILE0_FSM_0_xe0_sel;
    sc_signal<bool>         sig_TILE0_FSM_0_xe1_sel;
    sc_signal<sc_uint<16> > sig_TILE0_FSM_0_S0_fn;
    sc_signal<sc_uint<16> > sig_TILE0_FSM_0_S1_fn;
    sc_signal<sc_uint<16> > sig_TILE0_FSM_0_OUT_LUT_fn;
    sc_signal<bool>         sig_TILE0_FSM_0_S0;
    sc_signal<bool>         sig_TILE0_FSM_0_S1;
    sc_signal<bool>         sig_TILE0_FSM_0_OUT;

    DEVICE_CLB_FSM         TILE0_FSM_1;
    sc_signal<bool>         sig_TILE0_FSM_1_xe0_sel;
    sc_signal<bool>         sig_TILE0_FSM_1_xe1_sel;
    sc_signal<sc_uint<16> > sig_TILE0_FSM_1_S0_fn;
    sc_signal<sc_uint<16> > sig_TILE0_FSM_1_S1_fn;
    sc_signal<sc_uint<16> > sig_TILE0_FSM_1_OUT_LUT_fn;
    sc_signal<bool>         sig_TILE0_FSM_1_S0;
    sc_signal<bool>         sig_TILE0_FSM_1_S1;
    sc_signal<bool>         sig_TILE0_FSM_1_OUT;

    DEVICE_CLB_FSM         TILE0_FSM_2;
    sc_signal<bool>         sig_TILE0_FSM_2_xe0_sel;
    sc_signal<bool>         sig_TILE0_FSM_2_xe1_sel;
    sc_signal<sc_uint<16> > sig_TILE0_FSM_2_S0_fn;
    sc_signal<sc_uint<16> > sig_TILE0_FSM_2_S1_fn;
    sc_signal<sc_uint<16> > sig_TILE0_FSM_2_OUT_LUT_fn;
    sc_signal<bool>         sig_TILE0_FSM_2_S0;
    sc_signal<bool>         sig_TILE0_FSM_2_S1;
    sc_signal<bool>         sig_TILE0_FSM_2_OUT;

    DEVICE_CLB_COUNTER     TILE0_COUNTER_0;
    sc_signal<bool>         sig_TILE0_COUNTER_0_add_shift_dir;
    sc_signal<bool>         sig_TILE0_COUNTER_0_add_shift_mode;
    sc_signal<bool>         sig_TILE0_COUNTER_0_add_shift_on_event_en;
    sc_signal<bool>         sig_TILE0_COUNTER_0_global_clk_en;
    sc_signal<bool>         sig_TILE0_COUNTER_0_glbl_load_en;
    sc_signal<sc_uint<32> > sig_TILE0_COUNTER_0_event_load_val;
    sc_signal<bool>         sig_TILE0_COUNTER_0_glbl_en;
    sc_signal<bool>         sig_TILE0_COUNTER_0_glbl_rst_n;
    sc_signal<bool>         sig_TILE0_COUNTER_0_match_en;
    sc_signal<sc_uint<32> > sig_TILE0_COUNTER_0_match1_val;
    sc_signal<sc_uint<32> > sig_TILE0_COUNTER_0_match2_val;
    sc_signal<bool>         sig_TILE0_COUNTER_0_glbl_serializer_mode;
    sc_signal<bool>         sig_TILE0_COUNTER_0_hlc_count_load_en;
    sc_signal<bool>         sig_TILE0_COUNTER_0_hlc_match1_load_en;
    sc_signal<bool>         sig_TILE0_COUNTER_0_hlc_match2_load_en;
    sc_signal<sc_uint<32> > sig_TILE0_COUNTER_0_count_out;
    sc_signal<bool>         sig_TILE0_COUNTER_0_count_zero;
    sc_signal<bool>         sig_TILE0_COUNTER_0_count_match1;
    sc_signal<bool>         sig_TILE0_COUNTER_0_count_match2;
#if TYPE == 2 || TYPE == 3
    sc_signal<bool>         sig_TILE0_COUNTER_0_lfsr_mode;
    sc_signal<bool>         sig_TILE0_COUNTER_0_match1_tap_en;
    sc_signal<sc_uint<5> >  sig_TILE0_COUNTER_0_match1_tap;
    sc_signal<bool>         sig_TILE0_COUNTER_0_match2_tap_en;
    sc_signal<sc_uint<5> >  sig_TILE0_COUNTER_0_match2_tap;
#endif
#if TYPE == 3
    sc_signal<bool>         sig_TILE0_COUNTER_0_RECONFIG_PIPELINE_EN;
#endif
    DEVICE_CLB_COUNTER     TILE0_COUNTER_1;
    sc_signal<bool>         sig_TILE0_COUNTER_1_add_shift_dir;
    sc_signal<bool>         sig_TILE0_COUNTER_1_add_shift_mode;
    sc_signal<bool>         sig_TILE0_COUNTER_1_add_shift_on_event_en;
    sc_signal<bool>         sig_TILE0_COUNTER_1_global_clk_en;
    sc_signal<bool>         sig_TILE0_COUNTER_1_glbl_load_en;
    sc_signal<sc_uint<32> > sig_TILE0_COUNTER_1_event_load_val;
    sc_signal<bool>         sig_TILE0_COUNTER_1_glbl_en;
    sc_signal<bool>         sig_TILE0_COUNTER_1_glbl_rst_n;
    sc_signal<bool>         sig_TILE0_COUNTER_1_match_en;
    sc_signal<sc_uint<32> > sig_TILE0_COUNTER_1_match1_val;
    sc_signal<sc_uint<32> > sig_TILE0_COUNTER_1_match2_val;
    sc_signal<bool>         sig_TILE0_COUNTER_1_glbl_serializer_mode;
    sc_signal<bool>         sig_TILE0_COUNTER_1_hlc_count_load_en;
    sc_signal<bool>         sig_TILE0_COUNTER_1_hlc_match1_load_en;
    sc_signal<bool>         sig_TILE0_COUNTER_1_hlc_match2_load_en;
    sc_signal<sc_uint<32> > sig_TILE0_COUNTER_1_count_out;
    sc_signal<bool>         sig_TILE0_COUNTER_1_count_zero;
    sc_signal<bool>         sig_TILE0_COUNTER_1_count_match1;
    sc_signal<bool>         sig_TILE0_COUNTER_1_count_match2;
#if TYPE == 2 || TYPE == 3
    sc_signal<bool>         sig_TILE0_COUNTER_1_lfsr_mode;
    sc_signal<bool>         sig_TILE0_COUNTER_1_match1_tap_en;
    sc_signal<sc_uint<5> >  sig_TILE0_COUNTER_1_match1_tap;
    sc_signal<bool>         sig_TILE0_COUNTER_1_match2_tap_en;
    sc_signal<sc_uint<5> >  sig_TILE0_COUNTER_1_match2_tap;
#endif
#if TYPE == 3
    sc_signal<bool>         sig_TILE0_COUNTER_1_RECONFIG_PIPELINE_EN;
#endif
    DEVICE_CLB_COUNTER     TILE0_COUNTER_2;
    sc_signal<bool>         sig_TILE0_COUNTER_2_add_shift_dir;
    sc_signal<bool>         sig_TILE0_COUNTER_2_add_shift_mode;
    sc_signal<bool>         sig_TILE0_COUNTER_2_add_shift_on_event_en;
    sc_signal<bool>         sig_TILE0_COUNTER_2_global_clk_en;
    sc_signal<bool>         sig_TILE0_COUNTER_2_glbl_load_en;
    sc_signal<sc_uint<32> > sig_TILE0_COUNTER_2_event_load_val;
    sc_signal<bool>         sig_TILE0_COUNTER_2_glbl_en;
    sc_signal<bool>         sig_TILE0_COUNTER_2_glbl_rst_n;
    sc_signal<bool>         sig_TILE0_COUNTER_2_match_en;
    sc_signal<sc_uint<32> > sig_TILE0_COUNTER_2_match1_val;
    sc_signal<sc_uint<32> > sig_TILE0_COUNTER_2_match2_val;
    sc_signal<bool>         sig_TILE0_COUNTER_2_glbl_serializer_mode;
    sc_signal<bool>         sig_TILE0_COUNTER_2_hlc_count_load_en;
    sc_signal<bool>         sig_TILE0_COUNTER_2_hlc_match1_load_en;
    sc_signal<bool>         sig_TILE0_COUNTER_2_hlc_match2_load_en;
    sc_signal<sc_uint<32> > sig_TILE0_COUNTER_2_count_out;
    sc_signal<bool>         sig_TILE0_COUNTER_2_count_zero;
    sc_signal<bool>         sig_TILE0_COUNTER_2_count_match1;
    sc_signal<bool>         sig_TILE0_COUNTER_2_count_match2;
#if TYPE == 2 || TYPE == 3
    sc_signal<bool>         sig_TILE0_COUNTER_2_lfsr_mode;
    sc_signal<bool>         sig_TILE0_COUNTER_2_match1_tap_en;
    sc_signal<sc_uint<5> >  sig_TILE0_COUNTER_2_match1_tap;
    sc_signal<bool>         sig_TILE0_COUNTER_2_match2_tap_en;
    sc_signal<sc_uint<5> >  sig_TILE0_COUNTER_2_match2_tap;
#endif
#if TYPE == 3
    sc_signal<bool>         sig_TILE0_COUNTER_2_RECONFIG_PIPELINE_EN;
#endif
    DEVICE_CLB_HLC         TILE0_HLC;
    sc_signal<sc_uint<32> >         sig_TILE0_HLC_e0;
    sc_signal<sc_uint<32> >         sig_TILE0_HLC_e1;
    sc_signal<sc_uint<32> >         sig_TILE0_HLC_e2;
    sc_signal<sc_uint<32> >         sig_TILE0_HLC_e3;
    sc_signal<sc_uint<32> >     sig_TILE0_HLC_P_comm_R0_out;
    sc_signal<sc_uint<32> >     sig_TILE0_HLC_P_comm_R1_out;
    sc_signal<sc_uint<32> >     sig_TILE0_HLC_P_comm_R2_out;
    sc_signal<sc_uint<32> >     sig_TILE0_HLC_P_comm_R3_out;

    sc_signal<bool>             sig_TILE0_HLC_P_push_data_en;
    sc_signal<sc_uint<32> >     sig_TILE0_HLC_P_push_data_out;
    sc_signal<bool>             sig_TILE0_HLC_P_pull_data_en;
    sc_signal<bool>             sig_TILE0_HLC_P_set_intr_flag;

    sc_signal<sc_uint<32> >     sig_TILE0_HLC_P_glbl_load_addr;
    sc_signal<sc_uint<32> >     sig_TILE0_HLC_P_glbl_load_value;
    sc_signal<sc_uint<32> >     sig_TILE0_HLC_P_pull_data_in;

	sc_signal<sc_uint<32> >     sig_TILE0_HLC_hlc_instr_0;
	sc_signal<sc_uint<32> >     sig_TILE0_HLC_hlc_instr_1;
	sc_signal<sc_uint<32> >     sig_TILE0_HLC_hlc_instr_2;
	sc_signal<sc_uint<32> >     sig_TILE0_HLC_hlc_instr_3;
	sc_signal<sc_uint<32> >     sig_TILE0_HLC_hlc_instr_4;
	sc_signal<sc_uint<32> >     sig_TILE0_HLC_hlc_instr_5;
	sc_signal<sc_uint<32> >     sig_TILE0_HLC_hlc_instr_6;
	sc_signal<sc_uint<32> >     sig_TILE0_HLC_hlc_instr_7;
	sc_signal<sc_uint<32> >     sig_TILE0_HLC_hlc_instr_8;
	sc_signal<sc_uint<32> >     sig_TILE0_HLC_hlc_instr_9;
	sc_signal<sc_uint<32> >     sig_TILE0_HLC_hlc_instr_10;
	sc_signal<sc_uint<32> >     sig_TILE0_HLC_hlc_instr_11;
	sc_signal<sc_uint<32> >     sig_TILE0_HLC_hlc_instr_12;
	sc_signal<sc_uint<32> >     sig_TILE0_HLC_hlc_instr_13;
	sc_signal<sc_uint<32> >     sig_TILE0_HLC_hlc_instr_14;
	sc_signal<sc_uint<32> >     sig_TILE0_HLC_hlc_instr_15;
	sc_signal<sc_uint<32> >     sig_TILE0_HLC_hlc_instr_16;
	sc_signal<sc_uint<32> >     sig_TILE0_HLC_hlc_instr_17;
	sc_signal<sc_uint<32> >     sig_TILE0_HLC_hlc_instr_18;
	sc_signal<sc_uint<32> >     sig_TILE0_HLC_hlc_instr_19;
	sc_signal<sc_uint<32> >     sig_TILE0_HLC_hlc_instr_20;
	sc_signal<sc_uint<32> >     sig_TILE0_HLC_hlc_instr_21;
	sc_signal<sc_uint<32> >     sig_TILE0_HLC_hlc_instr_22;
	sc_signal<sc_uint<32> >     sig_TILE0_HLC_hlc_instr_23;
	sc_signal<sc_uint<32> >     sig_TILE0_HLC_hlc_instr_24;
	sc_signal<sc_uint<32> >     sig_TILE0_HLC_hlc_instr_25;
	sc_signal<sc_uint<32> >     sig_TILE0_HLC_hlc_instr_26;
	sc_signal<sc_uint<32> >     sig_TILE0_HLC_hlc_instr_27;
	sc_signal<sc_uint<32> >     sig_TILE0_HLC_hlc_instr_28;
	sc_signal<sc_uint<32> >     sig_TILE0_HLC_hlc_instr_29;
	sc_signal<sc_uint<32> >     sig_TILE0_HLC_hlc_instr_30;
	sc_signal<sc_uint<32> >     sig_TILE0_HLC_hlc_instr_31;

	
    sc_signal<sc_uint<32> >     sig_TILE0_COUNTER_hlc_count_load_val;
#if TYPE == 2 || TYPE == 3
    sc_signal<bool>             sig_TILE0_HLC_ae0;
    sc_signal<bool>             sig_TILE0_HLC_ae1;
    sc_signal<bool>             sig_TILE0_HLC_ae2;
    sc_signal<bool>             sig_TILE0_HLC_ae3;
#endif

#if TYPE == 3
    sc_signal<bool>             sig_TILE0_HLC_RECONFIG_PIPELINE_EN;
#endif
    sc_signal<bool>         sig_TILE0_BOUNDARY_IN_in0;
    sc_signal<bool>         sig_TILE0_BOUNDARY_IN_in1;
    sc_signal<bool>         sig_TILE0_BOUNDARY_IN_in2;
    sc_signal<bool>         sig_TILE0_BOUNDARY_IN_in3;
    sc_signal<bool>         sig_TILE0_BOUNDARY_IN_in4;
    sc_signal<bool>         sig_TILE0_BOUNDARY_IN_in5;
    sc_signal<bool>         sig_TILE0_BOUNDARY_IN_in6;
    sc_signal<bool>         sig_TILE0_BOUNDARY_IN_in7;

    sc_signal<sc_uint<32> > sig_TILE0_BOUNDARY_IN_ctrl0;
    sc_signal<sc_uint<32> > sig_TILE0_BOUNDARY_IN_ctrl1;
    sc_signal<sc_uint<32> > sig_TILE0_BOUNDARY_IN_ctrl2;
    sc_signal<sc_uint<32> > sig_TILE0_BOUNDARY_IN_ctrl3;
    sc_signal<sc_uint<32> > sig_TILE0_BOUNDARY_IN_ctrl4;
    sc_signal<sc_uint<32> > sig_TILE0_BOUNDARY_IN_ctrl5;
    sc_signal<sc_uint<32> > sig_TILE0_BOUNDARY_IN_ctrl6;
    sc_signal<sc_uint<32> > sig_TILE0_BOUNDARY_IN_ctrl7;

    sc_signal<bool>         sig_TILE0_BOUNDARY_IN_out0;
    sc_signal<bool>         sig_TILE0_BOUNDARY_IN_out1;
    sc_signal<bool>         sig_TILE0_BOUNDARY_IN_out2;
    sc_signal<bool>         sig_TILE0_BOUNDARY_IN_out3;
    sc_signal<bool>         sig_TILE0_BOUNDARY_IN_out4;
    sc_signal<bool>         sig_TILE0_BOUNDARY_IN_out5;
    sc_signal<bool>         sig_TILE0_BOUNDARY_IN_out6;
    sc_signal<bool>         sig_TILE0_BOUNDARY_IN_out7;

    sc_signal<bool>         sig_TILE0_BOUNDARY_OUT_out0;
    sc_signal<bool>         sig_TILE0_BOUNDARY_OUT_out1;
    sc_signal<bool>         sig_TILE0_BOUNDARY_OUT_out2;
    sc_signal<bool>         sig_TILE0_BOUNDARY_OUT_out3;
    sc_signal<bool>         sig_TILE0_BOUNDARY_OUT_out4;
    sc_signal<bool>         sig_TILE0_BOUNDARY_OUT_out5;
    sc_signal<bool>         sig_TILE0_BOUNDARY_OUT_out6;
    sc_signal<bool>         sig_TILE0_BOUNDARY_OUT_out7;

    CLB_INPUT_CONDITIONER   TILE0_BOUNDARY_IN;

    squareWave          TILE0_in0_squareWave;


    sc_trace_file *tf;
    SC_HAS_PROCESS(Top);

    //Top Constructor
    Top(const sc_module_name &name, sc_trace_file *_tf):

        TILE1_OUTLUT_0("TILE1_OUTLUT_0"),
        TILE1_OUTLUT_1("TILE1_OUTLUT_1"),
        TILE1_OUTLUT_2("TILE1_OUTLUT_2"),
        TILE1_OUTLUT_3("TILE1_OUTLUT_3"),
        TILE1_OUTLUT_4("TILE1_OUTLUT_4"),
        TILE1_OUTLUT_5("TILE1_OUTLUT_5"),
        TILE1_OUTLUT_6("TILE1_OUTLUT_6"),
        TILE1_OUTLUT_7("TILE1_OUTLUT_7"),
        TILE1_LUT_0("TILE1_LUT_0"),
        TILE1_LUT_1("TILE1_LUT_1"),
        TILE1_LUT_2("TILE1_LUT_2"),
        TILE1_FSM_0("TILE1_FSM_0"),
        TILE1_FSM_1("TILE1_FSM_1"),
        TILE1_FSM_2("TILE1_FSM_2"),
        TILE1_COUNTER_0("TILE1_COUNTER_0"),
        TILE1_COUNTER_1("TILE1_COUNTER_1"),
        TILE1_COUNTER_2("TILE1_COUNTER_2"),
        TILE1_HLC("TILE1_HLC",
            (unsigned long) 38,
            (unsigned long) 0,
            (unsigned long) 0,
            (unsigned long) 0),

        TILE1_BOUNDARY_IN("TILE1_BOUNDARY_IN"),


        TILE0_OUTLUT_0("TILE0_OUTLUT_0"),
        TILE0_OUTLUT_1("TILE0_OUTLUT_1"),
        TILE0_OUTLUT_2("TILE0_OUTLUT_2"),
        TILE0_OUTLUT_3("TILE0_OUTLUT_3"),
        TILE0_OUTLUT_4("TILE0_OUTLUT_4"),
        TILE0_OUTLUT_5("TILE0_OUTLUT_5"),
        TILE0_OUTLUT_6("TILE0_OUTLUT_6"),
        TILE0_OUTLUT_7("TILE0_OUTLUT_7"),
        TILE0_LUT_0("TILE0_LUT_0"),
        TILE0_LUT_1("TILE0_LUT_1"),
        TILE0_LUT_2("TILE0_LUT_2"),
        TILE0_FSM_0("TILE0_FSM_0"),
        TILE0_FSM_1("TILE0_FSM_1"),
        TILE0_FSM_2("TILE0_FSM_2"),
        TILE0_COUNTER_0("TILE0_COUNTER_0"),
        TILE0_COUNTER_1("TILE0_COUNTER_1"),
        TILE0_COUNTER_2("TILE0_COUNTER_2"),
        TILE0_HLC("TILE0_HLC",
            (unsigned long) 38,
            (unsigned long) 0,
            (unsigned long) 0,
            (unsigned long) 0),

        TILE0_BOUNDARY_IN("TILE0_BOUNDARY_IN"),

        TILE0_in0_squareWave("TILE0_in0_squareWave", 1000, 300, 100, 0),

        sc_module(name),
        sc_top_clock("sc_top_clock", 20, SC_NS)
    {
        SC_THREAD(reset_generator);
        tf = _tf;

        TILE1_OUTLUT_0.i0        (sig_TILE1_FSM_0_OUT);
        TILE1_OUTLUT_0.i1        (sig_TILE1_FSM_1_OUT);
        TILE1_OUTLUT_0.i2        (sc_zero);
        TILE1_OUTLUT_0.OUT      (sig_TILE1_BOUNDARY_OUT_out0);
        TILE1_OUTLUT_0.OUTPUT_LUT_fn (sig_TILE1_OUTLUT_0_fn);

        sc_trace(tf, TILE1_OUTLUT_0.i0,  "TILE1_OUTLUT_0.i0");
        sc_trace(tf, TILE1_OUTLUT_0.i1,  "TILE1_OUTLUT_0.i1");
        sc_trace(tf, TILE1_OUTLUT_0.i2,  "TILE1_OUTLUT_0.i2");
        sc_trace(tf, TILE1_OUTLUT_0.OUT, "TILE1_OUTLUT_0.out");
        sc_trace(tf, TILE1_OUTLUT_0.OUTPUT_LUT_fn,  "TILE1_OUTLUT_0.OUTPUT_LUT_fn");

        TILE1_OUTLUT_1.i0        (sig_TILE1_BOUNDARY_IN_out6);
        TILE1_OUTLUT_1.i1        (sc_zero);
        TILE1_OUTLUT_1.i2        (sc_zero);
        TILE1_OUTLUT_1.OUT      (sig_TILE1_BOUNDARY_OUT_out1);
        TILE1_OUTLUT_1.OUTPUT_LUT_fn (sig_TILE1_OUTLUT_1_fn);

        sc_trace(tf, TILE1_OUTLUT_1.i0,  "TILE1_OUTLUT_1.i0");
        sc_trace(tf, TILE1_OUTLUT_1.i1,  "TILE1_OUTLUT_1.i1");
        sc_trace(tf, TILE1_OUTLUT_1.i2,  "TILE1_OUTLUT_1.i2");
        sc_trace(tf, TILE1_OUTLUT_1.OUT, "TILE1_OUTLUT_1.out");
        sc_trace(tf, TILE1_OUTLUT_1.OUTPUT_LUT_fn,  "TILE1_OUTLUT_1.OUTPUT_LUT_fn");

        TILE1_OUTLUT_2.i0        (sig_TILE1_FSM_0_OUT);
        TILE1_OUTLUT_2.i1        (sig_TILE1_FSM_1_S0);
        TILE1_OUTLUT_2.i2        (sc_zero);
        TILE1_OUTLUT_2.OUT      (sig_TILE1_BOUNDARY_OUT_out2);
        TILE1_OUTLUT_2.OUTPUT_LUT_fn (sig_TILE1_OUTLUT_2_fn);

        sc_trace(tf, TILE1_OUTLUT_2.i0,  "TILE1_OUTLUT_2.i0");
        sc_trace(tf, TILE1_OUTLUT_2.i1,  "TILE1_OUTLUT_2.i1");
        sc_trace(tf, TILE1_OUTLUT_2.i2,  "TILE1_OUTLUT_2.i2");
        sc_trace(tf, TILE1_OUTLUT_2.OUT, "TILE1_OUTLUT_2.out");
        sc_trace(tf, TILE1_OUTLUT_2.OUTPUT_LUT_fn,  "TILE1_OUTLUT_2.OUTPUT_LUT_fn");

        TILE1_OUTLUT_3.i0        (sig_TILE1_BOUNDARY_IN_out7);
        TILE1_OUTLUT_3.i1        (sc_zero);
        TILE1_OUTLUT_3.i2        (sc_zero);
        TILE1_OUTLUT_3.OUT      (sig_TILE1_BOUNDARY_OUT_out3);
        TILE1_OUTLUT_3.OUTPUT_LUT_fn (sig_TILE1_OUTLUT_3_fn);

        sc_trace(tf, TILE1_OUTLUT_3.i0,  "TILE1_OUTLUT_3.i0");
        sc_trace(tf, TILE1_OUTLUT_3.i1,  "TILE1_OUTLUT_3.i1");
        sc_trace(tf, TILE1_OUTLUT_3.i2,  "TILE1_OUTLUT_3.i2");
        sc_trace(tf, TILE1_OUTLUT_3.OUT, "TILE1_OUTLUT_3.out");
        sc_trace(tf, TILE1_OUTLUT_3.OUTPUT_LUT_fn,  "TILE1_OUTLUT_3.OUTPUT_LUT_fn");

        TILE1_OUTLUT_4.i0        (sig_TILE1_FSM_2_OUT);
        TILE1_OUTLUT_4.i1        (sc_zero);
        TILE1_OUTLUT_4.i2        (sc_zero);
        TILE1_OUTLUT_4.OUT      (sig_TILE1_BOUNDARY_OUT_out4);
        TILE1_OUTLUT_4.OUTPUT_LUT_fn (sig_TILE1_OUTLUT_4_fn);

        sc_trace(tf, TILE1_OUTLUT_4.i0,  "TILE1_OUTLUT_4.i0");
        sc_trace(tf, TILE1_OUTLUT_4.i1,  "TILE1_OUTLUT_4.i1");
        sc_trace(tf, TILE1_OUTLUT_4.i2,  "TILE1_OUTLUT_4.i2");
        sc_trace(tf, TILE1_OUTLUT_4.OUT, "TILE1_OUTLUT_4.out");
        sc_trace(tf, TILE1_OUTLUT_4.OUTPUT_LUT_fn,  "TILE1_OUTLUT_4.OUTPUT_LUT_fn");

        TILE1_OUTLUT_5.i0        (sc_zero);
        TILE1_OUTLUT_5.i1        (sc_zero);
        TILE1_OUTLUT_5.i2        (sc_zero);
        TILE1_OUTLUT_5.OUT      (sig_TILE1_BOUNDARY_OUT_out5);
        TILE1_OUTLUT_5.OUTPUT_LUT_fn (sig_TILE1_OUTLUT_5_fn);

        sc_trace(tf, TILE1_OUTLUT_5.i0,  "TILE1_OUTLUT_5.i0");
        sc_trace(tf, TILE1_OUTLUT_5.i1,  "TILE1_OUTLUT_5.i1");
        sc_trace(tf, TILE1_OUTLUT_5.i2,  "TILE1_OUTLUT_5.i2");
        sc_trace(tf, TILE1_OUTLUT_5.OUT, "TILE1_OUTLUT_5.out");
        sc_trace(tf, TILE1_OUTLUT_5.OUTPUT_LUT_fn,  "TILE1_OUTLUT_5.OUTPUT_LUT_fn");

        TILE1_OUTLUT_6.i0        (sc_zero);
        TILE1_OUTLUT_6.i1        (sc_zero);
        TILE1_OUTLUT_6.i2        (sc_zero);
        TILE1_OUTLUT_6.OUT      (sig_TILE1_BOUNDARY_OUT_out6);
        TILE1_OUTLUT_6.OUTPUT_LUT_fn (sig_TILE1_OUTLUT_6_fn);

        sc_trace(tf, TILE1_OUTLUT_6.i0,  "TILE1_OUTLUT_6.i0");
        sc_trace(tf, TILE1_OUTLUT_6.i1,  "TILE1_OUTLUT_6.i1");
        sc_trace(tf, TILE1_OUTLUT_6.i2,  "TILE1_OUTLUT_6.i2");
        sc_trace(tf, TILE1_OUTLUT_6.OUT, "TILE1_OUTLUT_6.out");
        sc_trace(tf, TILE1_OUTLUT_6.OUTPUT_LUT_fn,  "TILE1_OUTLUT_6.OUTPUT_LUT_fn");

        TILE1_OUTLUT_7.i0        (sc_zero);
        TILE1_OUTLUT_7.i1        (sc_zero);
        TILE1_OUTLUT_7.i2        (sc_zero);
        TILE1_OUTLUT_7.OUT      (sig_TILE1_BOUNDARY_OUT_out7);
        TILE1_OUTLUT_7.OUTPUT_LUT_fn (sig_TILE1_OUTLUT_7_fn);

        sc_trace(tf, TILE1_OUTLUT_7.i0,  "TILE1_OUTLUT_7.i0");
        sc_trace(tf, TILE1_OUTLUT_7.i1,  "TILE1_OUTLUT_7.i1");
        sc_trace(tf, TILE1_OUTLUT_7.i2,  "TILE1_OUTLUT_7.i2");
        sc_trace(tf, TILE1_OUTLUT_7.OUT, "TILE1_OUTLUT_7.out");
        sc_trace(tf, TILE1_OUTLUT_7.OUTPUT_LUT_fn,  "TILE1_OUTLUT_7.OUTPUT_LUT_fn");

        TILE1_LUT_0.i0        (sig_TILE1_BOUNDARY_IN_out1);
        TILE1_LUT_0.i1        (sig_TILE1_FSM_1_S0);
        TILE1_LUT_0.i2        (sig_TILE1_FSM_1_S1);
        TILE1_LUT_0.i3        (sig_TILE1_COUNTER_0_count_match2);
        TILE1_LUT_0.OUT      (sig_TILE1_LUT_0_OUT);
        TILE1_LUT_0.LUT4_fn  (sig_TILE1_LUT_0_fn);

        sc_trace(tf, TILE1_LUT_0.i0,  "TILE1_LUT_0.i0");
        sc_trace(tf, TILE1_LUT_0.i1,  "TILE1_LUT_0.i1");
        sc_trace(tf, TILE1_LUT_0.i2,  "TILE1_LUT_0.i2");
        sc_trace(tf, TILE1_LUT_0.i3,  "TILE1_LUT_0.i3");
        sc_trace(tf, TILE1_LUT_0.OUT, "TILE1_LUT_0.out");
        sc_trace(tf, TILE1_LUT_0.LUT4_fn, "TILE1_LUT_0.LUT4_fn");

        TILE1_LUT_1.i0        (sig_TILE1_BOUNDARY_IN_out0);
        TILE1_LUT_1.i1        (sig_TILE1_BOUNDARY_IN_out1);
        TILE1_LUT_1.i2        (sig_TILE1_FSM_1_S0);
        TILE1_LUT_1.i3        (sig_TILE1_FSM_1_S1);
        TILE1_LUT_1.OUT      (sig_TILE1_LUT_1_OUT);
        TILE1_LUT_1.LUT4_fn  (sig_TILE1_LUT_1_fn);

        sc_trace(tf, TILE1_LUT_1.i0,  "TILE1_LUT_1.i0");
        sc_trace(tf, TILE1_LUT_1.i1,  "TILE1_LUT_1.i1");
        sc_trace(tf, TILE1_LUT_1.i2,  "TILE1_LUT_1.i2");
        sc_trace(tf, TILE1_LUT_1.i3,  "TILE1_LUT_1.i3");
        sc_trace(tf, TILE1_LUT_1.OUT, "TILE1_LUT_1.out");
        sc_trace(tf, TILE1_LUT_1.LUT4_fn, "TILE1_LUT_1.LUT4_fn");

        TILE1_LUT_2.i0        (sig_TILE1_FSM_1_S0);
        TILE1_LUT_2.i1        (sig_TILE1_FSM_1_S1);
        TILE1_LUT_2.i2        (sig_TILE1_BOUNDARY_IN_out1);
        TILE1_LUT_2.i3        (sc_zero);
        TILE1_LUT_2.OUT      (sig_TILE1_LUT_2_OUT);
        TILE1_LUT_2.LUT4_fn  (sig_TILE1_LUT_2_fn);

        sc_trace(tf, TILE1_LUT_2.i0,  "TILE1_LUT_2.i0");
        sc_trace(tf, TILE1_LUT_2.i1,  "TILE1_LUT_2.i1");
        sc_trace(tf, TILE1_LUT_2.i2,  "TILE1_LUT_2.i2");
        sc_trace(tf, TILE1_LUT_2.i3,  "TILE1_LUT_2.i3");
        sc_trace(tf, TILE1_LUT_2.OUT, "TILE1_LUT_2.out");
        sc_trace(tf, TILE1_LUT_2.LUT4_fn, "TILE1_LUT_2.LUT4_fn");

        TILE1_FSM_0.e0        (sig_TILE1_COUNTER_0_count_match1);
        TILE1_FSM_0.e1        (sig_TILE1_COUNTER_0_count_zero);
        TILE1_FSM_0.xe0        (sc_zero);
        TILE1_FSM_0.xe1        (sc_zero);
        TILE1_FSM_0.clk      (sc_top_clock);
        TILE1_FSM_0.glbl_en  (sc_top_enable);
        TILE1_FSM_0.glbl_rst_n(sc_top_reset);
        TILE1_FSM_0.EXT_SEL0 (sig_TILE1_FSM_0_xe0_sel);
        TILE1_FSM_0.EXT_SEL1 (sig_TILE1_FSM_0_xe1_sel);
        TILE1_FSM_0.S0_fn    (sig_TILE1_FSM_0_S0_fn);
        TILE1_FSM_0.S1_fn    (sig_TILE1_FSM_0_S1_fn);
        TILE1_FSM_0.OUT_LUT_fn(sig_TILE1_FSM_0_OUT_LUT_fn);
        TILE1_FSM_0.S0       (sig_TILE1_FSM_0_S0);
        TILE1_FSM_0.S1       (sig_TILE1_FSM_0_S1);
        TILE1_FSM_0.OUT      (sig_TILE1_FSM_0_OUT);

        sc_trace(tf, TILE1_FSM_0.clk,        "TILE1_FSM_0.clk");
        sc_trace(tf, TILE1_FSM_0.glbl_en,    "TILE1_FSM_0.glbl_en");
        sc_trace(tf, TILE1_FSM_0.glbl_rst_n, "TILE1_FSM_0.glbl_rst_n");
        sc_trace(tf, TILE1_FSM_0.e0,         "TILE1_FSM_0.e0");
        sc_trace(tf, TILE1_FSM_0.e1,         "TILE1_FSM_0.e1");
        sc_trace(tf, TILE1_FSM_0.xe0,        "TILE1_FSM_0.xe0");
        sc_trace(tf, TILE1_FSM_0.xe1,        "TILE1_FSM_0.xe1");
        sc_trace(tf, TILE1_FSM_0.EXT_SEL0,   "TILE1_FSM_0.EXT_SEL0");
        sc_trace(tf, TILE1_FSM_0.EXT_SEL1,   "TILE1_FSM_0.EXT_SEL1");
        sc_trace(tf, TILE1_FSM_0.S0_fn,      "TILE1_FSM_0.S0_fn");
        sc_trace(tf, TILE1_FSM_0.S1_fn,      "TILE1_FSM_0.S1_fn");
        sc_trace(tf, TILE1_FSM_0.OUT_LUT_fn, "TILE1_FSM_0.OUT_LUT_fn");
        sc_trace(tf, TILE1_FSM_0.S0,         "TILE1_FSM_0.S0");
        sc_trace(tf, TILE1_FSM_0.S1,         "TILE1_FSM_0.S1");
        sc_trace(tf, TILE1_FSM_0.OUT,        "TILE1_FSM_0.OUT");

        TILE1_FSM_1.e0        (sig_TILE1_LUT_1_OUT);
        TILE1_FSM_1.e1        (sig_TILE1_COUNTER_1_count_match2);
        TILE1_FSM_1.xe0        (sc_zero);
        TILE1_FSM_1.xe1        (sc_zero);
        TILE1_FSM_1.clk      (sc_top_clock);
        TILE1_FSM_1.glbl_en  (sc_top_enable);
        TILE1_FSM_1.glbl_rst_n(sc_top_reset);
        TILE1_FSM_1.EXT_SEL0 (sig_TILE1_FSM_1_xe0_sel);
        TILE1_FSM_1.EXT_SEL1 (sig_TILE1_FSM_1_xe1_sel);
        TILE1_FSM_1.S0_fn    (sig_TILE1_FSM_1_S0_fn);
        TILE1_FSM_1.S1_fn    (sig_TILE1_FSM_1_S1_fn);
        TILE1_FSM_1.OUT_LUT_fn(sig_TILE1_FSM_1_OUT_LUT_fn);
        TILE1_FSM_1.S0       (sig_TILE1_FSM_1_S0);
        TILE1_FSM_1.S1       (sig_TILE1_FSM_1_S1);
        TILE1_FSM_1.OUT      (sig_TILE1_FSM_1_OUT);

        sc_trace(tf, TILE1_FSM_1.clk,        "TILE1_FSM_1.clk");
        sc_trace(tf, TILE1_FSM_1.glbl_en,    "TILE1_FSM_1.glbl_en");
        sc_trace(tf, TILE1_FSM_1.glbl_rst_n, "TILE1_FSM_1.glbl_rst_n");
        sc_trace(tf, TILE1_FSM_1.e0,         "TILE1_FSM_1.e0");
        sc_trace(tf, TILE1_FSM_1.e1,         "TILE1_FSM_1.e1");
        sc_trace(tf, TILE1_FSM_1.xe0,        "TILE1_FSM_1.xe0");
        sc_trace(tf, TILE1_FSM_1.xe1,        "TILE1_FSM_1.xe1");
        sc_trace(tf, TILE1_FSM_1.EXT_SEL0,   "TILE1_FSM_1.EXT_SEL0");
        sc_trace(tf, TILE1_FSM_1.EXT_SEL1,   "TILE1_FSM_1.EXT_SEL1");
        sc_trace(tf, TILE1_FSM_1.S0_fn,      "TILE1_FSM_1.S0_fn");
        sc_trace(tf, TILE1_FSM_1.S1_fn,      "TILE1_FSM_1.S1_fn");
        sc_trace(tf, TILE1_FSM_1.OUT_LUT_fn, "TILE1_FSM_1.OUT_LUT_fn");
        sc_trace(tf, TILE1_FSM_1.S0,         "TILE1_FSM_1.S0");
        sc_trace(tf, TILE1_FSM_1.S1,         "TILE1_FSM_1.S1");
        sc_trace(tf, TILE1_FSM_1.OUT,        "TILE1_FSM_1.OUT");

        TILE1_FSM_2.e0        (sig_TILE1_COUNTER_1_count_match1);
        TILE1_FSM_2.e1        (sig_TILE1_BOUNDARY_IN_out0);
        TILE1_FSM_2.xe0        (sc_zero);
        TILE1_FSM_2.xe1        (sc_zero);
        TILE1_FSM_2.clk      (sc_top_clock);
        TILE1_FSM_2.glbl_en  (sc_top_enable);
        TILE1_FSM_2.glbl_rst_n(sc_top_reset);
        TILE1_FSM_2.EXT_SEL0 (sig_TILE1_FSM_2_xe0_sel);
        TILE1_FSM_2.EXT_SEL1 (sig_TILE1_FSM_2_xe1_sel);
        TILE1_FSM_2.S0_fn    (sig_TILE1_FSM_2_S0_fn);
        TILE1_FSM_2.S1_fn    (sig_TILE1_FSM_2_S1_fn);
        TILE1_FSM_2.OUT_LUT_fn(sig_TILE1_FSM_2_OUT_LUT_fn);
        TILE1_FSM_2.S0       (sig_TILE1_FSM_2_S0);
        TILE1_FSM_2.S1       (sig_TILE1_FSM_2_S1);
        TILE1_FSM_2.OUT      (sig_TILE1_FSM_2_OUT);

        sc_trace(tf, TILE1_FSM_2.clk,        "TILE1_FSM_2.clk");
        sc_trace(tf, TILE1_FSM_2.glbl_en,    "TILE1_FSM_2.glbl_en");
        sc_trace(tf, TILE1_FSM_2.glbl_rst_n, "TILE1_FSM_2.glbl_rst_n");
        sc_trace(tf, TILE1_FSM_2.e0,         "TILE1_FSM_2.e0");
        sc_trace(tf, TILE1_FSM_2.e1,         "TILE1_FSM_2.e1");
        sc_trace(tf, TILE1_FSM_2.xe0,        "TILE1_FSM_2.xe0");
        sc_trace(tf, TILE1_FSM_2.xe1,        "TILE1_FSM_2.xe1");
        sc_trace(tf, TILE1_FSM_2.EXT_SEL0,   "TILE1_FSM_2.EXT_SEL0");
        sc_trace(tf, TILE1_FSM_2.EXT_SEL1,   "TILE1_FSM_2.EXT_SEL1");
        sc_trace(tf, TILE1_FSM_2.S0_fn,      "TILE1_FSM_2.S0_fn");
        sc_trace(tf, TILE1_FSM_2.S1_fn,      "TILE1_FSM_2.S1_fn");
        sc_trace(tf, TILE1_FSM_2.OUT_LUT_fn, "TILE1_FSM_2.OUT_LUT_fn");
        sc_trace(tf, TILE1_FSM_2.S0,         "TILE1_FSM_2.S0");
        sc_trace(tf, TILE1_FSM_2.S1,         "TILE1_FSM_2.S1");
        sc_trace(tf, TILE1_FSM_2.OUT,        "TILE1_FSM_2.OUT");

        TILE1_COUNTER_0.reset        (sig_TILE1_LUT_0_OUT);
        TILE1_COUNTER_0.event        (sc_zero);
        TILE1_COUNTER_0.mode0        (sig_TILE1_FSM_1_OUT);
        TILE1_COUNTER_0.mode1        (sc_one);
        TILE1_COUNTER_0.clk                  (sc_top_clock);
        TILE1_COUNTER_0.glbl_en              (sc_top_enable);
        TILE1_COUNTER_0.glbl_rst_n           (sc_top_reset);
        TILE1_COUNTER_0.add_shift_dir        (sig_TILE1_COUNTER_0_add_shift_dir);
        TILE1_COUNTER_0.add_shift_mode       (sig_TILE1_COUNTER_0_add_shift_mode);
        TILE1_COUNTER_0.add_shift_on_event_en(sig_TILE1_COUNTER_0_add_shift_on_event_en);
        TILE1_COUNTER_0.global_clk_en        (sig_TILE1_COUNTER_0_global_clk_en);
        TILE1_COUNTER_0.glbl_load_en         (sig_TILE1_COUNTER_0_glbl_load_en);
        TILE1_COUNTER_0.event_load_val       (sig_TILE1_COUNTER_0_event_load_val);
        TILE1_COUNTER_0.match_en             (sig_TILE1_COUNTER_0_match_en);
        TILE1_COUNTER_0.match1_val           (sig_TILE1_COUNTER_0_match1_val);
        TILE1_COUNTER_0.match2_val           (sig_TILE1_COUNTER_0_match2_val);
        TILE1_COUNTER_0.glbl_serializer_mode (sig_TILE1_COUNTER_0_glbl_serializer_mode);
        TILE1_COUNTER_0.hlc_count_load_val   (sig_TILE1_COUNTER_hlc_count_load_val);
        TILE1_COUNTER_0.hlc_count_load_en    (sig_TILE1_COUNTER_0_hlc_count_load_en);
        TILE1_COUNTER_0.hlc_match1_load_en   (sig_TILE1_COUNTER_0_hlc_match1_load_en);
        TILE1_COUNTER_0.hlc_match2_load_en   (sig_TILE1_COUNTER_0_hlc_match2_load_en);
        TILE1_COUNTER_0.count_out            (sig_TILE1_COUNTER_0_count_out);
        TILE1_COUNTER_0.count_zero           (sig_TILE1_COUNTER_0_count_zero);
        TILE1_COUNTER_0.count_match1         (sig_TILE1_COUNTER_0_count_match1);
        TILE1_COUNTER_0.count_match2         (sig_TILE1_COUNTER_0_count_match2);
#if TYPE == 2 || TYPE == 3
        TILE1_COUNTER_0.lfsr_mode               (sig_TILE1_COUNTER_0_lfsr_mode);
        TILE1_COUNTER_0.match1_tap_en           (sig_TILE1_COUNTER_0_match1_tap_en);
        TILE1_COUNTER_0.match1_tap              (sig_TILE1_COUNTER_0_match1_tap);
        TILE1_COUNTER_0.match2_tap_en           (sig_TILE1_COUNTER_0_match2_tap_en);
        TILE1_COUNTER_0.match2_tap              (sig_TILE1_COUNTER_0_match2_tap);
#endif
#if TYPE == 3
        TILE1_COUNTER_0.RECONFIG_PIPELINE_EN    (sig_TILE1_COUNTER_0_RECONFIG_PIPELINE_EN);
#endif
        sc_trace(tf, TILE1_COUNTER_0.clk,                 "TILE1_COUNTER_0.clk");
        sc_trace(tf, TILE1_COUNTER_0.glbl_en,             "TILE1_COUNTER_0.glbl_en");
        sc_trace(tf, TILE1_COUNTER_0.glbl_rst_n,          "TILE1_COUNTER_0.glbl_rst_n");
        sc_trace(tf, TILE1_COUNTER_0.add_shift_dir,       "TILE1_COUNTER_0.add_shift_dir");
        sc_trace(tf, TILE1_COUNTER_0.add_shift_mode,      "TILE1_COUNTER_0.add_shift_mode");
        sc_trace(tf, TILE1_COUNTER_0.add_shift_on_event_en, "TILE1_COUNTER_0.add_shift_on_event_en");
        sc_trace(tf, TILE1_COUNTER_0.global_clk_en,       "TILE1_COUNTER_0.global_clk_en");
        sc_trace(tf, TILE1_COUNTER_0.glbl_load_en,        "TILE1_COUNTER_0.glbl_load_en");
        sc_trace(tf, TILE1_COUNTER_0.event_load_val,      "TILE1_COUNTER_0.event_load_val");
        sc_trace(tf, TILE1_COUNTER_0.match_en,            "TILE1_COUNTER_0.match_en");
        sc_trace(tf, TILE1_COUNTER_0.match1_val,          "TILE1_COUNTER_0.match1_val");
        sc_trace(tf, TILE1_COUNTER_0.match2_val,          "TILE1_COUNTER_0.match2_val");
        sc_trace(tf, TILE1_COUNTER_0.glbl_serializer_mode,"TILE1_COUNTER_0.glbl_serializer_mode");
        sc_trace(tf, TILE1_COUNTER_0.hlc_count_load_val,  "TILE1_COUNTER_0.hlc_count_load_val");
        sc_trace(tf, TILE1_COUNTER_0.hlc_count_load_en,   "TILE1_COUNTER_0.hlc_count_load_en");
        sc_trace(tf, TILE1_COUNTER_0.hlc_match1_load_en,  "TILE1_COUNTER_0.hlc_match1_load_en");
        sc_trace(tf, TILE1_COUNTER_0.hlc_match2_load_en,  "TILE1_COUNTER_0.hlc_match2_load_en");
        sc_trace(tf, TILE1_COUNTER_0.count_out,           "TILE1_COUNTER_0.count_out");
        sc_trace(tf, TILE1_COUNTER_0.count_zero,          "TILE1_COUNTER_0.count_zero");
        sc_trace(tf, TILE1_COUNTER_0.count_match1,        "TILE1_COUNTER_0.count_match1");
        sc_trace(tf, TILE1_COUNTER_0.count_match2,        "TILE1_COUNTER_0.count_match2");
        sc_trace(tf, TILE1_COUNTER_0.reset,               "TILE1_COUNTER_0.reset");
        sc_trace(tf, TILE1_COUNTER_0.event,            	"TILE1_COUNTER_0.event");
        sc_trace(tf, TILE1_COUNTER_0.mode0,        		"TILE1_COUNTER_0.mode0");
        sc_trace(tf, TILE1_COUNTER_0.mode1,        		"TILE1_COUNTER_0.mode1");
#if TYPE == 2 || TYPE == 3
        sc_trace(tf, TILE1_COUNTER_0.lfsr_mode    ,     "TILE1_COUNTER_0.lfsr_mode");
        sc_trace(tf, TILE1_COUNTER_0.match1_tap_en,     "TILE1_COUNTER_0.match1_tap_en");
        sc_trace(tf, TILE1_COUNTER_0.match1_tap   ,     "TILE1_COUNTER_0.match1_tap");
        sc_trace(tf, TILE1_COUNTER_0.match2_tap_en,     "TILE1_COUNTER_0.match2_tap_en");
        sc_trace(tf, TILE1_COUNTER_0.match2_tap   ,     "TILE1_COUNTER_0.match2_tap");
#endif
#if TYPE == 3
        sc_trace(tf, TILE1_COUNTER_0.RECONFIG_PIPELINE_EN,     "TILE1_COUNTER_0.RECONFIG_PIPELINE_EN");
#endif
        TILE1_COUNTER_1.reset        (sig_TILE1_COUNTER_1_count_match2);
        TILE1_COUNTER_1.event        (sc_zero);
        TILE1_COUNTER_1.mode0        (sig_TILE1_COUNTER_0_count_match1);
        TILE1_COUNTER_1.mode1        (sc_one);
        TILE1_COUNTER_1.clk                  (sc_top_clock);
        TILE1_COUNTER_1.glbl_en              (sc_top_enable);
        TILE1_COUNTER_1.glbl_rst_n           (sc_top_reset);
        TILE1_COUNTER_1.add_shift_dir        (sig_TILE1_COUNTER_1_add_shift_dir);
        TILE1_COUNTER_1.add_shift_mode       (sig_TILE1_COUNTER_1_add_shift_mode);
        TILE1_COUNTER_1.add_shift_on_event_en(sig_TILE1_COUNTER_1_add_shift_on_event_en);
        TILE1_COUNTER_1.global_clk_en        (sig_TILE1_COUNTER_1_global_clk_en);
        TILE1_COUNTER_1.glbl_load_en         (sig_TILE1_COUNTER_1_glbl_load_en);
        TILE1_COUNTER_1.event_load_val       (sig_TILE1_COUNTER_1_event_load_val);
        TILE1_COUNTER_1.match_en             (sig_TILE1_COUNTER_1_match_en);
        TILE1_COUNTER_1.match1_val           (sig_TILE1_COUNTER_1_match1_val);
        TILE1_COUNTER_1.match2_val           (sig_TILE1_COUNTER_1_match2_val);
        TILE1_COUNTER_1.glbl_serializer_mode (sig_TILE1_COUNTER_1_glbl_serializer_mode);
        TILE1_COUNTER_1.hlc_count_load_val   (sig_TILE1_COUNTER_hlc_count_load_val);
        TILE1_COUNTER_1.hlc_count_load_en    (sig_TILE1_COUNTER_1_hlc_count_load_en);
        TILE1_COUNTER_1.hlc_match1_load_en   (sig_TILE1_COUNTER_1_hlc_match1_load_en);
        TILE1_COUNTER_1.hlc_match2_load_en   (sig_TILE1_COUNTER_1_hlc_match2_load_en);
        TILE1_COUNTER_1.count_out            (sig_TILE1_COUNTER_1_count_out);
        TILE1_COUNTER_1.count_zero           (sig_TILE1_COUNTER_1_count_zero);
        TILE1_COUNTER_1.count_match1         (sig_TILE1_COUNTER_1_count_match1);
        TILE1_COUNTER_1.count_match2         (sig_TILE1_COUNTER_1_count_match2);
#if TYPE == 2 || TYPE == 3
        TILE1_COUNTER_1.lfsr_mode               (sig_TILE1_COUNTER_1_lfsr_mode);
        TILE1_COUNTER_1.match1_tap_en           (sig_TILE1_COUNTER_1_match1_tap_en);
        TILE1_COUNTER_1.match1_tap              (sig_TILE1_COUNTER_1_match1_tap);
        TILE1_COUNTER_1.match2_tap_en           (sig_TILE1_COUNTER_1_match2_tap_en);
        TILE1_COUNTER_1.match2_tap              (sig_TILE1_COUNTER_1_match2_tap);
#endif
#if TYPE == 3
        TILE1_COUNTER_1.RECONFIG_PIPELINE_EN    (sig_TILE1_COUNTER_1_RECONFIG_PIPELINE_EN);
#endif
        sc_trace(tf, TILE1_COUNTER_1.clk,                 "TILE1_COUNTER_1.clk");
        sc_trace(tf, TILE1_COUNTER_1.glbl_en,             "TILE1_COUNTER_1.glbl_en");
        sc_trace(tf, TILE1_COUNTER_1.glbl_rst_n,          "TILE1_COUNTER_1.glbl_rst_n");
        sc_trace(tf, TILE1_COUNTER_1.add_shift_dir,       "TILE1_COUNTER_1.add_shift_dir");
        sc_trace(tf, TILE1_COUNTER_1.add_shift_mode,      "TILE1_COUNTER_1.add_shift_mode");
        sc_trace(tf, TILE1_COUNTER_1.add_shift_on_event_en, "TILE1_COUNTER_1.add_shift_on_event_en");
        sc_trace(tf, TILE1_COUNTER_1.global_clk_en,       "TILE1_COUNTER_1.global_clk_en");
        sc_trace(tf, TILE1_COUNTER_1.glbl_load_en,        "TILE1_COUNTER_1.glbl_load_en");
        sc_trace(tf, TILE1_COUNTER_1.event_load_val,      "TILE1_COUNTER_1.event_load_val");
        sc_trace(tf, TILE1_COUNTER_1.match_en,            "TILE1_COUNTER_1.match_en");
        sc_trace(tf, TILE1_COUNTER_1.match1_val,          "TILE1_COUNTER_1.match1_val");
        sc_trace(tf, TILE1_COUNTER_1.match2_val,          "TILE1_COUNTER_1.match2_val");
        sc_trace(tf, TILE1_COUNTER_1.glbl_serializer_mode,"TILE1_COUNTER_1.glbl_serializer_mode");
        sc_trace(tf, TILE1_COUNTER_1.hlc_count_load_val,  "TILE1_COUNTER_1.hlc_count_load_val");
        sc_trace(tf, TILE1_COUNTER_1.hlc_count_load_en,   "TILE1_COUNTER_1.hlc_count_load_en");
        sc_trace(tf, TILE1_COUNTER_1.hlc_match1_load_en,  "TILE1_COUNTER_1.hlc_match1_load_en");
        sc_trace(tf, TILE1_COUNTER_1.hlc_match2_load_en,  "TILE1_COUNTER_1.hlc_match2_load_en");
        sc_trace(tf, TILE1_COUNTER_1.count_out,           "TILE1_COUNTER_1.count_out");
        sc_trace(tf, TILE1_COUNTER_1.count_zero,          "TILE1_COUNTER_1.count_zero");
        sc_trace(tf, TILE1_COUNTER_1.count_match1,        "TILE1_COUNTER_1.count_match1");
        sc_trace(tf, TILE1_COUNTER_1.count_match2,        "TILE1_COUNTER_1.count_match2");
        sc_trace(tf, TILE1_COUNTER_1.reset,               "TILE1_COUNTER_1.reset");
        sc_trace(tf, TILE1_COUNTER_1.event,            	"TILE1_COUNTER_1.event");
        sc_trace(tf, TILE1_COUNTER_1.mode0,        		"TILE1_COUNTER_1.mode0");
        sc_trace(tf, TILE1_COUNTER_1.mode1,        		"TILE1_COUNTER_1.mode1");
#if TYPE == 2 || TYPE == 3
        sc_trace(tf, TILE1_COUNTER_1.lfsr_mode    ,     "TILE1_COUNTER_1.lfsr_mode");
        sc_trace(tf, TILE1_COUNTER_1.match1_tap_en,     "TILE1_COUNTER_1.match1_tap_en");
        sc_trace(tf, TILE1_COUNTER_1.match1_tap   ,     "TILE1_COUNTER_1.match1_tap");
        sc_trace(tf, TILE1_COUNTER_1.match2_tap_en,     "TILE1_COUNTER_1.match2_tap_en");
        sc_trace(tf, TILE1_COUNTER_1.match2_tap   ,     "TILE1_COUNTER_1.match2_tap");
#endif
#if TYPE == 3
        sc_trace(tf, TILE1_COUNTER_1.RECONFIG_PIPELINE_EN,     "TILE1_COUNTER_1.RECONFIG_PIPELINE_EN");
#endif
        TILE1_COUNTER_2.reset        (sig_TILE1_COUNTER_2_count_match1);
        TILE1_COUNTER_2.event        (sc_zero);
        TILE1_COUNTER_2.mode0        (sc_one);
        TILE1_COUNTER_2.mode1        (sc_one);
        TILE1_COUNTER_2.clk                  (sc_top_clock);
        TILE1_COUNTER_2.glbl_en              (sc_top_enable);
        TILE1_COUNTER_2.glbl_rst_n           (sc_top_reset);
        TILE1_COUNTER_2.add_shift_dir        (sig_TILE1_COUNTER_2_add_shift_dir);
        TILE1_COUNTER_2.add_shift_mode       (sig_TILE1_COUNTER_2_add_shift_mode);
        TILE1_COUNTER_2.add_shift_on_event_en(sig_TILE1_COUNTER_2_add_shift_on_event_en);
        TILE1_COUNTER_2.global_clk_en        (sig_TILE1_COUNTER_2_global_clk_en);
        TILE1_COUNTER_2.glbl_load_en         (sig_TILE1_COUNTER_2_glbl_load_en);
        TILE1_COUNTER_2.event_load_val       (sig_TILE1_COUNTER_2_event_load_val);
        TILE1_COUNTER_2.match_en             (sig_TILE1_COUNTER_2_match_en);
        TILE1_COUNTER_2.match1_val           (sig_TILE1_COUNTER_2_match1_val);
        TILE1_COUNTER_2.match2_val           (sig_TILE1_COUNTER_2_match2_val);
        TILE1_COUNTER_2.glbl_serializer_mode (sig_TILE1_COUNTER_2_glbl_serializer_mode);
        TILE1_COUNTER_2.hlc_count_load_val   (sig_TILE1_COUNTER_hlc_count_load_val);
        TILE1_COUNTER_2.hlc_count_load_en    (sig_TILE1_COUNTER_2_hlc_count_load_en);
        TILE1_COUNTER_2.hlc_match1_load_en   (sig_TILE1_COUNTER_2_hlc_match1_load_en);
        TILE1_COUNTER_2.hlc_match2_load_en   (sig_TILE1_COUNTER_2_hlc_match2_load_en);
        TILE1_COUNTER_2.count_out            (sig_TILE1_COUNTER_2_count_out);
        TILE1_COUNTER_2.count_zero           (sig_TILE1_COUNTER_2_count_zero);
        TILE1_COUNTER_2.count_match1         (sig_TILE1_COUNTER_2_count_match1);
        TILE1_COUNTER_2.count_match2         (sig_TILE1_COUNTER_2_count_match2);
#if TYPE == 2 || TYPE == 3
        TILE1_COUNTER_2.lfsr_mode               (sig_TILE1_COUNTER_2_lfsr_mode);
        TILE1_COUNTER_2.match1_tap_en           (sig_TILE1_COUNTER_2_match1_tap_en);
        TILE1_COUNTER_2.match1_tap              (sig_TILE1_COUNTER_2_match1_tap);
        TILE1_COUNTER_2.match2_tap_en           (sig_TILE1_COUNTER_2_match2_tap_en);
        TILE1_COUNTER_2.match2_tap              (sig_TILE1_COUNTER_2_match2_tap);
#endif
#if TYPE == 3
        TILE1_COUNTER_2.RECONFIG_PIPELINE_EN    (sig_TILE1_COUNTER_2_RECONFIG_PIPELINE_EN);
#endif
        sc_trace(tf, TILE1_COUNTER_2.clk,                 "TILE1_COUNTER_2.clk");
        sc_trace(tf, TILE1_COUNTER_2.glbl_en,             "TILE1_COUNTER_2.glbl_en");
        sc_trace(tf, TILE1_COUNTER_2.glbl_rst_n,          "TILE1_COUNTER_2.glbl_rst_n");
        sc_trace(tf, TILE1_COUNTER_2.add_shift_dir,       "TILE1_COUNTER_2.add_shift_dir");
        sc_trace(tf, TILE1_COUNTER_2.add_shift_mode,      "TILE1_COUNTER_2.add_shift_mode");
        sc_trace(tf, TILE1_COUNTER_2.add_shift_on_event_en, "TILE1_COUNTER_2.add_shift_on_event_en");
        sc_trace(tf, TILE1_COUNTER_2.global_clk_en,       "TILE1_COUNTER_2.global_clk_en");
        sc_trace(tf, TILE1_COUNTER_2.glbl_load_en,        "TILE1_COUNTER_2.glbl_load_en");
        sc_trace(tf, TILE1_COUNTER_2.event_load_val,      "TILE1_COUNTER_2.event_load_val");
        sc_trace(tf, TILE1_COUNTER_2.match_en,            "TILE1_COUNTER_2.match_en");
        sc_trace(tf, TILE1_COUNTER_2.match1_val,          "TILE1_COUNTER_2.match1_val");
        sc_trace(tf, TILE1_COUNTER_2.match2_val,          "TILE1_COUNTER_2.match2_val");
        sc_trace(tf, TILE1_COUNTER_2.glbl_serializer_mode,"TILE1_COUNTER_2.glbl_serializer_mode");
        sc_trace(tf, TILE1_COUNTER_2.hlc_count_load_val,  "TILE1_COUNTER_2.hlc_count_load_val");
        sc_trace(tf, TILE1_COUNTER_2.hlc_count_load_en,   "TILE1_COUNTER_2.hlc_count_load_en");
        sc_trace(tf, TILE1_COUNTER_2.hlc_match1_load_en,  "TILE1_COUNTER_2.hlc_match1_load_en");
        sc_trace(tf, TILE1_COUNTER_2.hlc_match2_load_en,  "TILE1_COUNTER_2.hlc_match2_load_en");
        sc_trace(tf, TILE1_COUNTER_2.count_out,           "TILE1_COUNTER_2.count_out");
        sc_trace(tf, TILE1_COUNTER_2.count_zero,          "TILE1_COUNTER_2.count_zero");
        sc_trace(tf, TILE1_COUNTER_2.count_match1,        "TILE1_COUNTER_2.count_match1");
        sc_trace(tf, TILE1_COUNTER_2.count_match2,        "TILE1_COUNTER_2.count_match2");
        sc_trace(tf, TILE1_COUNTER_2.reset,               "TILE1_COUNTER_2.reset");
        sc_trace(tf, TILE1_COUNTER_2.event,            	"TILE1_COUNTER_2.event");
        sc_trace(tf, TILE1_COUNTER_2.mode0,        		"TILE1_COUNTER_2.mode0");
        sc_trace(tf, TILE1_COUNTER_2.mode1,        		"TILE1_COUNTER_2.mode1");
#if TYPE == 2 || TYPE == 3
        sc_trace(tf, TILE1_COUNTER_2.lfsr_mode    ,     "TILE1_COUNTER_2.lfsr_mode");
        sc_trace(tf, TILE1_COUNTER_2.match1_tap_en,     "TILE1_COUNTER_2.match1_tap_en");
        sc_trace(tf, TILE1_COUNTER_2.match1_tap   ,     "TILE1_COUNTER_2.match1_tap");
        sc_trace(tf, TILE1_COUNTER_2.match2_tap_en,     "TILE1_COUNTER_2.match2_tap_en");
        sc_trace(tf, TILE1_COUNTER_2.match2_tap   ,     "TILE1_COUNTER_2.match2_tap");
#endif
#if TYPE == 3
        sc_trace(tf, TILE1_COUNTER_2.RECONFIG_PIPELINE_EN,     "TILE1_COUNTER_2.RECONFIG_PIPELINE_EN");
#endif
        TILE1_HLC.e0        (sig_TILE1_HLC_e0);
        sc_trace(tf, TILE1_HLC.e0, "TILE1_HLC.e0");
        TILE1_HLC.e1        (sig_TILE1_HLC_e1);
        sc_trace(tf, TILE1_HLC.e1, "TILE1_HLC.e1");
        TILE1_HLC.e2        (sig_TILE1_HLC_e2);
        sc_trace(tf, TILE1_HLC.e2, "TILE1_HLC.e2");
        TILE1_HLC.e3        (sig_TILE1_HLC_e3);
        sc_trace(tf, TILE1_HLC.e3, "TILE1_HLC.e3");
#if TYPE == 2 || TYPE == 3
        TILE1_HLC.ae0       (sig_TILE1_HLC_ae0);
        TILE1_HLC.ae1       (sig_TILE1_HLC_ae0);
        TILE1_HLC.ae2       (sig_TILE1_HLC_ae0);
        TILE1_HLC.ae3       (sig_TILE1_HLC_ae0);
        sc_trace(tf, TILE1_HLC.ae0,            "TILE1_HLC.ae0");
        sc_trace(tf, TILE1_HLC.ae1,            "TILE1_HLC.ae1");
        sc_trace(tf, TILE1_HLC.ae2,            "TILE1_HLC.ae2");
        sc_trace(tf, TILE1_HLC.ae3,            "TILE1_HLC.ae3");

        TILE1_HLC.clb_result_in[0] (sig_TILE1_BOUNDARY_OUT_out0);
        TILE1_HLC.clb_result_in[1] (sig_TILE1_BOUNDARY_OUT_out1);
        TILE1_HLC.clb_result_in[2] (sig_TILE1_BOUNDARY_OUT_out2);
        TILE1_HLC.clb_result_in[3] (sig_TILE1_BOUNDARY_OUT_out3);
        TILE1_HLC.clb_result_in[4] (sig_TILE1_BOUNDARY_OUT_out4);
        TILE1_HLC.clb_result_in[5] (sig_TILE1_BOUNDARY_OUT_out5);
        TILE1_HLC.clb_result_in[6] (sig_TILE1_BOUNDARY_OUT_out6);
        TILE1_HLC.clb_result_in[7] (sig_TILE1_BOUNDARY_OUT_out7);
        sc_trace(tf, TILE1_HLC.clb_result_in[0],           "TILE1_HLC.clb_result_in(0)");
        sc_trace(tf, TILE1_HLC.clb_result_in[1],           "TILE1_HLC.clb_result_in(1)");
        sc_trace(tf, TILE1_HLC.clb_result_in[2],           "TILE1_HLC.clb_result_in(2)");
        sc_trace(tf, TILE1_HLC.clb_result_in[3],           "TILE1_HLC.clb_result_in(3)");
        sc_trace(tf, TILE1_HLC.clb_result_in[4],           "TILE1_HLC.clb_result_in(4)");
        sc_trace(tf, TILE1_HLC.clb_result_in[5],           "TILE1_HLC.clb_result_in(5)");
        sc_trace(tf, TILE1_HLC.clb_result_in[6],           "TILE1_HLC.clb_result_in(6)");
        sc_trace(tf, TILE1_HLC.clb_result_in[7],           "TILE1_HLC.clb_result_in(7)");

        TILE1_HLC.clb_async_result_in[0] (sig_TILE1_BOUNDARY_OUT_out0);
        TILE1_HLC.clb_async_result_in[1] (sig_TILE1_BOUNDARY_OUT_out1);
        TILE1_HLC.clb_async_result_in[2] (sig_TILE1_BOUNDARY_OUT_out2);
        TILE1_HLC.clb_async_result_in[3] (sig_TILE1_BOUNDARY_OUT_out3);
        TILE1_HLC.clb_async_result_in[4] (sig_TILE1_BOUNDARY_OUT_out4);
        TILE1_HLC.clb_async_result_in[5] (sig_TILE1_BOUNDARY_OUT_out5);
        TILE1_HLC.clb_async_result_in[6] (sig_TILE1_BOUNDARY_OUT_out6);
        TILE1_HLC.clb_async_result_in[7] (sig_TILE1_BOUNDARY_OUT_out7);
        sc_trace(tf, TILE1_HLC.clb_async_result_in[0],     "TILE1_HLC.clb_async_result_in(0)");
        sc_trace(tf, TILE1_HLC.clb_async_result_in[1],     "TILE1_HLC.clb_async_result_in(1)");
        sc_trace(tf, TILE1_HLC.clb_async_result_in[2],     "TILE1_HLC.clb_async_result_in(2)");
        sc_trace(tf, TILE1_HLC.clb_async_result_in[3],     "TILE1_HLC.clb_async_result_in(3)");
        sc_trace(tf, TILE1_HLC.clb_async_result_in[4],     "TILE1_HLC.clb_async_result_in(4)");
        sc_trace(tf, TILE1_HLC.clb_async_result_in[5],     "TILE1_HLC.clb_async_result_in(5)");
        sc_trace(tf, TILE1_HLC.clb_async_result_in[6],     "TILE1_HLC.clb_async_result_in(6)");
        sc_trace(tf, TILE1_HLC.clb_async_result_in[7],     "TILE1_HLC.clb_async_result_in(7)");
#endif
#if TYPE == 3
        TILE1_HLC.RECONFIG_PIPELINE_EN       (sig_TILE1_HLC_RECONFIG_PIPELINE_EN);
        sc_trace(tf, TILE1_HLC.RECONFIG_PIPELINE_EN,            "TILE1_HLC.RECONFIG_PIPELINE_EN");
#endif
        TILE1_HLC.P_clk(sc_top_clock);
        TILE1_HLC.P_glbl_load_en(sc_top_enable);
        TILE1_HLC.P_rst_n(sc_top_reset);
        TILE1_HLC.P_counter_in_0(sig_TILE1_COUNTER_0_count_out);
        TILE1_HLC.P_counter_in_1(sig_TILE1_COUNTER_1_count_out);
        TILE1_HLC.P_counter_in_2(sig_TILE1_COUNTER_2_count_out);
        TILE1_HLC.P_local_count_load_enable_0(sig_TILE1_COUNTER_0_hlc_count_load_en);
        TILE1_HLC.P_local_count_load_enable_1(sig_TILE1_COUNTER_1_hlc_count_load_en);
        TILE1_HLC.P_local_count_load_enable_2(sig_TILE1_COUNTER_2_hlc_count_load_en);
        TILE1_HLC.P_local_count_match1_enable_0(sig_TILE1_COUNTER_0_hlc_match1_load_en);
        TILE1_HLC.P_local_count_match1_enable_1(sig_TILE1_COUNTER_1_hlc_match1_load_en);
        TILE1_HLC.P_local_count_match1_enable_2(sig_TILE1_COUNTER_2_hlc_match1_load_en);
        TILE1_HLC.P_local_count_match2_enable_0(sig_TILE1_COUNTER_0_hlc_match2_load_en);
        TILE1_HLC.P_local_count_match2_enable_1(sig_TILE1_COUNTER_1_hlc_match2_load_en);
        TILE1_HLC.P_local_count_match2_enable_2(sig_TILE1_COUNTER_2_hlc_match2_load_en);

        sc_trace(tf, TILE1_HLC.P_clk,            "TILE1_HLC.P_clk");
        sc_trace(tf, TILE1_HLC.P_glbl_load_en,   "TILE1_HLC.P_glbl_load_en");
        sc_trace(tf, TILE1_HLC.P_rst_n,          "TILE1_HLC.P_rst_n");
        sc_trace(tf, TILE1_HLC.P_counter_in_0, "TILE1_HLC.P_counter_in_0");
        sc_trace(tf, TILE1_HLC.P_counter_in_1, "TILE1_HLC.P_counter_in_1");
        sc_trace(tf, TILE1_HLC.P_counter_in_2, "TILE1_HLC.P_counter_in_2");
        sc_trace(tf, TILE1_HLC.P_local_count_load_enable_0, "TILE1_HLC.P_local_count_load_enable_0");
        sc_trace(tf, TILE1_HLC.P_local_count_load_enable_1, "TILE1_HLC.P_local_count_load_enable_1");
        sc_trace(tf, TILE1_HLC.P_local_count_load_enable_2, "TILE1_HLC.P_local_count_load_enable_2");
        sc_trace(tf, TILE1_HLC.P_local_count_match1_enable_0, "TILE1_HLC.P_local_count_match1_enable_0");
        sc_trace(tf, TILE1_HLC.P_local_count_match1_enable_1, "TILE1_HLC.P_local_count_match1_enable_1");
        sc_trace(tf, TILE1_HLC.P_local_count_match1_enable_2, "TILE1_HLC.P_local_count_match1_enable_2");
        sc_trace(tf, TILE1_HLC.P_local_count_match2_enable_0, "TILE1_HLC.P_local_count_match2_enable_0");
        sc_trace(tf, TILE1_HLC.P_local_count_match2_enable_1, "TILE1_HLC.P_local_count_match2_enable_1");
        sc_trace(tf, TILE1_HLC.P_local_count_match2_enable_2, "TILE1_HLC.P_local_count_match2_enable_2");

        TILE1_HLC.P_EVENT_BUS_IN[0](sc_zero);
        TILE1_HLC.P_EVENT_BUS_IN[1](sig_TILE1_COUNTER_0_count_match2);
        TILE1_HLC.P_EVENT_BUS_IN[2](sig_TILE1_COUNTER_0_count_zero);
        TILE1_HLC.P_EVENT_BUS_IN[3](sig_TILE1_COUNTER_0_count_match1);
        TILE1_HLC.P_EVENT_BUS_IN[4](sig_TILE1_FSM_0_S0);
        TILE1_HLC.P_EVENT_BUS_IN[5](sig_TILE1_FSM_0_S1);
        TILE1_HLC.P_EVENT_BUS_IN[6](sig_TILE1_FSM_0_OUT);
        TILE1_HLC.P_EVENT_BUS_IN[7](sig_TILE1_LUT_0_OUT);
        TILE1_HLC.P_EVENT_BUS_IN[8](sc_one);
        TILE1_HLC.P_EVENT_BUS_IN[9](sig_TILE1_COUNTER_1_count_match2);
        TILE1_HLC.P_EVENT_BUS_IN[10](sig_TILE1_COUNTER_1_count_zero);
        TILE1_HLC.P_EVENT_BUS_IN[11](sig_TILE1_COUNTER_1_count_match1);
        TILE1_HLC.P_EVENT_BUS_IN[12](sig_TILE1_FSM_1_S0);
        TILE1_HLC.P_EVENT_BUS_IN[13](sig_TILE1_FSM_1_S1);
        TILE1_HLC.P_EVENT_BUS_IN[14](sig_TILE1_FSM_1_OUT);
        TILE1_HLC.P_EVENT_BUS_IN[15](sig_TILE1_LUT_1_OUT);
        TILE1_HLC.P_EVENT_BUS_IN[16](sc_zero);
        TILE1_HLC.P_EVENT_BUS_IN[17](sig_TILE1_COUNTER_2_count_match2);
        TILE1_HLC.P_EVENT_BUS_IN[18](sig_TILE1_COUNTER_2_count_zero);
        TILE1_HLC.P_EVENT_BUS_IN[19](sig_TILE1_COUNTER_2_count_match1);
        TILE1_HLC.P_EVENT_BUS_IN[20](sig_TILE1_FSM_2_S0);
        TILE1_HLC.P_EVENT_BUS_IN[21](sig_TILE1_FSM_2_S1);
        TILE1_HLC.P_EVENT_BUS_IN[22](sig_TILE1_FSM_2_OUT);
        TILE1_HLC.P_EVENT_BUS_IN[23](sig_TILE1_LUT_2_OUT);
        TILE1_HLC.P_EVENT_BUS_IN[24](sig_TILE1_BOUNDARY_IN_out0);
        TILE1_HLC.P_EVENT_BUS_IN[25](sig_TILE1_BOUNDARY_IN_out1);
        TILE1_HLC.P_EVENT_BUS_IN[26](sig_TILE1_BOUNDARY_IN_out2);
        TILE1_HLC.P_EVENT_BUS_IN[27](sig_TILE1_BOUNDARY_IN_out3);
        TILE1_HLC.P_EVENT_BUS_IN[28](sig_TILE1_BOUNDARY_IN_out4);
        TILE1_HLC.P_EVENT_BUS_IN[29](sig_TILE1_BOUNDARY_IN_out5);
        TILE1_HLC.P_EVENT_BUS_IN[30](sig_TILE1_BOUNDARY_IN_out6);
        TILE1_HLC.P_EVENT_BUS_IN[31](sig_TILE1_BOUNDARY_IN_out7);

        sc_trace(tf, TILE1_HLC.P_EVENT_BUS_IN[0], "TILE1_HLC.P_EVENT_BUS_IN(0)");
        sc_trace(tf, TILE1_HLC.P_EVENT_BUS_IN[1], "TILE1_HLC.P_EVENT_BUS_IN(1)");
        sc_trace(tf, TILE1_HLC.P_EVENT_BUS_IN[2], "TILE1_HLC.P_EVENT_BUS_IN(2)");
        sc_trace(tf, TILE1_HLC.P_EVENT_BUS_IN[3], "TILE1_HLC.P_EVENT_BUS_IN(3)");
        sc_trace(tf, TILE1_HLC.P_EVENT_BUS_IN[4], "TILE1_HLC.P_EVENT_BUS_IN(4)");
        sc_trace(tf, TILE1_HLC.P_EVENT_BUS_IN[5], "TILE1_HLC.P_EVENT_BUS_IN(5)");
        sc_trace(tf, TILE1_HLC.P_EVENT_BUS_IN[6], "TILE1_HLC.P_EVENT_BUS_IN(6)");
        sc_trace(tf, TILE1_HLC.P_EVENT_BUS_IN[7], "TILE1_HLC.P_EVENT_BUS_IN(7)");
        sc_trace(tf, TILE1_HLC.P_EVENT_BUS_IN[8], "TILE1_HLC.P_EVENT_BUS_IN(8)");
        sc_trace(tf, TILE1_HLC.P_EVENT_BUS_IN[9], "TILE1_HLC.P_EVENT_BUS_IN(9)");
        sc_trace(tf, TILE1_HLC.P_EVENT_BUS_IN[10], "TILE1_HLC.P_EVENT_BUS_IN(10)");
        sc_trace(tf, TILE1_HLC.P_EVENT_BUS_IN[11], "TILE1_HLC.P_EVENT_BUS_IN(11)");
        sc_trace(tf, TILE1_HLC.P_EVENT_BUS_IN[12], "TILE1_HLC.P_EVENT_BUS_IN(12)");
        sc_trace(tf, TILE1_HLC.P_EVENT_BUS_IN[13], "TILE1_HLC.P_EVENT_BUS_IN(13)");
        sc_trace(tf, TILE1_HLC.P_EVENT_BUS_IN[14], "TILE1_HLC.P_EVENT_BUS_IN(14)");
        sc_trace(tf, TILE1_HLC.P_EVENT_BUS_IN[15], "TILE1_HLC.P_EVENT_BUS_IN(15)");
        sc_trace(tf, TILE1_HLC.P_EVENT_BUS_IN[16], "TILE1_HLC.P_EVENT_BUS_IN(16)");
        sc_trace(tf, TILE1_HLC.P_EVENT_BUS_IN[17], "TILE1_HLC.P_EVENT_BUS_IN(17)");
        sc_trace(tf, TILE1_HLC.P_EVENT_BUS_IN[18], "TILE1_HLC.P_EVENT_BUS_IN(18)");
        sc_trace(tf, TILE1_HLC.P_EVENT_BUS_IN[19], "TILE1_HLC.P_EVENT_BUS_IN(19)");
        sc_trace(tf, TILE1_HLC.P_EVENT_BUS_IN[20], "TILE1_HLC.P_EVENT_BUS_IN(20)");
        sc_trace(tf, TILE1_HLC.P_EVENT_BUS_IN[21], "TILE1_HLC.P_EVENT_BUS_IN(21)");
        sc_trace(tf, TILE1_HLC.P_EVENT_BUS_IN[22], "TILE1_HLC.P_EVENT_BUS_IN(22)");
        sc_trace(tf, TILE1_HLC.P_EVENT_BUS_IN[23], "TILE1_HLC.P_EVENT_BUS_IN(23)");
        sc_trace(tf, TILE1_HLC.P_EVENT_BUS_IN[24], "TILE1_HLC.P_EVENT_BUS_IN(24)");
        sc_trace(tf, TILE1_HLC.P_EVENT_BUS_IN[25], "TILE1_HLC.P_EVENT_BUS_IN(25)");
        sc_trace(tf, TILE1_HLC.P_EVENT_BUS_IN[26], "TILE1_HLC.P_EVENT_BUS_IN(26)");
        sc_trace(tf, TILE1_HLC.P_EVENT_BUS_IN[27], "TILE1_HLC.P_EVENT_BUS_IN(27)");
        sc_trace(tf, TILE1_HLC.P_EVENT_BUS_IN[28], "TILE1_HLC.P_EVENT_BUS_IN(28)");
        sc_trace(tf, TILE1_HLC.P_EVENT_BUS_IN[29], "TILE1_HLC.P_EVENT_BUS_IN(29)");
        sc_trace(tf, TILE1_HLC.P_EVENT_BUS_IN[30], "TILE1_HLC.P_EVENT_BUS_IN(30)");
        sc_trace(tf, TILE1_HLC.P_EVENT_BUS_IN[31], "TILE1_HLC.P_EVENT_BUS_IN(31)");


		TILE1_HLC.hlc_instructions[0](sig_TILE1_HLC_hlc_instr_0);
		TILE1_HLC.hlc_instructions[1](sig_TILE1_HLC_hlc_instr_1);
		TILE1_HLC.hlc_instructions[2](sig_TILE1_HLC_hlc_instr_2);
		TILE1_HLC.hlc_instructions[3](sig_TILE1_HLC_hlc_instr_3);
		TILE1_HLC.hlc_instructions[4](sig_TILE1_HLC_hlc_instr_4);
		TILE1_HLC.hlc_instructions[5](sig_TILE1_HLC_hlc_instr_5);
		TILE1_HLC.hlc_instructions[6](sig_TILE1_HLC_hlc_instr_6);
		TILE1_HLC.hlc_instructions[7](sig_TILE1_HLC_hlc_instr_7);
		TILE1_HLC.hlc_instructions[8](sig_TILE1_HLC_hlc_instr_8);
		TILE1_HLC.hlc_instructions[9](sig_TILE1_HLC_hlc_instr_9);
		TILE1_HLC.hlc_instructions[10](sig_TILE1_HLC_hlc_instr_10);
		TILE1_HLC.hlc_instructions[11](sig_TILE1_HLC_hlc_instr_11);
		TILE1_HLC.hlc_instructions[12](sig_TILE1_HLC_hlc_instr_12);
		TILE1_HLC.hlc_instructions[13](sig_TILE1_HLC_hlc_instr_13);
		TILE1_HLC.hlc_instructions[14](sig_TILE1_HLC_hlc_instr_14);
		TILE1_HLC.hlc_instructions[15](sig_TILE1_HLC_hlc_instr_15);
		TILE1_HLC.hlc_instructions[16](sig_TILE1_HLC_hlc_instr_16);
		TILE1_HLC.hlc_instructions[17](sig_TILE1_HLC_hlc_instr_17);
		TILE1_HLC.hlc_instructions[18](sig_TILE1_HLC_hlc_instr_18);
		TILE1_HLC.hlc_instructions[19](sig_TILE1_HLC_hlc_instr_19);
		TILE1_HLC.hlc_instructions[20](sig_TILE1_HLC_hlc_instr_20);
		TILE1_HLC.hlc_instructions[21](sig_TILE1_HLC_hlc_instr_21);
		TILE1_HLC.hlc_instructions[22](sig_TILE1_HLC_hlc_instr_22);
		TILE1_HLC.hlc_instructions[23](sig_TILE1_HLC_hlc_instr_23);
		TILE1_HLC.hlc_instructions[24](sig_TILE1_HLC_hlc_instr_24);
		TILE1_HLC.hlc_instructions[25](sig_TILE1_HLC_hlc_instr_25);
		TILE1_HLC.hlc_instructions[26](sig_TILE1_HLC_hlc_instr_26);
		TILE1_HLC.hlc_instructions[27](sig_TILE1_HLC_hlc_instr_27);
		TILE1_HLC.hlc_instructions[28](sig_TILE1_HLC_hlc_instr_28);
		TILE1_HLC.hlc_instructions[29](sig_TILE1_HLC_hlc_instr_29);
		TILE1_HLC.hlc_instructions[30](sig_TILE1_HLC_hlc_instr_30);
		TILE1_HLC.hlc_instructions[31](sig_TILE1_HLC_hlc_instr_31);

		sc_trace(tf, TILE1_HLC.hlc_instructions[0], "TILE1_HLC.hlc_instructions(0)");
		sc_trace(tf, TILE1_HLC.hlc_instructions[1], "TILE1_HLC.hlc_instructions(1)");
		sc_trace(tf, TILE1_HLC.hlc_instructions[2], "TILE1_HLC.hlc_instructions(2)");
		sc_trace(tf, TILE1_HLC.hlc_instructions[3], "TILE1_HLC.hlc_instructions(3)");
		sc_trace(tf, TILE1_HLC.hlc_instructions[4], "TILE1_HLC.hlc_instructions(4)");
		sc_trace(tf, TILE1_HLC.hlc_instructions[5], "TILE1_HLC.hlc_instructions(5)");
		sc_trace(tf, TILE1_HLC.hlc_instructions[6], "TILE1_HLC.hlc_instructions(6)");
		sc_trace(tf, TILE1_HLC.hlc_instructions[7], "TILE1_HLC.hlc_instructions(7)");
		sc_trace(tf, TILE1_HLC.hlc_instructions[8], "TILE1_HLC.hlc_instructions(8)");
		sc_trace(tf, TILE1_HLC.hlc_instructions[9], "TILE1_HLC.hlc_instructions(9)");
		sc_trace(tf, TILE1_HLC.hlc_instructions[10], "TILE1_HLC.hlc_instructions(10)");
		sc_trace(tf, TILE1_HLC.hlc_instructions[11], "TILE1_HLC.hlc_instructions(11)");
		sc_trace(tf, TILE1_HLC.hlc_instructions[12], "TILE1_HLC.hlc_instructions(12)");
		sc_trace(tf, TILE1_HLC.hlc_instructions[13], "TILE1_HLC.hlc_instructions(13)");
		sc_trace(tf, TILE1_HLC.hlc_instructions[14], "TILE1_HLC.hlc_instructions(14)");
		sc_trace(tf, TILE1_HLC.hlc_instructions[15], "TILE1_HLC.hlc_instructions(15)");
		sc_trace(tf, TILE1_HLC.hlc_instructions[16], "TILE1_HLC.hlc_instructions(16)");
		sc_trace(tf, TILE1_HLC.hlc_instructions[17], "TILE1_HLC.hlc_instructions(17)");
		sc_trace(tf, TILE1_HLC.hlc_instructions[18], "TILE1_HLC.hlc_instructions(18)");
		sc_trace(tf, TILE1_HLC.hlc_instructions[19], "TILE1_HLC.hlc_instructions(19)");
		sc_trace(tf, TILE1_HLC.hlc_instructions[20], "TILE1_HLC.hlc_instructions(20)");
		sc_trace(tf, TILE1_HLC.hlc_instructions[21], "TILE1_HLC.hlc_instructions(21)");
		sc_trace(tf, TILE1_HLC.hlc_instructions[22], "TILE1_HLC.hlc_instructions(22)");
		sc_trace(tf, TILE1_HLC.hlc_instructions[23], "TILE1_HLC.hlc_instructions(23)");
		sc_trace(tf, TILE1_HLC.hlc_instructions[24], "TILE1_HLC.hlc_instructions(24)");
		sc_trace(tf, TILE1_HLC.hlc_instructions[25], "TILE1_HLC.hlc_instructions(25)");
		sc_trace(tf, TILE1_HLC.hlc_instructions[26], "TILE1_HLC.hlc_instructions(26)");
		sc_trace(tf, TILE1_HLC.hlc_instructions[27], "TILE1_HLC.hlc_instructions(27)");
		sc_trace(tf, TILE1_HLC.hlc_instructions[28], "TILE1_HLC.hlc_instructions(28)");
		sc_trace(tf, TILE1_HLC.hlc_instructions[29], "TILE1_HLC.hlc_instructions(29)");
		sc_trace(tf, TILE1_HLC.hlc_instructions[30], "TILE1_HLC.hlc_instructions(30)");
		sc_trace(tf, TILE1_HLC.hlc_instructions[31], "TILE1_HLC.hlc_instructions(31)");
		
		
        TILE1_HLC.P_counter_load_bus(sig_TILE1_COUNTER_hlc_count_load_val);
        sc_trace(tf, TILE1_HLC.P_counter_load_bus, "TILE1_HLC.P_counter_load_bus");

        // Not connected.  Here for debug purposes
        TILE1_HLC.P_comm_R0_out(sig_TILE1_HLC_P_comm_R0_out);
        TILE1_HLC.P_comm_R1_out(sig_TILE1_HLC_P_comm_R1_out);
        TILE1_HLC.P_comm_R2_out(sig_TILE1_HLC_P_comm_R2_out);
        TILE1_HLC.P_comm_R3_out(sig_TILE1_HLC_P_comm_R3_out);

        sc_trace(tf, TILE1_HLC.P_comm_R0_out, "TILE1_HLC.P_comm_R0_out");
        sc_trace(tf, TILE1_HLC.P_comm_R1_out, "TILE1_HLC.P_comm_R1_out");
        sc_trace(tf, TILE1_HLC.P_comm_R2_out, "TILE1_HLC.P_comm_R2_out");
        sc_trace(tf, TILE1_HLC.P_comm_R3_out, "TILE1_HLC.P_comm_R3_out");

        TILE1_HLC.P_push_data_en  (sig_TILE1_HLC_P_push_data_en);
        TILE1_HLC.P_push_data_out (sig_TILE1_HLC_P_push_data_out);
        TILE1_HLC.P_pull_data_en  (sig_TILE1_HLC_P_pull_data_en);
        TILE1_HLC.P_set_intr_flag (sig_TILE1_HLC_P_set_intr_flag);

        sc_trace(tf, TILE1_HLC.P_push_data_en,  "TILE1_HLC.P_push_data_en");
        sc_trace(tf, TILE1_HLC.P_push_data_out, "TILE1_HLC.P_push_data_out");
        sc_trace(tf, TILE1_HLC.P_pull_data_en,  "TILE1_HLC.P_pull_data_en");
        sc_trace(tf, TILE1_HLC.P_set_intr_flag, "TILE1_HLC.P_set_intr_flag");

        // not currently used.  Fixed to 0 value.
        TILE1_HLC.P_glbl_load_addr  (sig_TILE1_HLC_P_glbl_load_addr);
        TILE1_HLC.P_glbl_load_value (sig_TILE1_HLC_P_glbl_load_value);
        TILE1_HLC.P_pull_data_in    (sig_TILE1_HLC_P_pull_data_in);

        sc_trace(tf, TILE1_HLC.P_glbl_load_addr,  "TILE1_HLC.P_glbl_load_addr");
        sc_trace(tf, TILE1_HLC.P_glbl_load_value, "TILE1_HLC.P_glbl_load_value");
        sc_trace(tf, TILE1_HLC.P_pull_data_in,    "TILE1_HLC.P_pull_data_in");

        TILE1_BOUNDARY_IN.clk                  (sc_top_clock);
        TILE1_BOUNDARY_IN.in0_ctrl             (sig_TILE1_BOUNDARY_IN_ctrl0);
        TILE1_BOUNDARY_IN.in1_ctrl             (sig_TILE1_BOUNDARY_IN_ctrl1);
        TILE1_BOUNDARY_IN.in2_ctrl             (sig_TILE1_BOUNDARY_IN_ctrl2);
        TILE1_BOUNDARY_IN.in3_ctrl             (sig_TILE1_BOUNDARY_IN_ctrl3);
        TILE1_BOUNDARY_IN.in4_ctrl             (sig_TILE1_BOUNDARY_IN_ctrl4);
        TILE1_BOUNDARY_IN.in5_ctrl             (sig_TILE1_BOUNDARY_IN_ctrl5);
        TILE1_BOUNDARY_IN.in6_ctrl             (sig_TILE1_BOUNDARY_IN_ctrl6);
        TILE1_BOUNDARY_IN.in7_ctrl             (sig_TILE1_BOUNDARY_IN_ctrl7);
        TILE1_BOUNDARY_IN.out0                 (sig_TILE1_BOUNDARY_IN_out0);
        TILE1_BOUNDARY_IN.out1                 (sig_TILE1_BOUNDARY_IN_out1);
        TILE1_BOUNDARY_IN.out2                 (sig_TILE1_BOUNDARY_IN_out2);
        TILE1_BOUNDARY_IN.out3                 (sig_TILE1_BOUNDARY_IN_out3);
        TILE1_BOUNDARY_IN.out4                 (sig_TILE1_BOUNDARY_IN_out4);
        TILE1_BOUNDARY_IN.out5                 (sig_TILE1_BOUNDARY_IN_out5);
        TILE1_BOUNDARY_IN.out6                 (sig_TILE1_BOUNDARY_IN_out6);
        TILE1_BOUNDARY_IN.out7                 (sig_TILE1_BOUNDARY_IN_out7);

        if (TILE1_BOUNDARY_IN.in0.size() == 0) TILE1_BOUNDARY_IN.in0(sc_zero);
        if (TILE1_BOUNDARY_IN.in1.size() == 0) TILE1_BOUNDARY_IN.in1(sc_zero);
        if (TILE1_BOUNDARY_IN.in2.size() == 0) TILE1_BOUNDARY_IN.in2(sc_zero);
        if (TILE1_BOUNDARY_IN.in3.size() == 0) TILE1_BOUNDARY_IN.in3(sc_zero);
        if (TILE1_BOUNDARY_IN.in4.size() == 0) TILE1_BOUNDARY_IN.in4(sc_zero);
        if (TILE1_BOUNDARY_IN.in5.size() == 0) TILE1_BOUNDARY_IN.in5(sc_zero);
        if (TILE1_BOUNDARY_IN.in6.size() == 0) TILE1_BOUNDARY_IN.in6(sc_zero);
        if (TILE1_BOUNDARY_IN.in7.size() == 0) TILE1_BOUNDARY_IN.in7(sc_zero);
        sc_trace(tf, TILE1_BOUNDARY_IN.clk, "TILE1_BOUNDARY_IN.clk");
        sc_trace(tf, TILE1_BOUNDARY_IN.in0, "TILE1_BOUNDARY_IN.in0");
        sc_trace(tf, TILE1_BOUNDARY_IN.in1, "TILE1_BOUNDARY_IN.in1");
        sc_trace(tf, TILE1_BOUNDARY_IN.in2, "TILE1_BOUNDARY_IN.in2");
        sc_trace(tf, TILE1_BOUNDARY_IN.in3, "TILE1_BOUNDARY_IN.in3");
        sc_trace(tf, TILE1_BOUNDARY_IN.in4, "TILE1_BOUNDARY_IN.in4");
        sc_trace(tf, TILE1_BOUNDARY_IN.in5, "TILE1_BOUNDARY_IN.in5");
        sc_trace(tf, TILE1_BOUNDARY_IN.in6, "TILE1_BOUNDARY_IN.in6");
        sc_trace(tf, TILE1_BOUNDARY_IN.in7, "TILE1_BOUNDARY_IN.in7");
        sc_trace(tf, TILE1_BOUNDARY_IN.in0_ctrl, "TILE1_BOUNDARY_IN.in0_ctrl");
        sc_trace(tf, TILE1_BOUNDARY_IN.in1_ctrl, "TILE1_BOUNDARY_IN.in1_ctrl");
        sc_trace(tf, TILE1_BOUNDARY_IN.in2_ctrl, "TILE1_BOUNDARY_IN.in2_ctrl");
        sc_trace(tf, TILE1_BOUNDARY_IN.in3_ctrl, "TILE1_BOUNDARY_IN.in3_ctrl");
        sc_trace(tf, TILE1_BOUNDARY_IN.in4_ctrl, "TILE1_BOUNDARY_IN.in4_ctrl");
        sc_trace(tf, TILE1_BOUNDARY_IN.in5_ctrl, "TILE1_BOUNDARY_IN.in5_ctrl");
        sc_trace(tf, TILE1_BOUNDARY_IN.in6_ctrl, "TILE1_BOUNDARY_IN.in6_ctrl");
        sc_trace(tf, TILE1_BOUNDARY_IN.in7_ctrl, "TILE1_BOUNDARY_IN.in7_ctrl");
        sc_trace(tf, TILE1_BOUNDARY_IN.out0, "TILE1_BOUNDARY_IN.out0");
        sc_trace(tf, TILE1_BOUNDARY_IN.out1, "TILE1_BOUNDARY_IN.out1");
        sc_trace(tf, TILE1_BOUNDARY_IN.out2, "TILE1_BOUNDARY_IN.out2");
        sc_trace(tf, TILE1_BOUNDARY_IN.out3, "TILE1_BOUNDARY_IN.out3");
        sc_trace(tf, TILE1_BOUNDARY_IN.out4, "TILE1_BOUNDARY_IN.out4");
        sc_trace(tf, TILE1_BOUNDARY_IN.out5, "TILE1_BOUNDARY_IN.out5");
        sc_trace(tf, TILE1_BOUNDARY_IN.out6, "TILE1_BOUNDARY_IN.out6");
        sc_trace(tf, TILE1_BOUNDARY_IN.out7, "TILE1_BOUNDARY_IN.out7");

        TILE0_OUTLUT_0.i0        (sig_TILE0_FSM_0_OUT);
        TILE0_OUTLUT_0.i1        (sig_TILE0_FSM_1_OUT);
        TILE0_OUTLUT_0.i2        (sc_zero);
        TILE0_OUTLUT_0.OUT      (sig_TILE0_BOUNDARY_OUT_out0);
        TILE0_OUTLUT_0.OUTPUT_LUT_fn (sig_TILE0_OUTLUT_0_fn);

        sc_trace(tf, TILE0_OUTLUT_0.i0,  "TILE0_OUTLUT_0.i0");
        sc_trace(tf, TILE0_OUTLUT_0.i1,  "TILE0_OUTLUT_0.i1");
        sc_trace(tf, TILE0_OUTLUT_0.i2,  "TILE0_OUTLUT_0.i2");
        sc_trace(tf, TILE0_OUTLUT_0.OUT, "TILE0_OUTLUT_0.out");
        sc_trace(tf, TILE0_OUTLUT_0.OUTPUT_LUT_fn,  "TILE0_OUTLUT_0.OUTPUT_LUT_fn");

        TILE0_OUTLUT_1.i0        (sig_TILE0_BOUNDARY_IN_out6);
        TILE0_OUTLUT_1.i1        (sc_zero);
        TILE0_OUTLUT_1.i2        (sc_zero);
        TILE0_OUTLUT_1.OUT      (sig_TILE0_BOUNDARY_OUT_out1);
        TILE0_OUTLUT_1.OUTPUT_LUT_fn (sig_TILE0_OUTLUT_1_fn);

        sc_trace(tf, TILE0_OUTLUT_1.i0,  "TILE0_OUTLUT_1.i0");
        sc_trace(tf, TILE0_OUTLUT_1.i1,  "TILE0_OUTLUT_1.i1");
        sc_trace(tf, TILE0_OUTLUT_1.i2,  "TILE0_OUTLUT_1.i2");
        sc_trace(tf, TILE0_OUTLUT_1.OUT, "TILE0_OUTLUT_1.out");
        sc_trace(tf, TILE0_OUTLUT_1.OUTPUT_LUT_fn,  "TILE0_OUTLUT_1.OUTPUT_LUT_fn");

        TILE0_OUTLUT_2.i0        (sig_TILE0_FSM_0_OUT);
        TILE0_OUTLUT_2.i1        (sig_TILE0_FSM_1_S0);
        TILE0_OUTLUT_2.i2        (sc_zero);
        TILE0_OUTLUT_2.OUT      (sig_TILE0_BOUNDARY_OUT_out2);
        TILE0_OUTLUT_2.OUTPUT_LUT_fn (sig_TILE0_OUTLUT_2_fn);

        sc_trace(tf, TILE0_OUTLUT_2.i0,  "TILE0_OUTLUT_2.i0");
        sc_trace(tf, TILE0_OUTLUT_2.i1,  "TILE0_OUTLUT_2.i1");
        sc_trace(tf, TILE0_OUTLUT_2.i2,  "TILE0_OUTLUT_2.i2");
        sc_trace(tf, TILE0_OUTLUT_2.OUT, "TILE0_OUTLUT_2.out");
        sc_trace(tf, TILE0_OUTLUT_2.OUTPUT_LUT_fn,  "TILE0_OUTLUT_2.OUTPUT_LUT_fn");

        TILE0_OUTLUT_3.i0        (sig_TILE0_BOUNDARY_IN_out7);
        TILE0_OUTLUT_3.i1        (sc_zero);
        TILE0_OUTLUT_3.i2        (sc_zero);
        TILE0_OUTLUT_3.OUT      (sig_TILE0_BOUNDARY_OUT_out3);
        TILE0_OUTLUT_3.OUTPUT_LUT_fn (sig_TILE0_OUTLUT_3_fn);

        sc_trace(tf, TILE0_OUTLUT_3.i0,  "TILE0_OUTLUT_3.i0");
        sc_trace(tf, TILE0_OUTLUT_3.i1,  "TILE0_OUTLUT_3.i1");
        sc_trace(tf, TILE0_OUTLUT_3.i2,  "TILE0_OUTLUT_3.i2");
        sc_trace(tf, TILE0_OUTLUT_3.OUT, "TILE0_OUTLUT_3.out");
        sc_trace(tf, TILE0_OUTLUT_3.OUTPUT_LUT_fn,  "TILE0_OUTLUT_3.OUTPUT_LUT_fn");

        TILE0_OUTLUT_4.i0        (sig_TILE0_FSM_2_OUT);
        TILE0_OUTLUT_4.i1        (sc_zero);
        TILE0_OUTLUT_4.i2        (sc_zero);
        TILE0_OUTLUT_4.OUT      (sig_TILE0_BOUNDARY_OUT_out4);
        TILE0_OUTLUT_4.OUTPUT_LUT_fn (sig_TILE0_OUTLUT_4_fn);

        sc_trace(tf, TILE0_OUTLUT_4.i0,  "TILE0_OUTLUT_4.i0");
        sc_trace(tf, TILE0_OUTLUT_4.i1,  "TILE0_OUTLUT_4.i1");
        sc_trace(tf, TILE0_OUTLUT_4.i2,  "TILE0_OUTLUT_4.i2");
        sc_trace(tf, TILE0_OUTLUT_4.OUT, "TILE0_OUTLUT_4.out");
        sc_trace(tf, TILE0_OUTLUT_4.OUTPUT_LUT_fn,  "TILE0_OUTLUT_4.OUTPUT_LUT_fn");

        TILE0_OUTLUT_5.i0        (sc_zero);
        TILE0_OUTLUT_5.i1        (sc_zero);
        TILE0_OUTLUT_5.i2        (sc_zero);
        TILE0_OUTLUT_5.OUT      (sig_TILE0_BOUNDARY_OUT_out5);
        TILE0_OUTLUT_5.OUTPUT_LUT_fn (sig_TILE0_OUTLUT_5_fn);

        sc_trace(tf, TILE0_OUTLUT_5.i0,  "TILE0_OUTLUT_5.i0");
        sc_trace(tf, TILE0_OUTLUT_5.i1,  "TILE0_OUTLUT_5.i1");
        sc_trace(tf, TILE0_OUTLUT_5.i2,  "TILE0_OUTLUT_5.i2");
        sc_trace(tf, TILE0_OUTLUT_5.OUT, "TILE0_OUTLUT_5.out");
        sc_trace(tf, TILE0_OUTLUT_5.OUTPUT_LUT_fn,  "TILE0_OUTLUT_5.OUTPUT_LUT_fn");

        TILE0_OUTLUT_6.i0        (sc_zero);
        TILE0_OUTLUT_6.i1        (sc_zero);
        TILE0_OUTLUT_6.i2        (sc_zero);
        TILE0_OUTLUT_6.OUT      (sig_TILE0_BOUNDARY_OUT_out6);
        TILE0_OUTLUT_6.OUTPUT_LUT_fn (sig_TILE0_OUTLUT_6_fn);

        sc_trace(tf, TILE0_OUTLUT_6.i0,  "TILE0_OUTLUT_6.i0");
        sc_trace(tf, TILE0_OUTLUT_6.i1,  "TILE0_OUTLUT_6.i1");
        sc_trace(tf, TILE0_OUTLUT_6.i2,  "TILE0_OUTLUT_6.i2");
        sc_trace(tf, TILE0_OUTLUT_6.OUT, "TILE0_OUTLUT_6.out");
        sc_trace(tf, TILE0_OUTLUT_6.OUTPUT_LUT_fn,  "TILE0_OUTLUT_6.OUTPUT_LUT_fn");

        TILE0_OUTLUT_7.i0        (sc_zero);
        TILE0_OUTLUT_7.i1        (sc_zero);
        TILE0_OUTLUT_7.i2        (sc_zero);
        TILE0_OUTLUT_7.OUT      (sig_TILE0_BOUNDARY_OUT_out7);
        TILE0_OUTLUT_7.OUTPUT_LUT_fn (sig_TILE0_OUTLUT_7_fn);

        sc_trace(tf, TILE0_OUTLUT_7.i0,  "TILE0_OUTLUT_7.i0");
        sc_trace(tf, TILE0_OUTLUT_7.i1,  "TILE0_OUTLUT_7.i1");
        sc_trace(tf, TILE0_OUTLUT_7.i2,  "TILE0_OUTLUT_7.i2");
        sc_trace(tf, TILE0_OUTLUT_7.OUT, "TILE0_OUTLUT_7.out");
        sc_trace(tf, TILE0_OUTLUT_7.OUTPUT_LUT_fn,  "TILE0_OUTLUT_7.OUTPUT_LUT_fn");

        TILE0_LUT_0.i0        (sig_TILE0_BOUNDARY_IN_out1);
        TILE0_LUT_0.i1        (sig_TILE0_FSM_1_S0);
        TILE0_LUT_0.i2        (sig_TILE0_FSM_1_S1);
        TILE0_LUT_0.i3        (sig_TILE0_COUNTER_0_count_match2);
        TILE0_LUT_0.OUT      (sig_TILE0_LUT_0_OUT);
        TILE0_LUT_0.LUT4_fn  (sig_TILE0_LUT_0_fn);

        sc_trace(tf, TILE0_LUT_0.i0,  "TILE0_LUT_0.i0");
        sc_trace(tf, TILE0_LUT_0.i1,  "TILE0_LUT_0.i1");
        sc_trace(tf, TILE0_LUT_0.i2,  "TILE0_LUT_0.i2");
        sc_trace(tf, TILE0_LUT_0.i3,  "TILE0_LUT_0.i3");
        sc_trace(tf, TILE0_LUT_0.OUT, "TILE0_LUT_0.out");
        sc_trace(tf, TILE0_LUT_0.LUT4_fn, "TILE0_LUT_0.LUT4_fn");

        TILE0_LUT_1.i0        (sig_TILE0_BOUNDARY_IN_out0);
        TILE0_LUT_1.i1        (sig_TILE0_BOUNDARY_IN_out1);
        TILE0_LUT_1.i2        (sig_TILE0_FSM_1_S0);
        TILE0_LUT_1.i3        (sig_TILE0_FSM_1_S1);
        TILE0_LUT_1.OUT      (sig_TILE0_LUT_1_OUT);
        TILE0_LUT_1.LUT4_fn  (sig_TILE0_LUT_1_fn);

        sc_trace(tf, TILE0_LUT_1.i0,  "TILE0_LUT_1.i0");
        sc_trace(tf, TILE0_LUT_1.i1,  "TILE0_LUT_1.i1");
        sc_trace(tf, TILE0_LUT_1.i2,  "TILE0_LUT_1.i2");
        sc_trace(tf, TILE0_LUT_1.i3,  "TILE0_LUT_1.i3");
        sc_trace(tf, TILE0_LUT_1.OUT, "TILE0_LUT_1.out");
        sc_trace(tf, TILE0_LUT_1.LUT4_fn, "TILE0_LUT_1.LUT4_fn");

        TILE0_LUT_2.i0        (sig_TILE0_FSM_1_S0);
        TILE0_LUT_2.i1        (sig_TILE0_FSM_1_S1);
        TILE0_LUT_2.i2        (sig_TILE0_BOUNDARY_IN_out1);
        TILE0_LUT_2.i3        (sc_zero);
        TILE0_LUT_2.OUT      (sig_TILE0_LUT_2_OUT);
        TILE0_LUT_2.LUT4_fn  (sig_TILE0_LUT_2_fn);

        sc_trace(tf, TILE0_LUT_2.i0,  "TILE0_LUT_2.i0");
        sc_trace(tf, TILE0_LUT_2.i1,  "TILE0_LUT_2.i1");
        sc_trace(tf, TILE0_LUT_2.i2,  "TILE0_LUT_2.i2");
        sc_trace(tf, TILE0_LUT_2.i3,  "TILE0_LUT_2.i3");
        sc_trace(tf, TILE0_LUT_2.OUT, "TILE0_LUT_2.out");
        sc_trace(tf, TILE0_LUT_2.LUT4_fn, "TILE0_LUT_2.LUT4_fn");

        TILE0_FSM_0.e0        (sig_TILE0_COUNTER_0_count_match1);
        TILE0_FSM_0.e1        (sig_TILE0_COUNTER_0_count_zero);
        TILE0_FSM_0.xe0        (sc_zero);
        TILE0_FSM_0.xe1        (sc_zero);
        TILE0_FSM_0.clk      (sc_top_clock);
        TILE0_FSM_0.glbl_en  (sc_top_enable);
        TILE0_FSM_0.glbl_rst_n(sc_top_reset);
        TILE0_FSM_0.EXT_SEL0 (sig_TILE0_FSM_0_xe0_sel);
        TILE0_FSM_0.EXT_SEL1 (sig_TILE0_FSM_0_xe1_sel);
        TILE0_FSM_0.S0_fn    (sig_TILE0_FSM_0_S0_fn);
        TILE0_FSM_0.S1_fn    (sig_TILE0_FSM_0_S1_fn);
        TILE0_FSM_0.OUT_LUT_fn(sig_TILE0_FSM_0_OUT_LUT_fn);
        TILE0_FSM_0.S0       (sig_TILE0_FSM_0_S0);
        TILE0_FSM_0.S1       (sig_TILE0_FSM_0_S1);
        TILE0_FSM_0.OUT      (sig_TILE0_FSM_0_OUT);

        sc_trace(tf, TILE0_FSM_0.clk,        "TILE0_FSM_0.clk");
        sc_trace(tf, TILE0_FSM_0.glbl_en,    "TILE0_FSM_0.glbl_en");
        sc_trace(tf, TILE0_FSM_0.glbl_rst_n, "TILE0_FSM_0.glbl_rst_n");
        sc_trace(tf, TILE0_FSM_0.e0,         "TILE0_FSM_0.e0");
        sc_trace(tf, TILE0_FSM_0.e1,         "TILE0_FSM_0.e1");
        sc_trace(tf, TILE0_FSM_0.xe0,        "TILE0_FSM_0.xe0");
        sc_trace(tf, TILE0_FSM_0.xe1,        "TILE0_FSM_0.xe1");
        sc_trace(tf, TILE0_FSM_0.EXT_SEL0,   "TILE0_FSM_0.EXT_SEL0");
        sc_trace(tf, TILE0_FSM_0.EXT_SEL1,   "TILE0_FSM_0.EXT_SEL1");
        sc_trace(tf, TILE0_FSM_0.S0_fn,      "TILE0_FSM_0.S0_fn");
        sc_trace(tf, TILE0_FSM_0.S1_fn,      "TILE0_FSM_0.S1_fn");
        sc_trace(tf, TILE0_FSM_0.OUT_LUT_fn, "TILE0_FSM_0.OUT_LUT_fn");
        sc_trace(tf, TILE0_FSM_0.S0,         "TILE0_FSM_0.S0");
        sc_trace(tf, TILE0_FSM_0.S1,         "TILE0_FSM_0.S1");
        sc_trace(tf, TILE0_FSM_0.OUT,        "TILE0_FSM_0.OUT");

        TILE0_FSM_1.e0        (sig_TILE0_LUT_1_OUT);
        TILE0_FSM_1.e1        (sig_TILE0_COUNTER_1_count_match2);
        TILE0_FSM_1.xe0        (sc_zero);
        TILE0_FSM_1.xe1        (sc_zero);
        TILE0_FSM_1.clk      (sc_top_clock);
        TILE0_FSM_1.glbl_en  (sc_top_enable);
        TILE0_FSM_1.glbl_rst_n(sc_top_reset);
        TILE0_FSM_1.EXT_SEL0 (sig_TILE0_FSM_1_xe0_sel);
        TILE0_FSM_1.EXT_SEL1 (sig_TILE0_FSM_1_xe1_sel);
        TILE0_FSM_1.S0_fn    (sig_TILE0_FSM_1_S0_fn);
        TILE0_FSM_1.S1_fn    (sig_TILE0_FSM_1_S1_fn);
        TILE0_FSM_1.OUT_LUT_fn(sig_TILE0_FSM_1_OUT_LUT_fn);
        TILE0_FSM_1.S0       (sig_TILE0_FSM_1_S0);
        TILE0_FSM_1.S1       (sig_TILE0_FSM_1_S1);
        TILE0_FSM_1.OUT      (sig_TILE0_FSM_1_OUT);

        sc_trace(tf, TILE0_FSM_1.clk,        "TILE0_FSM_1.clk");
        sc_trace(tf, TILE0_FSM_1.glbl_en,    "TILE0_FSM_1.glbl_en");
        sc_trace(tf, TILE0_FSM_1.glbl_rst_n, "TILE0_FSM_1.glbl_rst_n");
        sc_trace(tf, TILE0_FSM_1.e0,         "TILE0_FSM_1.e0");
        sc_trace(tf, TILE0_FSM_1.e1,         "TILE0_FSM_1.e1");
        sc_trace(tf, TILE0_FSM_1.xe0,        "TILE0_FSM_1.xe0");
        sc_trace(tf, TILE0_FSM_1.xe1,        "TILE0_FSM_1.xe1");
        sc_trace(tf, TILE0_FSM_1.EXT_SEL0,   "TILE0_FSM_1.EXT_SEL0");
        sc_trace(tf, TILE0_FSM_1.EXT_SEL1,   "TILE0_FSM_1.EXT_SEL1");
        sc_trace(tf, TILE0_FSM_1.S0_fn,      "TILE0_FSM_1.S0_fn");
        sc_trace(tf, TILE0_FSM_1.S1_fn,      "TILE0_FSM_1.S1_fn");
        sc_trace(tf, TILE0_FSM_1.OUT_LUT_fn, "TILE0_FSM_1.OUT_LUT_fn");
        sc_trace(tf, TILE0_FSM_1.S0,         "TILE0_FSM_1.S0");
        sc_trace(tf, TILE0_FSM_1.S1,         "TILE0_FSM_1.S1");
        sc_trace(tf, TILE0_FSM_1.OUT,        "TILE0_FSM_1.OUT");

        TILE0_FSM_2.e0        (sig_TILE0_COUNTER_1_count_match1);
        TILE0_FSM_2.e1        (sig_TILE0_BOUNDARY_IN_out0);
        TILE0_FSM_2.xe0        (sc_zero);
        TILE0_FSM_2.xe1        (sc_zero);
        TILE0_FSM_2.clk      (sc_top_clock);
        TILE0_FSM_2.glbl_en  (sc_top_enable);
        TILE0_FSM_2.glbl_rst_n(sc_top_reset);
        TILE0_FSM_2.EXT_SEL0 (sig_TILE0_FSM_2_xe0_sel);
        TILE0_FSM_2.EXT_SEL1 (sig_TILE0_FSM_2_xe1_sel);
        TILE0_FSM_2.S0_fn    (sig_TILE0_FSM_2_S0_fn);
        TILE0_FSM_2.S1_fn    (sig_TILE0_FSM_2_S1_fn);
        TILE0_FSM_2.OUT_LUT_fn(sig_TILE0_FSM_2_OUT_LUT_fn);
        TILE0_FSM_2.S0       (sig_TILE0_FSM_2_S0);
        TILE0_FSM_2.S1       (sig_TILE0_FSM_2_S1);
        TILE0_FSM_2.OUT      (sig_TILE0_FSM_2_OUT);

        sc_trace(tf, TILE0_FSM_2.clk,        "TILE0_FSM_2.clk");
        sc_trace(tf, TILE0_FSM_2.glbl_en,    "TILE0_FSM_2.glbl_en");
        sc_trace(tf, TILE0_FSM_2.glbl_rst_n, "TILE0_FSM_2.glbl_rst_n");
        sc_trace(tf, TILE0_FSM_2.e0,         "TILE0_FSM_2.e0");
        sc_trace(tf, TILE0_FSM_2.e1,         "TILE0_FSM_2.e1");
        sc_trace(tf, TILE0_FSM_2.xe0,        "TILE0_FSM_2.xe0");
        sc_trace(tf, TILE0_FSM_2.xe1,        "TILE0_FSM_2.xe1");
        sc_trace(tf, TILE0_FSM_2.EXT_SEL0,   "TILE0_FSM_2.EXT_SEL0");
        sc_trace(tf, TILE0_FSM_2.EXT_SEL1,   "TILE0_FSM_2.EXT_SEL1");
        sc_trace(tf, TILE0_FSM_2.S0_fn,      "TILE0_FSM_2.S0_fn");
        sc_trace(tf, TILE0_FSM_2.S1_fn,      "TILE0_FSM_2.S1_fn");
        sc_trace(tf, TILE0_FSM_2.OUT_LUT_fn, "TILE0_FSM_2.OUT_LUT_fn");
        sc_trace(tf, TILE0_FSM_2.S0,         "TILE0_FSM_2.S0");
        sc_trace(tf, TILE0_FSM_2.S1,         "TILE0_FSM_2.S1");
        sc_trace(tf, TILE0_FSM_2.OUT,        "TILE0_FSM_2.OUT");

        TILE0_COUNTER_0.reset        (sig_TILE0_LUT_0_OUT);
        TILE0_COUNTER_0.event        (sc_zero);
        TILE0_COUNTER_0.mode0        (sig_TILE0_FSM_1_OUT);
        TILE0_COUNTER_0.mode1        (sc_one);
        TILE0_COUNTER_0.clk                  (sc_top_clock);
        TILE0_COUNTER_0.glbl_en              (sc_top_enable);
        TILE0_COUNTER_0.glbl_rst_n           (sc_top_reset);
        TILE0_COUNTER_0.add_shift_dir        (sig_TILE0_COUNTER_0_add_shift_dir);
        TILE0_COUNTER_0.add_shift_mode       (sig_TILE0_COUNTER_0_add_shift_mode);
        TILE0_COUNTER_0.add_shift_on_event_en(sig_TILE0_COUNTER_0_add_shift_on_event_en);
        TILE0_COUNTER_0.global_clk_en        (sig_TILE0_COUNTER_0_global_clk_en);
        TILE0_COUNTER_0.glbl_load_en         (sig_TILE0_COUNTER_0_glbl_load_en);
        TILE0_COUNTER_0.event_load_val       (sig_TILE0_COUNTER_0_event_load_val);
        TILE0_COUNTER_0.match_en             (sig_TILE0_COUNTER_0_match_en);
        TILE0_COUNTER_0.match1_val           (sig_TILE0_COUNTER_0_match1_val);
        TILE0_COUNTER_0.match2_val           (sig_TILE0_COUNTER_0_match2_val);
        TILE0_COUNTER_0.glbl_serializer_mode (sig_TILE0_COUNTER_0_glbl_serializer_mode);
        TILE0_COUNTER_0.hlc_count_load_val   (sig_TILE0_COUNTER_hlc_count_load_val);
        TILE0_COUNTER_0.hlc_count_load_en    (sig_TILE0_COUNTER_0_hlc_count_load_en);
        TILE0_COUNTER_0.hlc_match1_load_en   (sig_TILE0_COUNTER_0_hlc_match1_load_en);
        TILE0_COUNTER_0.hlc_match2_load_en   (sig_TILE0_COUNTER_0_hlc_match2_load_en);
        TILE0_COUNTER_0.count_out            (sig_TILE0_COUNTER_0_count_out);
        TILE0_COUNTER_0.count_zero           (sig_TILE0_COUNTER_0_count_zero);
        TILE0_COUNTER_0.count_match1         (sig_TILE0_COUNTER_0_count_match1);
        TILE0_COUNTER_0.count_match2         (sig_TILE0_COUNTER_0_count_match2);
#if TYPE == 2 || TYPE == 3
        TILE0_COUNTER_0.lfsr_mode               (sig_TILE0_COUNTER_0_lfsr_mode);
        TILE0_COUNTER_0.match1_tap_en           (sig_TILE0_COUNTER_0_match1_tap_en);
        TILE0_COUNTER_0.match1_tap              (sig_TILE0_COUNTER_0_match1_tap);
        TILE0_COUNTER_0.match2_tap_en           (sig_TILE0_COUNTER_0_match2_tap_en);
        TILE0_COUNTER_0.match2_tap              (sig_TILE0_COUNTER_0_match2_tap);
#endif
#if TYPE == 3
        TILE0_COUNTER_0.RECONFIG_PIPELINE_EN    (sig_TILE0_COUNTER_0_RECONFIG_PIPELINE_EN);
#endif
        sc_trace(tf, TILE0_COUNTER_0.clk,                 "TILE0_COUNTER_0.clk");
        sc_trace(tf, TILE0_COUNTER_0.glbl_en,             "TILE0_COUNTER_0.glbl_en");
        sc_trace(tf, TILE0_COUNTER_0.glbl_rst_n,          "TILE0_COUNTER_0.glbl_rst_n");
        sc_trace(tf, TILE0_COUNTER_0.add_shift_dir,       "TILE0_COUNTER_0.add_shift_dir");
        sc_trace(tf, TILE0_COUNTER_0.add_shift_mode,      "TILE0_COUNTER_0.add_shift_mode");
        sc_trace(tf, TILE0_COUNTER_0.add_shift_on_event_en, "TILE0_COUNTER_0.add_shift_on_event_en");
        sc_trace(tf, TILE0_COUNTER_0.global_clk_en,       "TILE0_COUNTER_0.global_clk_en");
        sc_trace(tf, TILE0_COUNTER_0.glbl_load_en,        "TILE0_COUNTER_0.glbl_load_en");
        sc_trace(tf, TILE0_COUNTER_0.event_load_val,      "TILE0_COUNTER_0.event_load_val");
        sc_trace(tf, TILE0_COUNTER_0.match_en,            "TILE0_COUNTER_0.match_en");
        sc_trace(tf, TILE0_COUNTER_0.match1_val,          "TILE0_COUNTER_0.match1_val");
        sc_trace(tf, TILE0_COUNTER_0.match2_val,          "TILE0_COUNTER_0.match2_val");
        sc_trace(tf, TILE0_COUNTER_0.glbl_serializer_mode,"TILE0_COUNTER_0.glbl_serializer_mode");
        sc_trace(tf, TILE0_COUNTER_0.hlc_count_load_val,  "TILE0_COUNTER_0.hlc_count_load_val");
        sc_trace(tf, TILE0_COUNTER_0.hlc_count_load_en,   "TILE0_COUNTER_0.hlc_count_load_en");
        sc_trace(tf, TILE0_COUNTER_0.hlc_match1_load_en,  "TILE0_COUNTER_0.hlc_match1_load_en");
        sc_trace(tf, TILE0_COUNTER_0.hlc_match2_load_en,  "TILE0_COUNTER_0.hlc_match2_load_en");
        sc_trace(tf, TILE0_COUNTER_0.count_out,           "TILE0_COUNTER_0.count_out");
        sc_trace(tf, TILE0_COUNTER_0.count_zero,          "TILE0_COUNTER_0.count_zero");
        sc_trace(tf, TILE0_COUNTER_0.count_match1,        "TILE0_COUNTER_0.count_match1");
        sc_trace(tf, TILE0_COUNTER_0.count_match2,        "TILE0_COUNTER_0.count_match2");
        sc_trace(tf, TILE0_COUNTER_0.reset,               "TILE0_COUNTER_0.reset");
        sc_trace(tf, TILE0_COUNTER_0.event,            	"TILE0_COUNTER_0.event");
        sc_trace(tf, TILE0_COUNTER_0.mode0,        		"TILE0_COUNTER_0.mode0");
        sc_trace(tf, TILE0_COUNTER_0.mode1,        		"TILE0_COUNTER_0.mode1");
#if TYPE == 2 || TYPE == 3
        sc_trace(tf, TILE0_COUNTER_0.lfsr_mode    ,     "TILE0_COUNTER_0.lfsr_mode");
        sc_trace(tf, TILE0_COUNTER_0.match1_tap_en,     "TILE0_COUNTER_0.match1_tap_en");
        sc_trace(tf, TILE0_COUNTER_0.match1_tap   ,     "TILE0_COUNTER_0.match1_tap");
        sc_trace(tf, TILE0_COUNTER_0.match2_tap_en,     "TILE0_COUNTER_0.match2_tap_en");
        sc_trace(tf, TILE0_COUNTER_0.match2_tap   ,     "TILE0_COUNTER_0.match2_tap");
#endif
#if TYPE == 3
        sc_trace(tf, TILE0_COUNTER_0.RECONFIG_PIPELINE_EN,     "TILE0_COUNTER_0.RECONFIG_PIPELINE_EN");
#endif
        TILE0_COUNTER_1.reset        (sig_TILE0_COUNTER_1_count_match2);
        TILE0_COUNTER_1.event        (sc_zero);
        TILE0_COUNTER_1.mode0        (sig_TILE0_COUNTER_0_count_match1);
        TILE0_COUNTER_1.mode1        (sc_one);
        TILE0_COUNTER_1.clk                  (sc_top_clock);
        TILE0_COUNTER_1.glbl_en              (sc_top_enable);
        TILE0_COUNTER_1.glbl_rst_n           (sc_top_reset);
        TILE0_COUNTER_1.add_shift_dir        (sig_TILE0_COUNTER_1_add_shift_dir);
        TILE0_COUNTER_1.add_shift_mode       (sig_TILE0_COUNTER_1_add_shift_mode);
        TILE0_COUNTER_1.add_shift_on_event_en(sig_TILE0_COUNTER_1_add_shift_on_event_en);
        TILE0_COUNTER_1.global_clk_en        (sig_TILE0_COUNTER_1_global_clk_en);
        TILE0_COUNTER_1.glbl_load_en         (sig_TILE0_COUNTER_1_glbl_load_en);
        TILE0_COUNTER_1.event_load_val       (sig_TILE0_COUNTER_1_event_load_val);
        TILE0_COUNTER_1.match_en             (sig_TILE0_COUNTER_1_match_en);
        TILE0_COUNTER_1.match1_val           (sig_TILE0_COUNTER_1_match1_val);
        TILE0_COUNTER_1.match2_val           (sig_TILE0_COUNTER_1_match2_val);
        TILE0_COUNTER_1.glbl_serializer_mode (sig_TILE0_COUNTER_1_glbl_serializer_mode);
        TILE0_COUNTER_1.hlc_count_load_val   (sig_TILE0_COUNTER_hlc_count_load_val);
        TILE0_COUNTER_1.hlc_count_load_en    (sig_TILE0_COUNTER_1_hlc_count_load_en);
        TILE0_COUNTER_1.hlc_match1_load_en   (sig_TILE0_COUNTER_1_hlc_match1_load_en);
        TILE0_COUNTER_1.hlc_match2_load_en   (sig_TILE0_COUNTER_1_hlc_match2_load_en);
        TILE0_COUNTER_1.count_out            (sig_TILE0_COUNTER_1_count_out);
        TILE0_COUNTER_1.count_zero           (sig_TILE0_COUNTER_1_count_zero);
        TILE0_COUNTER_1.count_match1         (sig_TILE0_COUNTER_1_count_match1);
        TILE0_COUNTER_1.count_match2         (sig_TILE0_COUNTER_1_count_match2);
#if TYPE == 2 || TYPE == 3
        TILE0_COUNTER_1.lfsr_mode               (sig_TILE0_COUNTER_1_lfsr_mode);
        TILE0_COUNTER_1.match1_tap_en           (sig_TILE0_COUNTER_1_match1_tap_en);
        TILE0_COUNTER_1.match1_tap              (sig_TILE0_COUNTER_1_match1_tap);
        TILE0_COUNTER_1.match2_tap_en           (sig_TILE0_COUNTER_1_match2_tap_en);
        TILE0_COUNTER_1.match2_tap              (sig_TILE0_COUNTER_1_match2_tap);
#endif
#if TYPE == 3
        TILE0_COUNTER_1.RECONFIG_PIPELINE_EN    (sig_TILE0_COUNTER_1_RECONFIG_PIPELINE_EN);
#endif
        sc_trace(tf, TILE0_COUNTER_1.clk,                 "TILE0_COUNTER_1.clk");
        sc_trace(tf, TILE0_COUNTER_1.glbl_en,             "TILE0_COUNTER_1.glbl_en");
        sc_trace(tf, TILE0_COUNTER_1.glbl_rst_n,          "TILE0_COUNTER_1.glbl_rst_n");
        sc_trace(tf, TILE0_COUNTER_1.add_shift_dir,       "TILE0_COUNTER_1.add_shift_dir");
        sc_trace(tf, TILE0_COUNTER_1.add_shift_mode,      "TILE0_COUNTER_1.add_shift_mode");
        sc_trace(tf, TILE0_COUNTER_1.add_shift_on_event_en, "TILE0_COUNTER_1.add_shift_on_event_en");
        sc_trace(tf, TILE0_COUNTER_1.global_clk_en,       "TILE0_COUNTER_1.global_clk_en");
        sc_trace(tf, TILE0_COUNTER_1.glbl_load_en,        "TILE0_COUNTER_1.glbl_load_en");
        sc_trace(tf, TILE0_COUNTER_1.event_load_val,      "TILE0_COUNTER_1.event_load_val");
        sc_trace(tf, TILE0_COUNTER_1.match_en,            "TILE0_COUNTER_1.match_en");
        sc_trace(tf, TILE0_COUNTER_1.match1_val,          "TILE0_COUNTER_1.match1_val");
        sc_trace(tf, TILE0_COUNTER_1.match2_val,          "TILE0_COUNTER_1.match2_val");
        sc_trace(tf, TILE0_COUNTER_1.glbl_serializer_mode,"TILE0_COUNTER_1.glbl_serializer_mode");
        sc_trace(tf, TILE0_COUNTER_1.hlc_count_load_val,  "TILE0_COUNTER_1.hlc_count_load_val");
        sc_trace(tf, TILE0_COUNTER_1.hlc_count_load_en,   "TILE0_COUNTER_1.hlc_count_load_en");
        sc_trace(tf, TILE0_COUNTER_1.hlc_match1_load_en,  "TILE0_COUNTER_1.hlc_match1_load_en");
        sc_trace(tf, TILE0_COUNTER_1.hlc_match2_load_en,  "TILE0_COUNTER_1.hlc_match2_load_en");
        sc_trace(tf, TILE0_COUNTER_1.count_out,           "TILE0_COUNTER_1.count_out");
        sc_trace(tf, TILE0_COUNTER_1.count_zero,          "TILE0_COUNTER_1.count_zero");
        sc_trace(tf, TILE0_COUNTER_1.count_match1,        "TILE0_COUNTER_1.count_match1");
        sc_trace(tf, TILE0_COUNTER_1.count_match2,        "TILE0_COUNTER_1.count_match2");
        sc_trace(tf, TILE0_COUNTER_1.reset,               "TILE0_COUNTER_1.reset");
        sc_trace(tf, TILE0_COUNTER_1.event,            	"TILE0_COUNTER_1.event");
        sc_trace(tf, TILE0_COUNTER_1.mode0,        		"TILE0_COUNTER_1.mode0");
        sc_trace(tf, TILE0_COUNTER_1.mode1,        		"TILE0_COUNTER_1.mode1");
#if TYPE == 2 || TYPE == 3
        sc_trace(tf, TILE0_COUNTER_1.lfsr_mode    ,     "TILE0_COUNTER_1.lfsr_mode");
        sc_trace(tf, TILE0_COUNTER_1.match1_tap_en,     "TILE0_COUNTER_1.match1_tap_en");
        sc_trace(tf, TILE0_COUNTER_1.match1_tap   ,     "TILE0_COUNTER_1.match1_tap");
        sc_trace(tf, TILE0_COUNTER_1.match2_tap_en,     "TILE0_COUNTER_1.match2_tap_en");
        sc_trace(tf, TILE0_COUNTER_1.match2_tap   ,     "TILE0_COUNTER_1.match2_tap");
#endif
#if TYPE == 3
        sc_trace(tf, TILE0_COUNTER_1.RECONFIG_PIPELINE_EN,     "TILE0_COUNTER_1.RECONFIG_PIPELINE_EN");
#endif
        TILE0_COUNTER_2.reset        (sig_TILE0_COUNTER_2_count_match1);
        TILE0_COUNTER_2.event        (sc_zero);
        TILE0_COUNTER_2.mode0        (sc_one);
        TILE0_COUNTER_2.mode1        (sc_one);
        TILE0_COUNTER_2.clk                  (sc_top_clock);
        TILE0_COUNTER_2.glbl_en              (sc_top_enable);
        TILE0_COUNTER_2.glbl_rst_n           (sc_top_reset);
        TILE0_COUNTER_2.add_shift_dir        (sig_TILE0_COUNTER_2_add_shift_dir);
        TILE0_COUNTER_2.add_shift_mode       (sig_TILE0_COUNTER_2_add_shift_mode);
        TILE0_COUNTER_2.add_shift_on_event_en(sig_TILE0_COUNTER_2_add_shift_on_event_en);
        TILE0_COUNTER_2.global_clk_en        (sig_TILE0_COUNTER_2_global_clk_en);
        TILE0_COUNTER_2.glbl_load_en         (sig_TILE0_COUNTER_2_glbl_load_en);
        TILE0_COUNTER_2.event_load_val       (sig_TILE0_COUNTER_2_event_load_val);
        TILE0_COUNTER_2.match_en             (sig_TILE0_COUNTER_2_match_en);
        TILE0_COUNTER_2.match1_val           (sig_TILE0_COUNTER_2_match1_val);
        TILE0_COUNTER_2.match2_val           (sig_TILE0_COUNTER_2_match2_val);
        TILE0_COUNTER_2.glbl_serializer_mode (sig_TILE0_COUNTER_2_glbl_serializer_mode);
        TILE0_COUNTER_2.hlc_count_load_val   (sig_TILE0_COUNTER_hlc_count_load_val);
        TILE0_COUNTER_2.hlc_count_load_en    (sig_TILE0_COUNTER_2_hlc_count_load_en);
        TILE0_COUNTER_2.hlc_match1_load_en   (sig_TILE0_COUNTER_2_hlc_match1_load_en);
        TILE0_COUNTER_2.hlc_match2_load_en   (sig_TILE0_COUNTER_2_hlc_match2_load_en);
        TILE0_COUNTER_2.count_out            (sig_TILE0_COUNTER_2_count_out);
        TILE0_COUNTER_2.count_zero           (sig_TILE0_COUNTER_2_count_zero);
        TILE0_COUNTER_2.count_match1         (sig_TILE0_COUNTER_2_count_match1);
        TILE0_COUNTER_2.count_match2         (sig_TILE0_COUNTER_2_count_match2);
#if TYPE == 2 || TYPE == 3
        TILE0_COUNTER_2.lfsr_mode               (sig_TILE0_COUNTER_2_lfsr_mode);
        TILE0_COUNTER_2.match1_tap_en           (sig_TILE0_COUNTER_2_match1_tap_en);
        TILE0_COUNTER_2.match1_tap              (sig_TILE0_COUNTER_2_match1_tap);
        TILE0_COUNTER_2.match2_tap_en           (sig_TILE0_COUNTER_2_match2_tap_en);
        TILE0_COUNTER_2.match2_tap              (sig_TILE0_COUNTER_2_match2_tap);
#endif
#if TYPE == 3
        TILE0_COUNTER_2.RECONFIG_PIPELINE_EN    (sig_TILE0_COUNTER_2_RECONFIG_PIPELINE_EN);
#endif
        sc_trace(tf, TILE0_COUNTER_2.clk,                 "TILE0_COUNTER_2.clk");
        sc_trace(tf, TILE0_COUNTER_2.glbl_en,             "TILE0_COUNTER_2.glbl_en");
        sc_trace(tf, TILE0_COUNTER_2.glbl_rst_n,          "TILE0_COUNTER_2.glbl_rst_n");
        sc_trace(tf, TILE0_COUNTER_2.add_shift_dir,       "TILE0_COUNTER_2.add_shift_dir");
        sc_trace(tf, TILE0_COUNTER_2.add_shift_mode,      "TILE0_COUNTER_2.add_shift_mode");
        sc_trace(tf, TILE0_COUNTER_2.add_shift_on_event_en, "TILE0_COUNTER_2.add_shift_on_event_en");
        sc_trace(tf, TILE0_COUNTER_2.global_clk_en,       "TILE0_COUNTER_2.global_clk_en");
        sc_trace(tf, TILE0_COUNTER_2.glbl_load_en,        "TILE0_COUNTER_2.glbl_load_en");
        sc_trace(tf, TILE0_COUNTER_2.event_load_val,      "TILE0_COUNTER_2.event_load_val");
        sc_trace(tf, TILE0_COUNTER_2.match_en,            "TILE0_COUNTER_2.match_en");
        sc_trace(tf, TILE0_COUNTER_2.match1_val,          "TILE0_COUNTER_2.match1_val");
        sc_trace(tf, TILE0_COUNTER_2.match2_val,          "TILE0_COUNTER_2.match2_val");
        sc_trace(tf, TILE0_COUNTER_2.glbl_serializer_mode,"TILE0_COUNTER_2.glbl_serializer_mode");
        sc_trace(tf, TILE0_COUNTER_2.hlc_count_load_val,  "TILE0_COUNTER_2.hlc_count_load_val");
        sc_trace(tf, TILE0_COUNTER_2.hlc_count_load_en,   "TILE0_COUNTER_2.hlc_count_load_en");
        sc_trace(tf, TILE0_COUNTER_2.hlc_match1_load_en,  "TILE0_COUNTER_2.hlc_match1_load_en");
        sc_trace(tf, TILE0_COUNTER_2.hlc_match2_load_en,  "TILE0_COUNTER_2.hlc_match2_load_en");
        sc_trace(tf, TILE0_COUNTER_2.count_out,           "TILE0_COUNTER_2.count_out");
        sc_trace(tf, TILE0_COUNTER_2.count_zero,          "TILE0_COUNTER_2.count_zero");
        sc_trace(tf, TILE0_COUNTER_2.count_match1,        "TILE0_COUNTER_2.count_match1");
        sc_trace(tf, TILE0_COUNTER_2.count_match2,        "TILE0_COUNTER_2.count_match2");
        sc_trace(tf, TILE0_COUNTER_2.reset,               "TILE0_COUNTER_2.reset");
        sc_trace(tf, TILE0_COUNTER_2.event,            	"TILE0_COUNTER_2.event");
        sc_trace(tf, TILE0_COUNTER_2.mode0,        		"TILE0_COUNTER_2.mode0");
        sc_trace(tf, TILE0_COUNTER_2.mode1,        		"TILE0_COUNTER_2.mode1");
#if TYPE == 2 || TYPE == 3
        sc_trace(tf, TILE0_COUNTER_2.lfsr_mode    ,     "TILE0_COUNTER_2.lfsr_mode");
        sc_trace(tf, TILE0_COUNTER_2.match1_tap_en,     "TILE0_COUNTER_2.match1_tap_en");
        sc_trace(tf, TILE0_COUNTER_2.match1_tap   ,     "TILE0_COUNTER_2.match1_tap");
        sc_trace(tf, TILE0_COUNTER_2.match2_tap_en,     "TILE0_COUNTER_2.match2_tap_en");
        sc_trace(tf, TILE0_COUNTER_2.match2_tap   ,     "TILE0_COUNTER_2.match2_tap");
#endif
#if TYPE == 3
        sc_trace(tf, TILE0_COUNTER_2.RECONFIG_PIPELINE_EN,     "TILE0_COUNTER_2.RECONFIG_PIPELINE_EN");
#endif
        TILE0_HLC.e0        (sig_TILE0_HLC_e0);
        sc_trace(tf, TILE0_HLC.e0, "TILE0_HLC.e0");
        TILE0_HLC.e1        (sig_TILE0_HLC_e1);
        sc_trace(tf, TILE0_HLC.e1, "TILE0_HLC.e1");
        TILE0_HLC.e2        (sig_TILE0_HLC_e2);
        sc_trace(tf, TILE0_HLC.e2, "TILE0_HLC.e2");
        TILE0_HLC.e3        (sig_TILE0_HLC_e3);
        sc_trace(tf, TILE0_HLC.e3, "TILE0_HLC.e3");
#if TYPE == 2 || TYPE == 3
        TILE0_HLC.ae0       (sig_TILE0_HLC_ae0);
        TILE0_HLC.ae1       (sig_TILE0_HLC_ae0);
        TILE0_HLC.ae2       (sig_TILE0_HLC_ae0);
        TILE0_HLC.ae3       (sig_TILE0_HLC_ae0);
        sc_trace(tf, TILE0_HLC.ae0,            "TILE0_HLC.ae0");
        sc_trace(tf, TILE0_HLC.ae1,            "TILE0_HLC.ae1");
        sc_trace(tf, TILE0_HLC.ae2,            "TILE0_HLC.ae2");
        sc_trace(tf, TILE0_HLC.ae3,            "TILE0_HLC.ae3");

        TILE0_HLC.clb_result_in[0] (sig_TILE0_BOUNDARY_OUT_out0);
        TILE0_HLC.clb_result_in[1] (sig_TILE0_BOUNDARY_OUT_out1);
        TILE0_HLC.clb_result_in[2] (sig_TILE0_BOUNDARY_OUT_out2);
        TILE0_HLC.clb_result_in[3] (sig_TILE0_BOUNDARY_OUT_out3);
        TILE0_HLC.clb_result_in[4] (sig_TILE0_BOUNDARY_OUT_out4);
        TILE0_HLC.clb_result_in[5] (sig_TILE0_BOUNDARY_OUT_out5);
        TILE0_HLC.clb_result_in[6] (sig_TILE0_BOUNDARY_OUT_out6);
        TILE0_HLC.clb_result_in[7] (sig_TILE0_BOUNDARY_OUT_out7);
        sc_trace(tf, TILE0_HLC.clb_result_in[0],           "TILE0_HLC.clb_result_in(0)");
        sc_trace(tf, TILE0_HLC.clb_result_in[1],           "TILE0_HLC.clb_result_in(1)");
        sc_trace(tf, TILE0_HLC.clb_result_in[2],           "TILE0_HLC.clb_result_in(2)");
        sc_trace(tf, TILE0_HLC.clb_result_in[3],           "TILE0_HLC.clb_result_in(3)");
        sc_trace(tf, TILE0_HLC.clb_result_in[4],           "TILE0_HLC.clb_result_in(4)");
        sc_trace(tf, TILE0_HLC.clb_result_in[5],           "TILE0_HLC.clb_result_in(5)");
        sc_trace(tf, TILE0_HLC.clb_result_in[6],           "TILE0_HLC.clb_result_in(6)");
        sc_trace(tf, TILE0_HLC.clb_result_in[7],           "TILE0_HLC.clb_result_in(7)");

        TILE0_HLC.clb_async_result_in[0] (sig_TILE0_BOUNDARY_OUT_out0);
        TILE0_HLC.clb_async_result_in[1] (sig_TILE0_BOUNDARY_OUT_out1);
        TILE0_HLC.clb_async_result_in[2] (sig_TILE0_BOUNDARY_OUT_out2);
        TILE0_HLC.clb_async_result_in[3] (sig_TILE0_BOUNDARY_OUT_out3);
        TILE0_HLC.clb_async_result_in[4] (sig_TILE0_BOUNDARY_OUT_out4);
        TILE0_HLC.clb_async_result_in[5] (sig_TILE0_BOUNDARY_OUT_out5);
        TILE0_HLC.clb_async_result_in[6] (sig_TILE0_BOUNDARY_OUT_out6);
        TILE0_HLC.clb_async_result_in[7] (sig_TILE0_BOUNDARY_OUT_out7);
        sc_trace(tf, TILE0_HLC.clb_async_result_in[0],     "TILE0_HLC.clb_async_result_in(0)");
        sc_trace(tf, TILE0_HLC.clb_async_result_in[1],     "TILE0_HLC.clb_async_result_in(1)");
        sc_trace(tf, TILE0_HLC.clb_async_result_in[2],     "TILE0_HLC.clb_async_result_in(2)");
        sc_trace(tf, TILE0_HLC.clb_async_result_in[3],     "TILE0_HLC.clb_async_result_in(3)");
        sc_trace(tf, TILE0_HLC.clb_async_result_in[4],     "TILE0_HLC.clb_async_result_in(4)");
        sc_trace(tf, TILE0_HLC.clb_async_result_in[5],     "TILE0_HLC.clb_async_result_in(5)");
        sc_trace(tf, TILE0_HLC.clb_async_result_in[6],     "TILE0_HLC.clb_async_result_in(6)");
        sc_trace(tf, TILE0_HLC.clb_async_result_in[7],     "TILE0_HLC.clb_async_result_in(7)");
#endif
#if TYPE == 3
        TILE0_HLC.RECONFIG_PIPELINE_EN       (sig_TILE0_HLC_RECONFIG_PIPELINE_EN);
        sc_trace(tf, TILE0_HLC.RECONFIG_PIPELINE_EN,            "TILE0_HLC.RECONFIG_PIPELINE_EN");
#endif
        TILE0_HLC.P_clk(sc_top_clock);
        TILE0_HLC.P_glbl_load_en(sc_top_enable);
        TILE0_HLC.P_rst_n(sc_top_reset);
        TILE0_HLC.P_counter_in_0(sig_TILE0_COUNTER_0_count_out);
        TILE0_HLC.P_counter_in_1(sig_TILE0_COUNTER_1_count_out);
        TILE0_HLC.P_counter_in_2(sig_TILE0_COUNTER_2_count_out);
        TILE0_HLC.P_local_count_load_enable_0(sig_TILE0_COUNTER_0_hlc_count_load_en);
        TILE0_HLC.P_local_count_load_enable_1(sig_TILE0_COUNTER_1_hlc_count_load_en);
        TILE0_HLC.P_local_count_load_enable_2(sig_TILE0_COUNTER_2_hlc_count_load_en);
        TILE0_HLC.P_local_count_match1_enable_0(sig_TILE0_COUNTER_0_hlc_match1_load_en);
        TILE0_HLC.P_local_count_match1_enable_1(sig_TILE0_COUNTER_1_hlc_match1_load_en);
        TILE0_HLC.P_local_count_match1_enable_2(sig_TILE0_COUNTER_2_hlc_match1_load_en);
        TILE0_HLC.P_local_count_match2_enable_0(sig_TILE0_COUNTER_0_hlc_match2_load_en);
        TILE0_HLC.P_local_count_match2_enable_1(sig_TILE0_COUNTER_1_hlc_match2_load_en);
        TILE0_HLC.P_local_count_match2_enable_2(sig_TILE0_COUNTER_2_hlc_match2_load_en);

        sc_trace(tf, TILE0_HLC.P_clk,            "TILE0_HLC.P_clk");
        sc_trace(tf, TILE0_HLC.P_glbl_load_en,   "TILE0_HLC.P_glbl_load_en");
        sc_trace(tf, TILE0_HLC.P_rst_n,          "TILE0_HLC.P_rst_n");
        sc_trace(tf, TILE0_HLC.P_counter_in_0, "TILE0_HLC.P_counter_in_0");
        sc_trace(tf, TILE0_HLC.P_counter_in_1, "TILE0_HLC.P_counter_in_1");
        sc_trace(tf, TILE0_HLC.P_counter_in_2, "TILE0_HLC.P_counter_in_2");
        sc_trace(tf, TILE0_HLC.P_local_count_load_enable_0, "TILE0_HLC.P_local_count_load_enable_0");
        sc_trace(tf, TILE0_HLC.P_local_count_load_enable_1, "TILE0_HLC.P_local_count_load_enable_1");
        sc_trace(tf, TILE0_HLC.P_local_count_load_enable_2, "TILE0_HLC.P_local_count_load_enable_2");
        sc_trace(tf, TILE0_HLC.P_local_count_match1_enable_0, "TILE0_HLC.P_local_count_match1_enable_0");
        sc_trace(tf, TILE0_HLC.P_local_count_match1_enable_1, "TILE0_HLC.P_local_count_match1_enable_1");
        sc_trace(tf, TILE0_HLC.P_local_count_match1_enable_2, "TILE0_HLC.P_local_count_match1_enable_2");
        sc_trace(tf, TILE0_HLC.P_local_count_match2_enable_0, "TILE0_HLC.P_local_count_match2_enable_0");
        sc_trace(tf, TILE0_HLC.P_local_count_match2_enable_1, "TILE0_HLC.P_local_count_match2_enable_1");
        sc_trace(tf, TILE0_HLC.P_local_count_match2_enable_2, "TILE0_HLC.P_local_count_match2_enable_2");

        TILE0_HLC.P_EVENT_BUS_IN[0](sc_zero);
        TILE0_HLC.P_EVENT_BUS_IN[1](sig_TILE0_COUNTER_0_count_match2);
        TILE0_HLC.P_EVENT_BUS_IN[2](sig_TILE0_COUNTER_0_count_zero);
        TILE0_HLC.P_EVENT_BUS_IN[3](sig_TILE0_COUNTER_0_count_match1);
        TILE0_HLC.P_EVENT_BUS_IN[4](sig_TILE0_FSM_0_S0);
        TILE0_HLC.P_EVENT_BUS_IN[5](sig_TILE0_FSM_0_S1);
        TILE0_HLC.P_EVENT_BUS_IN[6](sig_TILE0_FSM_0_OUT);
        TILE0_HLC.P_EVENT_BUS_IN[7](sig_TILE0_LUT_0_OUT);
        TILE0_HLC.P_EVENT_BUS_IN[8](sc_one);
        TILE0_HLC.P_EVENT_BUS_IN[9](sig_TILE0_COUNTER_1_count_match2);
        TILE0_HLC.P_EVENT_BUS_IN[10](sig_TILE0_COUNTER_1_count_zero);
        TILE0_HLC.P_EVENT_BUS_IN[11](sig_TILE0_COUNTER_1_count_match1);
        TILE0_HLC.P_EVENT_BUS_IN[12](sig_TILE0_FSM_1_S0);
        TILE0_HLC.P_EVENT_BUS_IN[13](sig_TILE0_FSM_1_S1);
        TILE0_HLC.P_EVENT_BUS_IN[14](sig_TILE0_FSM_1_OUT);
        TILE0_HLC.P_EVENT_BUS_IN[15](sig_TILE0_LUT_1_OUT);
        TILE0_HLC.P_EVENT_BUS_IN[16](sc_zero);
        TILE0_HLC.P_EVENT_BUS_IN[17](sig_TILE0_COUNTER_2_count_match2);
        TILE0_HLC.P_EVENT_BUS_IN[18](sig_TILE0_COUNTER_2_count_zero);
        TILE0_HLC.P_EVENT_BUS_IN[19](sig_TILE0_COUNTER_2_count_match1);
        TILE0_HLC.P_EVENT_BUS_IN[20](sig_TILE0_FSM_2_S0);
        TILE0_HLC.P_EVENT_BUS_IN[21](sig_TILE0_FSM_2_S1);
        TILE0_HLC.P_EVENT_BUS_IN[22](sig_TILE0_FSM_2_OUT);
        TILE0_HLC.P_EVENT_BUS_IN[23](sig_TILE0_LUT_2_OUT);
        TILE0_HLC.P_EVENT_BUS_IN[24](sig_TILE0_BOUNDARY_IN_out0);
        TILE0_HLC.P_EVENT_BUS_IN[25](sig_TILE0_BOUNDARY_IN_out1);
        TILE0_HLC.P_EVENT_BUS_IN[26](sig_TILE0_BOUNDARY_IN_out2);
        TILE0_HLC.P_EVENT_BUS_IN[27](sig_TILE0_BOUNDARY_IN_out3);
        TILE0_HLC.P_EVENT_BUS_IN[28](sig_TILE0_BOUNDARY_IN_out4);
        TILE0_HLC.P_EVENT_BUS_IN[29](sig_TILE0_BOUNDARY_IN_out5);
        TILE0_HLC.P_EVENT_BUS_IN[30](sig_TILE0_BOUNDARY_IN_out6);
        TILE0_HLC.P_EVENT_BUS_IN[31](sig_TILE0_BOUNDARY_IN_out7);

        sc_trace(tf, TILE0_HLC.P_EVENT_BUS_IN[0], "TILE0_HLC.P_EVENT_BUS_IN(0)");
        sc_trace(tf, TILE0_HLC.P_EVENT_BUS_IN[1], "TILE0_HLC.P_EVENT_BUS_IN(1)");
        sc_trace(tf, TILE0_HLC.P_EVENT_BUS_IN[2], "TILE0_HLC.P_EVENT_BUS_IN(2)");
        sc_trace(tf, TILE0_HLC.P_EVENT_BUS_IN[3], "TILE0_HLC.P_EVENT_BUS_IN(3)");
        sc_trace(tf, TILE0_HLC.P_EVENT_BUS_IN[4], "TILE0_HLC.P_EVENT_BUS_IN(4)");
        sc_trace(tf, TILE0_HLC.P_EVENT_BUS_IN[5], "TILE0_HLC.P_EVENT_BUS_IN(5)");
        sc_trace(tf, TILE0_HLC.P_EVENT_BUS_IN[6], "TILE0_HLC.P_EVENT_BUS_IN(6)");
        sc_trace(tf, TILE0_HLC.P_EVENT_BUS_IN[7], "TILE0_HLC.P_EVENT_BUS_IN(7)");
        sc_trace(tf, TILE0_HLC.P_EVENT_BUS_IN[8], "TILE0_HLC.P_EVENT_BUS_IN(8)");
        sc_trace(tf, TILE0_HLC.P_EVENT_BUS_IN[9], "TILE0_HLC.P_EVENT_BUS_IN(9)");
        sc_trace(tf, TILE0_HLC.P_EVENT_BUS_IN[10], "TILE0_HLC.P_EVENT_BUS_IN(10)");
        sc_trace(tf, TILE0_HLC.P_EVENT_BUS_IN[11], "TILE0_HLC.P_EVENT_BUS_IN(11)");
        sc_trace(tf, TILE0_HLC.P_EVENT_BUS_IN[12], "TILE0_HLC.P_EVENT_BUS_IN(12)");
        sc_trace(tf, TILE0_HLC.P_EVENT_BUS_IN[13], "TILE0_HLC.P_EVENT_BUS_IN(13)");
        sc_trace(tf, TILE0_HLC.P_EVENT_BUS_IN[14], "TILE0_HLC.P_EVENT_BUS_IN(14)");
        sc_trace(tf, TILE0_HLC.P_EVENT_BUS_IN[15], "TILE0_HLC.P_EVENT_BUS_IN(15)");
        sc_trace(tf, TILE0_HLC.P_EVENT_BUS_IN[16], "TILE0_HLC.P_EVENT_BUS_IN(16)");
        sc_trace(tf, TILE0_HLC.P_EVENT_BUS_IN[17], "TILE0_HLC.P_EVENT_BUS_IN(17)");
        sc_trace(tf, TILE0_HLC.P_EVENT_BUS_IN[18], "TILE0_HLC.P_EVENT_BUS_IN(18)");
        sc_trace(tf, TILE0_HLC.P_EVENT_BUS_IN[19], "TILE0_HLC.P_EVENT_BUS_IN(19)");
        sc_trace(tf, TILE0_HLC.P_EVENT_BUS_IN[20], "TILE0_HLC.P_EVENT_BUS_IN(20)");
        sc_trace(tf, TILE0_HLC.P_EVENT_BUS_IN[21], "TILE0_HLC.P_EVENT_BUS_IN(21)");
        sc_trace(tf, TILE0_HLC.P_EVENT_BUS_IN[22], "TILE0_HLC.P_EVENT_BUS_IN(22)");
        sc_trace(tf, TILE0_HLC.P_EVENT_BUS_IN[23], "TILE0_HLC.P_EVENT_BUS_IN(23)");
        sc_trace(tf, TILE0_HLC.P_EVENT_BUS_IN[24], "TILE0_HLC.P_EVENT_BUS_IN(24)");
        sc_trace(tf, TILE0_HLC.P_EVENT_BUS_IN[25], "TILE0_HLC.P_EVENT_BUS_IN(25)");
        sc_trace(tf, TILE0_HLC.P_EVENT_BUS_IN[26], "TILE0_HLC.P_EVENT_BUS_IN(26)");
        sc_trace(tf, TILE0_HLC.P_EVENT_BUS_IN[27], "TILE0_HLC.P_EVENT_BUS_IN(27)");
        sc_trace(tf, TILE0_HLC.P_EVENT_BUS_IN[28], "TILE0_HLC.P_EVENT_BUS_IN(28)");
        sc_trace(tf, TILE0_HLC.P_EVENT_BUS_IN[29], "TILE0_HLC.P_EVENT_BUS_IN(29)");
        sc_trace(tf, TILE0_HLC.P_EVENT_BUS_IN[30], "TILE0_HLC.P_EVENT_BUS_IN(30)");
        sc_trace(tf, TILE0_HLC.P_EVENT_BUS_IN[31], "TILE0_HLC.P_EVENT_BUS_IN(31)");


		TILE0_HLC.hlc_instructions[0](sig_TILE0_HLC_hlc_instr_0);
		TILE0_HLC.hlc_instructions[1](sig_TILE0_HLC_hlc_instr_1);
		TILE0_HLC.hlc_instructions[2](sig_TILE0_HLC_hlc_instr_2);
		TILE0_HLC.hlc_instructions[3](sig_TILE0_HLC_hlc_instr_3);
		TILE0_HLC.hlc_instructions[4](sig_TILE0_HLC_hlc_instr_4);
		TILE0_HLC.hlc_instructions[5](sig_TILE0_HLC_hlc_instr_5);
		TILE0_HLC.hlc_instructions[6](sig_TILE0_HLC_hlc_instr_6);
		TILE0_HLC.hlc_instructions[7](sig_TILE0_HLC_hlc_instr_7);
		TILE0_HLC.hlc_instructions[8](sig_TILE0_HLC_hlc_instr_8);
		TILE0_HLC.hlc_instructions[9](sig_TILE0_HLC_hlc_instr_9);
		TILE0_HLC.hlc_instructions[10](sig_TILE0_HLC_hlc_instr_10);
		TILE0_HLC.hlc_instructions[11](sig_TILE0_HLC_hlc_instr_11);
		TILE0_HLC.hlc_instructions[12](sig_TILE0_HLC_hlc_instr_12);
		TILE0_HLC.hlc_instructions[13](sig_TILE0_HLC_hlc_instr_13);
		TILE0_HLC.hlc_instructions[14](sig_TILE0_HLC_hlc_instr_14);
		TILE0_HLC.hlc_instructions[15](sig_TILE0_HLC_hlc_instr_15);
		TILE0_HLC.hlc_instructions[16](sig_TILE0_HLC_hlc_instr_16);
		TILE0_HLC.hlc_instructions[17](sig_TILE0_HLC_hlc_instr_17);
		TILE0_HLC.hlc_instructions[18](sig_TILE0_HLC_hlc_instr_18);
		TILE0_HLC.hlc_instructions[19](sig_TILE0_HLC_hlc_instr_19);
		TILE0_HLC.hlc_instructions[20](sig_TILE0_HLC_hlc_instr_20);
		TILE0_HLC.hlc_instructions[21](sig_TILE0_HLC_hlc_instr_21);
		TILE0_HLC.hlc_instructions[22](sig_TILE0_HLC_hlc_instr_22);
		TILE0_HLC.hlc_instructions[23](sig_TILE0_HLC_hlc_instr_23);
		TILE0_HLC.hlc_instructions[24](sig_TILE0_HLC_hlc_instr_24);
		TILE0_HLC.hlc_instructions[25](sig_TILE0_HLC_hlc_instr_25);
		TILE0_HLC.hlc_instructions[26](sig_TILE0_HLC_hlc_instr_26);
		TILE0_HLC.hlc_instructions[27](sig_TILE0_HLC_hlc_instr_27);
		TILE0_HLC.hlc_instructions[28](sig_TILE0_HLC_hlc_instr_28);
		TILE0_HLC.hlc_instructions[29](sig_TILE0_HLC_hlc_instr_29);
		TILE0_HLC.hlc_instructions[30](sig_TILE0_HLC_hlc_instr_30);
		TILE0_HLC.hlc_instructions[31](sig_TILE0_HLC_hlc_instr_31);

		sc_trace(tf, TILE0_HLC.hlc_instructions[0], "TILE0_HLC.hlc_instructions(0)");
		sc_trace(tf, TILE0_HLC.hlc_instructions[1], "TILE0_HLC.hlc_instructions(1)");
		sc_trace(tf, TILE0_HLC.hlc_instructions[2], "TILE0_HLC.hlc_instructions(2)");
		sc_trace(tf, TILE0_HLC.hlc_instructions[3], "TILE0_HLC.hlc_instructions(3)");
		sc_trace(tf, TILE0_HLC.hlc_instructions[4], "TILE0_HLC.hlc_instructions(4)");
		sc_trace(tf, TILE0_HLC.hlc_instructions[5], "TILE0_HLC.hlc_instructions(5)");
		sc_trace(tf, TILE0_HLC.hlc_instructions[6], "TILE0_HLC.hlc_instructions(6)");
		sc_trace(tf, TILE0_HLC.hlc_instructions[7], "TILE0_HLC.hlc_instructions(7)");
		sc_trace(tf, TILE0_HLC.hlc_instructions[8], "TILE0_HLC.hlc_instructions(8)");
		sc_trace(tf, TILE0_HLC.hlc_instructions[9], "TILE0_HLC.hlc_instructions(9)");
		sc_trace(tf, TILE0_HLC.hlc_instructions[10], "TILE0_HLC.hlc_instructions(10)");
		sc_trace(tf, TILE0_HLC.hlc_instructions[11], "TILE0_HLC.hlc_instructions(11)");
		sc_trace(tf, TILE0_HLC.hlc_instructions[12], "TILE0_HLC.hlc_instructions(12)");
		sc_trace(tf, TILE0_HLC.hlc_instructions[13], "TILE0_HLC.hlc_instructions(13)");
		sc_trace(tf, TILE0_HLC.hlc_instructions[14], "TILE0_HLC.hlc_instructions(14)");
		sc_trace(tf, TILE0_HLC.hlc_instructions[15], "TILE0_HLC.hlc_instructions(15)");
		sc_trace(tf, TILE0_HLC.hlc_instructions[16], "TILE0_HLC.hlc_instructions(16)");
		sc_trace(tf, TILE0_HLC.hlc_instructions[17], "TILE0_HLC.hlc_instructions(17)");
		sc_trace(tf, TILE0_HLC.hlc_instructions[18], "TILE0_HLC.hlc_instructions(18)");
		sc_trace(tf, TILE0_HLC.hlc_instructions[19], "TILE0_HLC.hlc_instructions(19)");
		sc_trace(tf, TILE0_HLC.hlc_instructions[20], "TILE0_HLC.hlc_instructions(20)");
		sc_trace(tf, TILE0_HLC.hlc_instructions[21], "TILE0_HLC.hlc_instructions(21)");
		sc_trace(tf, TILE0_HLC.hlc_instructions[22], "TILE0_HLC.hlc_instructions(22)");
		sc_trace(tf, TILE0_HLC.hlc_instructions[23], "TILE0_HLC.hlc_instructions(23)");
		sc_trace(tf, TILE0_HLC.hlc_instructions[24], "TILE0_HLC.hlc_instructions(24)");
		sc_trace(tf, TILE0_HLC.hlc_instructions[25], "TILE0_HLC.hlc_instructions(25)");
		sc_trace(tf, TILE0_HLC.hlc_instructions[26], "TILE0_HLC.hlc_instructions(26)");
		sc_trace(tf, TILE0_HLC.hlc_instructions[27], "TILE0_HLC.hlc_instructions(27)");
		sc_trace(tf, TILE0_HLC.hlc_instructions[28], "TILE0_HLC.hlc_instructions(28)");
		sc_trace(tf, TILE0_HLC.hlc_instructions[29], "TILE0_HLC.hlc_instructions(29)");
		sc_trace(tf, TILE0_HLC.hlc_instructions[30], "TILE0_HLC.hlc_instructions(30)");
		sc_trace(tf, TILE0_HLC.hlc_instructions[31], "TILE0_HLC.hlc_instructions(31)");
		
		
        TILE0_HLC.P_counter_load_bus(sig_TILE0_COUNTER_hlc_count_load_val);
        sc_trace(tf, TILE0_HLC.P_counter_load_bus, "TILE0_HLC.P_counter_load_bus");

        // Not connected.  Here for debug purposes
        TILE0_HLC.P_comm_R0_out(sig_TILE0_HLC_P_comm_R0_out);
        TILE0_HLC.P_comm_R1_out(sig_TILE0_HLC_P_comm_R1_out);
        TILE0_HLC.P_comm_R2_out(sig_TILE0_HLC_P_comm_R2_out);
        TILE0_HLC.P_comm_R3_out(sig_TILE0_HLC_P_comm_R3_out);

        sc_trace(tf, TILE0_HLC.P_comm_R0_out, "TILE0_HLC.P_comm_R0_out");
        sc_trace(tf, TILE0_HLC.P_comm_R1_out, "TILE0_HLC.P_comm_R1_out");
        sc_trace(tf, TILE0_HLC.P_comm_R2_out, "TILE0_HLC.P_comm_R2_out");
        sc_trace(tf, TILE0_HLC.P_comm_R3_out, "TILE0_HLC.P_comm_R3_out");

        TILE0_HLC.P_push_data_en  (sig_TILE0_HLC_P_push_data_en);
        TILE0_HLC.P_push_data_out (sig_TILE0_HLC_P_push_data_out);
        TILE0_HLC.P_pull_data_en  (sig_TILE0_HLC_P_pull_data_en);
        TILE0_HLC.P_set_intr_flag (sig_TILE0_HLC_P_set_intr_flag);

        sc_trace(tf, TILE0_HLC.P_push_data_en,  "TILE0_HLC.P_push_data_en");
        sc_trace(tf, TILE0_HLC.P_push_data_out, "TILE0_HLC.P_push_data_out");
        sc_trace(tf, TILE0_HLC.P_pull_data_en,  "TILE0_HLC.P_pull_data_en");
        sc_trace(tf, TILE0_HLC.P_set_intr_flag, "TILE0_HLC.P_set_intr_flag");

        // not currently used.  Fixed to 0 value.
        TILE0_HLC.P_glbl_load_addr  (sig_TILE0_HLC_P_glbl_load_addr);
        TILE0_HLC.P_glbl_load_value (sig_TILE0_HLC_P_glbl_load_value);
        TILE0_HLC.P_pull_data_in    (sig_TILE0_HLC_P_pull_data_in);

        sc_trace(tf, TILE0_HLC.P_glbl_load_addr,  "TILE0_HLC.P_glbl_load_addr");
        sc_trace(tf, TILE0_HLC.P_glbl_load_value, "TILE0_HLC.P_glbl_load_value");
        sc_trace(tf, TILE0_HLC.P_pull_data_in,    "TILE0_HLC.P_pull_data_in");

        TILE0_BOUNDARY_IN.clk                  (sc_top_clock);
        TILE0_BOUNDARY_IN.in0_ctrl             (sig_TILE0_BOUNDARY_IN_ctrl0);
        TILE0_BOUNDARY_IN.in1_ctrl             (sig_TILE0_BOUNDARY_IN_ctrl1);
        TILE0_BOUNDARY_IN.in2_ctrl             (sig_TILE0_BOUNDARY_IN_ctrl2);
        TILE0_BOUNDARY_IN.in3_ctrl             (sig_TILE0_BOUNDARY_IN_ctrl3);
        TILE0_BOUNDARY_IN.in4_ctrl             (sig_TILE0_BOUNDARY_IN_ctrl4);
        TILE0_BOUNDARY_IN.in5_ctrl             (sig_TILE0_BOUNDARY_IN_ctrl5);
        TILE0_BOUNDARY_IN.in6_ctrl             (sig_TILE0_BOUNDARY_IN_ctrl6);
        TILE0_BOUNDARY_IN.in7_ctrl             (sig_TILE0_BOUNDARY_IN_ctrl7);
        TILE0_BOUNDARY_IN.out0                 (sig_TILE0_BOUNDARY_IN_out0);
        TILE0_BOUNDARY_IN.out1                 (sig_TILE0_BOUNDARY_IN_out1);
        TILE0_BOUNDARY_IN.out2                 (sig_TILE0_BOUNDARY_IN_out2);
        TILE0_BOUNDARY_IN.out3                 (sig_TILE0_BOUNDARY_IN_out3);
        TILE0_BOUNDARY_IN.out4                 (sig_TILE0_BOUNDARY_IN_out4);
        TILE0_BOUNDARY_IN.out5                 (sig_TILE0_BOUNDARY_IN_out5);
        TILE0_BOUNDARY_IN.out6                 (sig_TILE0_BOUNDARY_IN_out6);
        TILE0_BOUNDARY_IN.out7                 (sig_TILE0_BOUNDARY_IN_out7);

        TILE0_in0_squareWave.out   (sig_TILE0_BOUNDARY_IN_in0);
        TILE0_in0_squareWave.clk   (sc_top_clock);
        TILE0_BOUNDARY_IN.in0          (sig_TILE0_BOUNDARY_IN_in0);
        if (TILE0_BOUNDARY_IN.in0.size() == 0) TILE0_BOUNDARY_IN.in0(sc_zero);
        if (TILE0_BOUNDARY_IN.in1.size() == 0) TILE0_BOUNDARY_IN.in1(sc_zero);
        if (TILE0_BOUNDARY_IN.in2.size() == 0) TILE0_BOUNDARY_IN.in2(sc_zero);
        if (TILE0_BOUNDARY_IN.in3.size() == 0) TILE0_BOUNDARY_IN.in3(sc_zero);
        if (TILE0_BOUNDARY_IN.in4.size() == 0) TILE0_BOUNDARY_IN.in4(sc_zero);
        if (TILE0_BOUNDARY_IN.in5.size() == 0) TILE0_BOUNDARY_IN.in5(sc_zero);
        if (TILE0_BOUNDARY_IN.in6.size() == 0) TILE0_BOUNDARY_IN.in6(sc_zero);
        if (TILE0_BOUNDARY_IN.in7.size() == 0) TILE0_BOUNDARY_IN.in7(sc_zero);
        sc_trace(tf, TILE0_BOUNDARY_IN.clk, "TILE0_BOUNDARY_IN.clk");
        sc_trace(tf, TILE0_BOUNDARY_IN.in0, "TILE0_BOUNDARY_IN.in0");
        sc_trace(tf, TILE0_BOUNDARY_IN.in1, "TILE0_BOUNDARY_IN.in1");
        sc_trace(tf, TILE0_BOUNDARY_IN.in2, "TILE0_BOUNDARY_IN.in2");
        sc_trace(tf, TILE0_BOUNDARY_IN.in3, "TILE0_BOUNDARY_IN.in3");
        sc_trace(tf, TILE0_BOUNDARY_IN.in4, "TILE0_BOUNDARY_IN.in4");
        sc_trace(tf, TILE0_BOUNDARY_IN.in5, "TILE0_BOUNDARY_IN.in5");
        sc_trace(tf, TILE0_BOUNDARY_IN.in6, "TILE0_BOUNDARY_IN.in6");
        sc_trace(tf, TILE0_BOUNDARY_IN.in7, "TILE0_BOUNDARY_IN.in7");
        sc_trace(tf, TILE0_BOUNDARY_IN.in0_ctrl, "TILE0_BOUNDARY_IN.in0_ctrl");
        sc_trace(tf, TILE0_BOUNDARY_IN.in1_ctrl, "TILE0_BOUNDARY_IN.in1_ctrl");
        sc_trace(tf, TILE0_BOUNDARY_IN.in2_ctrl, "TILE0_BOUNDARY_IN.in2_ctrl");
        sc_trace(tf, TILE0_BOUNDARY_IN.in3_ctrl, "TILE0_BOUNDARY_IN.in3_ctrl");
        sc_trace(tf, TILE0_BOUNDARY_IN.in4_ctrl, "TILE0_BOUNDARY_IN.in4_ctrl");
        sc_trace(tf, TILE0_BOUNDARY_IN.in5_ctrl, "TILE0_BOUNDARY_IN.in5_ctrl");
        sc_trace(tf, TILE0_BOUNDARY_IN.in6_ctrl, "TILE0_BOUNDARY_IN.in6_ctrl");
        sc_trace(tf, TILE0_BOUNDARY_IN.in7_ctrl, "TILE0_BOUNDARY_IN.in7_ctrl");
        sc_trace(tf, TILE0_BOUNDARY_IN.out0, "TILE0_BOUNDARY_IN.out0");
        sc_trace(tf, TILE0_BOUNDARY_IN.out1, "TILE0_BOUNDARY_IN.out1");
        sc_trace(tf, TILE0_BOUNDARY_IN.out2, "TILE0_BOUNDARY_IN.out2");
        sc_trace(tf, TILE0_BOUNDARY_IN.out3, "TILE0_BOUNDARY_IN.out3");
        sc_trace(tf, TILE0_BOUNDARY_IN.out4, "TILE0_BOUNDARY_IN.out4");
        sc_trace(tf, TILE0_BOUNDARY_IN.out5, "TILE0_BOUNDARY_IN.out5");
        sc_trace(tf, TILE0_BOUNDARY_IN.out6, "TILE0_BOUNDARY_IN.out6");
        sc_trace(tf, TILE0_BOUNDARY_IN.out7, "TILE0_BOUNDARY_IN.out7");


        sc_trace(tf, sc_top_clock, "sc_top_clock");
        sc_trace(tf, sc_top_reset, "sc_top_reset");
        sc_trace(tf, sc_top_enable, "sc_top_enable");
    }

    // Reset Generator Thread
    void reset_generator(void)
    {
        sc_top_reset.write(false);
        wait(40, SC_NS);
        sc_top_reset.write(true);
    }

    //SystemC End-Of-Elaboration function to connect the signals to constants
    void end_of_elaboration()
    {
        sc_top_enable.write((bool) 1);
        sc_zero.write((bool) 0);
        sc_one.write((bool) 1);
        sig_TILE1_OUTLUT_0_fn.write     ((sc_uint<8>) 0xbb);
        sig_TILE1_OUTLUT_1_fn.write     ((sc_uint<8>) 0xff);
        sig_TILE1_OUTLUT_2_fn.write     ((sc_uint<8>) 0xbb);
        sig_TILE1_OUTLUT_3_fn.write     ((sc_uint<8>) 0xff);
        sig_TILE1_OUTLUT_4_fn.write     ((sc_uint<8>) 0xaa);
        sig_TILE1_OUTLUT_5_fn.write     ((sc_uint<8>) 0x0);
        sig_TILE1_OUTLUT_6_fn.write     ((sc_uint<8>) 0x0);
        sig_TILE1_OUTLUT_7_fn.write     ((sc_uint<8>) 0x0);
        sig_TILE1_LUT_0_OUT.write    ((bool) 0);
        sig_TILE1_LUT_0_fn.write     ((sc_uint<16>) 0xff20);

        sig_TILE1_LUT_1_OUT.write    ((bool) 0);
        sig_TILE1_LUT_1_fn.write     ((sc_uint<16>) 0xaeaa);

        sig_TILE1_LUT_2_OUT.write    ((bool) 0);
        sig_TILE1_LUT_2_fn.write     ((sc_uint<16>) 0x4040);

        sig_TILE1_FSM_0_OUT_LUT_fn.write     ((sc_uint<16>) 0xaa);
        sig_TILE1_FSM_0_S0_fn.write          ((sc_uint<16>) 0x50fa);
        sig_TILE1_FSM_0_S1_fn.write          ((sc_uint<16>) 0x0);
        sig_TILE1_FSM_0_xe0_sel.write        ((bool)        false);
        sig_TILE1_FSM_0_xe1_sel.write        ((bool)        false);
        sig_TILE1_FSM_0_S0.write             ((bool) 0);
        sig_TILE1_FSM_0_S1.write             ((bool) 0);
        sig_TILE1_FSM_0_OUT.write            ((bool) 0);
        sig_TILE1_FSM_1_OUT_LUT_fn.write     ((sc_uint<16>) 0xeeee);
        sig_TILE1_FSM_1_S0_fn.write          ((sc_uint<16>) 0x50fa);
        sig_TILE1_FSM_1_S1_fn.write          ((sc_uint<16>) 0x66cc);
        sig_TILE1_FSM_1_xe0_sel.write        ((bool)        false);
        sig_TILE1_FSM_1_xe1_sel.write        ((bool)        false);
        sig_TILE1_FSM_1_S0.write             ((bool) 0);
        sig_TILE1_FSM_1_S1.write             ((bool) 0);
        sig_TILE1_FSM_1_OUT.write            ((bool) 0);
        sig_TILE1_FSM_2_OUT_LUT_fn.write     ((sc_uint<16>) 0xaaaa);
        sig_TILE1_FSM_2_S0_fn.write          ((sc_uint<16>) 0x5f0a);
        sig_TILE1_FSM_2_S1_fn.write          ((sc_uint<16>) 0xcccc);
        sig_TILE1_FSM_2_xe0_sel.write        ((bool)        false);
        sig_TILE1_FSM_2_xe1_sel.write        ((bool)        false);
        sig_TILE1_FSM_2_S0.write             ((bool) 0);
        sig_TILE1_FSM_2_S1.write             ((bool) 0);
        sig_TILE1_FSM_2_OUT.write            ((bool) 0);

        sig_TILE1_COUNTER_0_add_shift_dir.write          ((bool) 0);
        sig_TILE1_COUNTER_0_add_shift_mode.write         ((bool) 0);
        sig_TILE1_COUNTER_0_add_shift_on_event_en.write  ((bool) 0);
        sig_TILE1_COUNTER_0_global_clk_en.write          ((bool) 1);
        sig_TILE1_COUNTER_0_glbl_load_en.write           ((bool) 0);
        sig_TILE1_COUNTER_0_event_load_val.write         ((sc_uint<32>) 0);
        sig_TILE1_COUNTER_0_glbl_en.write                ((bool) 1);
        sig_TILE1_COUNTER_0_match1_val.write             ((sc_uint<32>) 25);
        sig_TILE1_COUNTER_0_match2_val.write             ((sc_uint<32>) 50);
        sig_TILE1_COUNTER_0_match_en.write               ((bool) 1);
        sig_TILE1_COUNTER_0_glbl_serializer_mode.write   ((bool) 0);
#if TYPE == 2 || TYPE == 3
        sig_TILE1_COUNTER_0_lfsr_mode.write                 ((bool) 0);
        sig_TILE1_COUNTER_0_match1_tap_en.write             ((bool) 0);
        sig_TILE1_COUNTER_0_match1_tap.write                ((sc_uint<5>) 0);
        sig_TILE1_COUNTER_0_match2_tap_en.write             ((bool) 0);
        sig_TILE1_COUNTER_0_match2_tap.write                ((sc_uint<5>) 0);
#endif
#if TYPE == 3
        sig_TILE1_COUNTER_0_RECONFIG_PIPELINE_EN.write      ((bool) TILE1_PIPELINE_MODE);
#endif

        sig_TILE1_COUNTER_1_add_shift_dir.write          ((bool) 0);
        sig_TILE1_COUNTER_1_add_shift_mode.write         ((bool) 0);
        sig_TILE1_COUNTER_1_add_shift_on_event_en.write  ((bool) 0);
        sig_TILE1_COUNTER_1_global_clk_en.write          ((bool) 1);
        sig_TILE1_COUNTER_1_glbl_load_en.write           ((bool) 0);
        sig_TILE1_COUNTER_1_event_load_val.write         ((sc_uint<32>) 0);
        sig_TILE1_COUNTER_1_glbl_en.write                ((bool) 1);
        sig_TILE1_COUNTER_1_match1_val.write             ((sc_uint<32>) 10);
        sig_TILE1_COUNTER_1_match2_val.write             ((sc_uint<32>) 10);
        sig_TILE1_COUNTER_1_match_en.write               ((bool) 1);
        sig_TILE1_COUNTER_1_glbl_serializer_mode.write   ((bool) 0);
#if TYPE == 2 || TYPE == 3
        sig_TILE1_COUNTER_1_lfsr_mode.write                 ((bool) 0);
        sig_TILE1_COUNTER_1_match1_tap_en.write             ((bool) 0);
        sig_TILE1_COUNTER_1_match1_tap.write                ((sc_uint<5>) 0);
        sig_TILE1_COUNTER_1_match2_tap_en.write             ((bool) 0);
        sig_TILE1_COUNTER_1_match2_tap.write                ((sc_uint<5>) 0);
#endif
#if TYPE == 3
        sig_TILE1_COUNTER_1_RECONFIG_PIPELINE_EN.write      ((bool) TILE1_PIPELINE_MODE);
#endif

        sig_TILE1_COUNTER_2_add_shift_dir.write          ((bool) 0);
        sig_TILE1_COUNTER_2_add_shift_mode.write         ((bool) 0);
        sig_TILE1_COUNTER_2_add_shift_on_event_en.write  ((bool) 0);
        sig_TILE1_COUNTER_2_global_clk_en.write          ((bool) 1);
        sig_TILE1_COUNTER_2_glbl_load_en.write           ((bool) 0);
        sig_TILE1_COUNTER_2_event_load_val.write         ((sc_uint<32>) 0);
        sig_TILE1_COUNTER_2_glbl_en.write                ((bool) 1);
        sig_TILE1_COUNTER_2_match1_val.write             ((sc_uint<32>) 13000);
        sig_TILE1_COUNTER_2_match2_val.write             ((sc_uint<32>) 0);
        sig_TILE1_COUNTER_2_match_en.write               ((bool) 1);
        sig_TILE1_COUNTER_2_glbl_serializer_mode.write   ((bool) 0);
#if TYPE == 2 || TYPE == 3
        sig_TILE1_COUNTER_2_lfsr_mode.write                 ((bool) 0);
        sig_TILE1_COUNTER_2_match1_tap_en.write             ((bool) 0);
        sig_TILE1_COUNTER_2_match1_tap.write                ((sc_uint<5>) 0);
        sig_TILE1_COUNTER_2_match2_tap_en.write             ((bool) 0);
        sig_TILE1_COUNTER_2_match2_tap.write                ((sc_uint<5>) 0);
#endif
#if TYPE == 3
        sig_TILE1_COUNTER_2_RECONFIG_PIPELINE_EN.write      ((bool) TILE1_PIPELINE_MODE);
#endif
        sig_TILE1_HLC_e0.write((sc_uint<32>) 23);
        sig_TILE1_HLC_e1.write((sc_uint<32>) 0);
        sig_TILE1_HLC_e2.write((sc_uint<32>) 0);
        sig_TILE1_HLC_e3.write((sc_uint<32>) 0);
        sig_TILE1_HLC_P_glbl_load_addr.write((sc_uint<32>)0);
        sig_TILE1_HLC_P_glbl_load_value.write((sc_uint<32>)0);
        sig_TILE1_HLC_P_pull_data_in.write((sc_uint<32>)0);
#if TYPE == 2 || TYPE == 3
        sig_TILE1_HLC_ae0.write          ((bool) 0);
        sig_TILE1_HLC_ae1.write          ((bool) 0);
        sig_TILE1_HLC_ae2.write          ((bool) 0);
        sig_TILE1_HLC_ae3.write          ((bool) 0);
#endif
#if TYPE == 3
        sig_TILE1_HLC_RECONFIG_PIPELINE_EN.write          ((bool) TILE1_PIPELINE_MODE);
#endif
		sig_TILE1_HLC_hlc_instr_0.write((sc_uint<32>) TILE1_HLCINSTR_0);
		sig_TILE1_HLC_hlc_instr_1.write((sc_uint<32>) TILE1_HLCINSTR_1);
		sig_TILE1_HLC_hlc_instr_2.write((sc_uint<32>) TILE1_HLCINSTR_2);
		sig_TILE1_HLC_hlc_instr_3.write((sc_uint<32>) TILE1_HLCINSTR_3);
		sig_TILE1_HLC_hlc_instr_4.write((sc_uint<32>) TILE1_HLCINSTR_4);
		sig_TILE1_HLC_hlc_instr_5.write((sc_uint<32>) TILE1_HLCINSTR_5);
		sig_TILE1_HLC_hlc_instr_6.write((sc_uint<32>) TILE1_HLCINSTR_6);
		sig_TILE1_HLC_hlc_instr_7.write((sc_uint<32>) TILE1_HLCINSTR_7);
		sig_TILE1_HLC_hlc_instr_8.write((sc_uint<32>) TILE1_HLCINSTR_8);
		sig_TILE1_HLC_hlc_instr_9.write((sc_uint<32>) TILE1_HLCINSTR_9);
		sig_TILE1_HLC_hlc_instr_10.write((sc_uint<32>) TILE1_HLCINSTR_10);
		sig_TILE1_HLC_hlc_instr_11.write((sc_uint<32>) TILE1_HLCINSTR_11);
		sig_TILE1_HLC_hlc_instr_12.write((sc_uint<32>) TILE1_HLCINSTR_12);
		sig_TILE1_HLC_hlc_instr_13.write((sc_uint<32>) TILE1_HLCINSTR_13);
		sig_TILE1_HLC_hlc_instr_14.write((sc_uint<32>) TILE1_HLCINSTR_14);
		sig_TILE1_HLC_hlc_instr_15.write((sc_uint<32>) TILE1_HLCINSTR_15);
		sig_TILE1_HLC_hlc_instr_16.write((sc_uint<32>) TILE1_HLCINSTR_16);
		sig_TILE1_HLC_hlc_instr_17.write((sc_uint<32>) TILE1_HLCINSTR_17);
		sig_TILE1_HLC_hlc_instr_18.write((sc_uint<32>) TILE1_HLCINSTR_18);
		sig_TILE1_HLC_hlc_instr_19.write((sc_uint<32>) TILE1_HLCINSTR_19);
		sig_TILE1_HLC_hlc_instr_20.write((sc_uint<32>) TILE1_HLCINSTR_20);
		sig_TILE1_HLC_hlc_instr_21.write((sc_uint<32>) TILE1_HLCINSTR_21);
		sig_TILE1_HLC_hlc_instr_22.write((sc_uint<32>) TILE1_HLCINSTR_22);
		sig_TILE1_HLC_hlc_instr_23.write((sc_uint<32>) TILE1_HLCINSTR_23);
		sig_TILE1_HLC_hlc_instr_24.write((sc_uint<32>) TILE1_HLCINSTR_24);
		sig_TILE1_HLC_hlc_instr_25.write((sc_uint<32>) TILE1_HLCINSTR_25);
		sig_TILE1_HLC_hlc_instr_26.write((sc_uint<32>) TILE1_HLCINSTR_26);
		sig_TILE1_HLC_hlc_instr_27.write((sc_uint<32>) TILE1_HLCINSTR_27);
		sig_TILE1_HLC_hlc_instr_28.write((sc_uint<32>) TILE1_HLCINSTR_28);
		sig_TILE1_HLC_hlc_instr_29.write((sc_uint<32>) TILE1_HLCINSTR_29);
		sig_TILE1_HLC_hlc_instr_30.write((sc_uint<32>) TILE1_HLCINSTR_30);
		sig_TILE1_HLC_hlc_instr_31.write((sc_uint<32>) TILE1_HLCINSTR_31);


        sig_TILE1_BOUNDARY_IN_in0.write((bool) 0);
        sig_TILE1_BOUNDARY_IN_in1.write((bool) 0);
        sig_TILE1_BOUNDARY_IN_in2.write((bool) 0);
        sig_TILE1_BOUNDARY_IN_in3.write((bool) 0);
        sig_TILE1_BOUNDARY_IN_in4.write((bool) 0);
        sig_TILE1_BOUNDARY_IN_in5.write((bool) 0);
        sig_TILE1_BOUNDARY_IN_in6.write((bool) 0);
        sig_TILE1_BOUNDARY_IN_in7.write((bool) 0);

        sig_TILE1_BOUNDARY_IN_ctrl0.write((sc_uint<32>) 0);
        sig_TILE1_BOUNDARY_IN_ctrl1.write((sc_uint<32>) 0);
        sig_TILE1_BOUNDARY_IN_ctrl2.write((sc_uint<32>) 0);
        sig_TILE1_BOUNDARY_IN_ctrl3.write((sc_uint<32>) 0);
        sig_TILE1_BOUNDARY_IN_ctrl4.write((sc_uint<32>) 0);
        sig_TILE1_BOUNDARY_IN_ctrl5.write((sc_uint<32>) 0);
        sig_TILE1_BOUNDARY_IN_ctrl6.write((sc_uint<32>) 0);
        sig_TILE1_BOUNDARY_IN_ctrl7.write((sc_uint<32>) 0);

        sig_TILE1_BOUNDARY_IN_out0.write((bool) 0);
        sig_TILE1_BOUNDARY_IN_out1.write((bool) 0);
        sig_TILE1_BOUNDARY_IN_out2.write((bool) 0);
        sig_TILE1_BOUNDARY_IN_out3.write((bool) 0);
        sig_TILE1_BOUNDARY_IN_out4.write((bool) 0);
        sig_TILE1_BOUNDARY_IN_out5.write((bool) 0);
        sig_TILE1_BOUNDARY_IN_out6.write((bool) 0);
        sig_TILE1_BOUNDARY_IN_out7.write((bool) 0);

        sig_TILE1_BOUNDARY_OUT_out0.write((bool) 0);
        sig_TILE1_BOUNDARY_OUT_out1.write((bool) 0);
        sig_TILE1_BOUNDARY_OUT_out2.write((bool) 0);
        sig_TILE1_BOUNDARY_OUT_out3.write((bool) 0);
        sig_TILE1_BOUNDARY_OUT_out4.write((bool) 0);
        sig_TILE1_BOUNDARY_OUT_out5.write((bool) 0);
        sig_TILE1_BOUNDARY_OUT_out6.write((bool) 0);
        sig_TILE1_BOUNDARY_OUT_out7.write((bool) 0);

        sig_TILE0_OUTLUT_0_fn.write     ((sc_uint<8>) 0xbb);
        sig_TILE0_OUTLUT_1_fn.write     ((sc_uint<8>) 0xff);
        sig_TILE0_OUTLUT_2_fn.write     ((sc_uint<8>) 0xbb);
        sig_TILE0_OUTLUT_3_fn.write     ((sc_uint<8>) 0xff);
        sig_TILE0_OUTLUT_4_fn.write     ((sc_uint<8>) 0xaa);
        sig_TILE0_OUTLUT_5_fn.write     ((sc_uint<8>) 0x0);
        sig_TILE0_OUTLUT_6_fn.write     ((sc_uint<8>) 0x0);
        sig_TILE0_OUTLUT_7_fn.write     ((sc_uint<8>) 0x0);
        sig_TILE0_LUT_0_OUT.write    ((bool) 0);
        sig_TILE0_LUT_0_fn.write     ((sc_uint<16>) 0xff20);

        sig_TILE0_LUT_1_OUT.write    ((bool) 0);
        sig_TILE0_LUT_1_fn.write     ((sc_uint<16>) 0xaeaa);

        sig_TILE0_LUT_2_OUT.write    ((bool) 0);
        sig_TILE0_LUT_2_fn.write     ((sc_uint<16>) 0x4040);

        sig_TILE0_FSM_0_OUT_LUT_fn.write     ((sc_uint<16>) 0xaa);
        sig_TILE0_FSM_0_S0_fn.write          ((sc_uint<16>) 0x50fa);
        sig_TILE0_FSM_0_S1_fn.write          ((sc_uint<16>) 0x0);
        sig_TILE0_FSM_0_xe0_sel.write        ((bool)        false);
        sig_TILE0_FSM_0_xe1_sel.write        ((bool)        false);
        sig_TILE0_FSM_0_S0.write             ((bool) 0);
        sig_TILE0_FSM_0_S1.write             ((bool) 0);
        sig_TILE0_FSM_0_OUT.write            ((bool) 0);
        sig_TILE0_FSM_1_OUT_LUT_fn.write     ((sc_uint<16>) 0xeeee);
        sig_TILE0_FSM_1_S0_fn.write          ((sc_uint<16>) 0x50fa);
        sig_TILE0_FSM_1_S1_fn.write          ((sc_uint<16>) 0x66cc);
        sig_TILE0_FSM_1_xe0_sel.write        ((bool)        false);
        sig_TILE0_FSM_1_xe1_sel.write        ((bool)        false);
        sig_TILE0_FSM_1_S0.write             ((bool) 0);
        sig_TILE0_FSM_1_S1.write             ((bool) 0);
        sig_TILE0_FSM_1_OUT.write            ((bool) 0);
        sig_TILE0_FSM_2_OUT_LUT_fn.write     ((sc_uint<16>) 0xaaaa);
        sig_TILE0_FSM_2_S0_fn.write          ((sc_uint<16>) 0x5f0a);
        sig_TILE0_FSM_2_S1_fn.write          ((sc_uint<16>) 0xcccc);
        sig_TILE0_FSM_2_xe0_sel.write        ((bool)        false);
        sig_TILE0_FSM_2_xe1_sel.write        ((bool)        false);
        sig_TILE0_FSM_2_S0.write             ((bool) 0);
        sig_TILE0_FSM_2_S1.write             ((bool) 0);
        sig_TILE0_FSM_2_OUT.write            ((bool) 0);

        sig_TILE0_COUNTER_0_add_shift_dir.write          ((bool) 0);
        sig_TILE0_COUNTER_0_add_shift_mode.write         ((bool) 0);
        sig_TILE0_COUNTER_0_add_shift_on_event_en.write  ((bool) 0);
        sig_TILE0_COUNTER_0_global_clk_en.write          ((bool) 1);
        sig_TILE0_COUNTER_0_glbl_load_en.write           ((bool) 0);
        sig_TILE0_COUNTER_0_event_load_val.write         ((sc_uint<32>) 0);
        sig_TILE0_COUNTER_0_glbl_en.write                ((bool) 1);
        sig_TILE0_COUNTER_0_match1_val.write             ((sc_uint<32>) 25);
        sig_TILE0_COUNTER_0_match2_val.write             ((sc_uint<32>) 50);
        sig_TILE0_COUNTER_0_match_en.write               ((bool) 1);
        sig_TILE0_COUNTER_0_glbl_serializer_mode.write   ((bool) 0);
#if TYPE == 2 || TYPE == 3
        sig_TILE0_COUNTER_0_lfsr_mode.write                 ((bool) 0);
        sig_TILE0_COUNTER_0_match1_tap_en.write             ((bool) 0);
        sig_TILE0_COUNTER_0_match1_tap.write                ((sc_uint<5>) 0);
        sig_TILE0_COUNTER_0_match2_tap_en.write             ((bool) 0);
        sig_TILE0_COUNTER_0_match2_tap.write                ((sc_uint<5>) 0);
#endif
#if TYPE == 3
        sig_TILE0_COUNTER_0_RECONFIG_PIPELINE_EN.write      ((bool) TILE0_PIPELINE_MODE);
#endif

        sig_TILE0_COUNTER_1_add_shift_dir.write          ((bool) 0);
        sig_TILE0_COUNTER_1_add_shift_mode.write         ((bool) 0);
        sig_TILE0_COUNTER_1_add_shift_on_event_en.write  ((bool) 0);
        sig_TILE0_COUNTER_1_global_clk_en.write          ((bool) 1);
        sig_TILE0_COUNTER_1_glbl_load_en.write           ((bool) 0);
        sig_TILE0_COUNTER_1_event_load_val.write         ((sc_uint<32>) 0);
        sig_TILE0_COUNTER_1_glbl_en.write                ((bool) 1);
        sig_TILE0_COUNTER_1_match1_val.write             ((sc_uint<32>) 10);
        sig_TILE0_COUNTER_1_match2_val.write             ((sc_uint<32>) 10);
        sig_TILE0_COUNTER_1_match_en.write               ((bool) 1);
        sig_TILE0_COUNTER_1_glbl_serializer_mode.write   ((bool) 0);
#if TYPE == 2 || TYPE == 3
        sig_TILE0_COUNTER_1_lfsr_mode.write                 ((bool) 0);
        sig_TILE0_COUNTER_1_match1_tap_en.write             ((bool) 0);
        sig_TILE0_COUNTER_1_match1_tap.write                ((sc_uint<5>) 0);
        sig_TILE0_COUNTER_1_match2_tap_en.write             ((bool) 0);
        sig_TILE0_COUNTER_1_match2_tap.write                ((sc_uint<5>) 0);
#endif
#if TYPE == 3
        sig_TILE0_COUNTER_1_RECONFIG_PIPELINE_EN.write      ((bool) TILE0_PIPELINE_MODE);
#endif

        sig_TILE0_COUNTER_2_add_shift_dir.write          ((bool) 0);
        sig_TILE0_COUNTER_2_add_shift_mode.write         ((bool) 0);
        sig_TILE0_COUNTER_2_add_shift_on_event_en.write  ((bool) 0);
        sig_TILE0_COUNTER_2_global_clk_en.write          ((bool) 1);
        sig_TILE0_COUNTER_2_glbl_load_en.write           ((bool) 0);
        sig_TILE0_COUNTER_2_event_load_val.write         ((sc_uint<32>) 0);
        sig_TILE0_COUNTER_2_glbl_en.write                ((bool) 1);
        sig_TILE0_COUNTER_2_match1_val.write             ((sc_uint<32>) 13000);
        sig_TILE0_COUNTER_2_match2_val.write             ((sc_uint<32>) 0);
        sig_TILE0_COUNTER_2_match_en.write               ((bool) 1);
        sig_TILE0_COUNTER_2_glbl_serializer_mode.write   ((bool) 0);
#if TYPE == 2 || TYPE == 3
        sig_TILE0_COUNTER_2_lfsr_mode.write                 ((bool) 0);
        sig_TILE0_COUNTER_2_match1_tap_en.write             ((bool) 0);
        sig_TILE0_COUNTER_2_match1_tap.write                ((sc_uint<5>) 0);
        sig_TILE0_COUNTER_2_match2_tap_en.write             ((bool) 0);
        sig_TILE0_COUNTER_2_match2_tap.write                ((sc_uint<5>) 0);
#endif
#if TYPE == 3
        sig_TILE0_COUNTER_2_RECONFIG_PIPELINE_EN.write      ((bool) TILE0_PIPELINE_MODE);
#endif
        sig_TILE0_HLC_e0.write((sc_uint<32>) 23);
        sig_TILE0_HLC_e1.write((sc_uint<32>) 0);
        sig_TILE0_HLC_e2.write((sc_uint<32>) 0);
        sig_TILE0_HLC_e3.write((sc_uint<32>) 0);
        sig_TILE0_HLC_P_glbl_load_addr.write((sc_uint<32>)0);
        sig_TILE0_HLC_P_glbl_load_value.write((sc_uint<32>)0);
        sig_TILE0_HLC_P_pull_data_in.write((sc_uint<32>)0);
#if TYPE == 2 || TYPE == 3
        sig_TILE0_HLC_ae0.write          ((bool) 0);
        sig_TILE0_HLC_ae1.write          ((bool) 0);
        sig_TILE0_HLC_ae2.write          ((bool) 0);
        sig_TILE0_HLC_ae3.write          ((bool) 0);
#endif
#if TYPE == 3
        sig_TILE0_HLC_RECONFIG_PIPELINE_EN.write          ((bool) TILE0_PIPELINE_MODE);
#endif
		sig_TILE0_HLC_hlc_instr_0.write((sc_uint<32>) TILE0_HLCINSTR_0);
		sig_TILE0_HLC_hlc_instr_1.write((sc_uint<32>) TILE0_HLCINSTR_1);
		sig_TILE0_HLC_hlc_instr_2.write((sc_uint<32>) TILE0_HLCINSTR_2);
		sig_TILE0_HLC_hlc_instr_3.write((sc_uint<32>) TILE0_HLCINSTR_3);
		sig_TILE0_HLC_hlc_instr_4.write((sc_uint<32>) TILE0_HLCINSTR_4);
		sig_TILE0_HLC_hlc_instr_5.write((sc_uint<32>) TILE0_HLCINSTR_5);
		sig_TILE0_HLC_hlc_instr_6.write((sc_uint<32>) TILE0_HLCINSTR_6);
		sig_TILE0_HLC_hlc_instr_7.write((sc_uint<32>) TILE0_HLCINSTR_7);
		sig_TILE0_HLC_hlc_instr_8.write((sc_uint<32>) TILE0_HLCINSTR_8);
		sig_TILE0_HLC_hlc_instr_9.write((sc_uint<32>) TILE0_HLCINSTR_9);
		sig_TILE0_HLC_hlc_instr_10.write((sc_uint<32>) TILE0_HLCINSTR_10);
		sig_TILE0_HLC_hlc_instr_11.write((sc_uint<32>) TILE0_HLCINSTR_11);
		sig_TILE0_HLC_hlc_instr_12.write((sc_uint<32>) TILE0_HLCINSTR_12);
		sig_TILE0_HLC_hlc_instr_13.write((sc_uint<32>) TILE0_HLCINSTR_13);
		sig_TILE0_HLC_hlc_instr_14.write((sc_uint<32>) TILE0_HLCINSTR_14);
		sig_TILE0_HLC_hlc_instr_15.write((sc_uint<32>) TILE0_HLCINSTR_15);
		sig_TILE0_HLC_hlc_instr_16.write((sc_uint<32>) TILE0_HLCINSTR_16);
		sig_TILE0_HLC_hlc_instr_17.write((sc_uint<32>) TILE0_HLCINSTR_17);
		sig_TILE0_HLC_hlc_instr_18.write((sc_uint<32>) TILE0_HLCINSTR_18);
		sig_TILE0_HLC_hlc_instr_19.write((sc_uint<32>) TILE0_HLCINSTR_19);
		sig_TILE0_HLC_hlc_instr_20.write((sc_uint<32>) TILE0_HLCINSTR_20);
		sig_TILE0_HLC_hlc_instr_21.write((sc_uint<32>) TILE0_HLCINSTR_21);
		sig_TILE0_HLC_hlc_instr_22.write((sc_uint<32>) TILE0_HLCINSTR_22);
		sig_TILE0_HLC_hlc_instr_23.write((sc_uint<32>) TILE0_HLCINSTR_23);
		sig_TILE0_HLC_hlc_instr_24.write((sc_uint<32>) TILE0_HLCINSTR_24);
		sig_TILE0_HLC_hlc_instr_25.write((sc_uint<32>) TILE0_HLCINSTR_25);
		sig_TILE0_HLC_hlc_instr_26.write((sc_uint<32>) TILE0_HLCINSTR_26);
		sig_TILE0_HLC_hlc_instr_27.write((sc_uint<32>) TILE0_HLCINSTR_27);
		sig_TILE0_HLC_hlc_instr_28.write((sc_uint<32>) TILE0_HLCINSTR_28);
		sig_TILE0_HLC_hlc_instr_29.write((sc_uint<32>) TILE0_HLCINSTR_29);
		sig_TILE0_HLC_hlc_instr_30.write((sc_uint<32>) TILE0_HLCINSTR_30);
		sig_TILE0_HLC_hlc_instr_31.write((sc_uint<32>) TILE0_HLCINSTR_31);


        sig_TILE0_BOUNDARY_IN_in0.write((bool) 0);
        sig_TILE0_BOUNDARY_IN_in1.write((bool) 0);
        sig_TILE0_BOUNDARY_IN_in2.write((bool) 0);
        sig_TILE0_BOUNDARY_IN_in3.write((bool) 0);
        sig_TILE0_BOUNDARY_IN_in4.write((bool) 0);
        sig_TILE0_BOUNDARY_IN_in5.write((bool) 0);
        sig_TILE0_BOUNDARY_IN_in6.write((bool) 0);
        sig_TILE0_BOUNDARY_IN_in7.write((bool) 0);

        sig_TILE0_BOUNDARY_IN_ctrl0.write((sc_uint<32>) 0);
        sig_TILE0_BOUNDARY_IN_ctrl1.write((sc_uint<32>) 0);
        sig_TILE0_BOUNDARY_IN_ctrl2.write((sc_uint<32>) 0);
        sig_TILE0_BOUNDARY_IN_ctrl3.write((sc_uint<32>) 0);
        sig_TILE0_BOUNDARY_IN_ctrl4.write((sc_uint<32>) 0);
        sig_TILE0_BOUNDARY_IN_ctrl5.write((sc_uint<32>) 0);
        sig_TILE0_BOUNDARY_IN_ctrl6.write((sc_uint<32>) 0);
        sig_TILE0_BOUNDARY_IN_ctrl7.write((sc_uint<32>) 0);

        sig_TILE0_BOUNDARY_IN_out0.write((bool) 0);
        sig_TILE0_BOUNDARY_IN_out1.write((bool) 0);
        sig_TILE0_BOUNDARY_IN_out2.write((bool) 0);
        sig_TILE0_BOUNDARY_IN_out3.write((bool) 0);
        sig_TILE0_BOUNDARY_IN_out4.write((bool) 0);
        sig_TILE0_BOUNDARY_IN_out5.write((bool) 0);
        sig_TILE0_BOUNDARY_IN_out6.write((bool) 0);
        sig_TILE0_BOUNDARY_IN_out7.write((bool) 0);

        sig_TILE0_BOUNDARY_OUT_out0.write((bool) 0);
        sig_TILE0_BOUNDARY_OUT_out1.write((bool) 0);
        sig_TILE0_BOUNDARY_OUT_out2.write((bool) 0);
        sig_TILE0_BOUNDARY_OUT_out3.write((bool) 0);
        sig_TILE0_BOUNDARY_OUT_out4.write((bool) 0);
        sig_TILE0_BOUNDARY_OUT_out5.write((bool) 0);
        sig_TILE0_BOUNDARY_OUT_out6.write((bool) 0);
        sig_TILE0_BOUNDARY_OUT_out7.write((bool) 0);

    }
};

//SystemC sc_main function
int sc_main(int argc, char *argv[])
{
    sc_trace_file *tf = sc_create_vcd_trace_file("CLB");
    tf->set_time_unit(1, SC_NS);
    Top top("top", tf);
    sc_start(500000, SC_NS);
    sc_close_vcd_trace_file(tf);
    return 0;
}


#endif //CLB_SIM
